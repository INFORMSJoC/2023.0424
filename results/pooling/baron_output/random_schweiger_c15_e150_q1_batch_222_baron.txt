===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -248.125
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -627.958
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             5.41     -645.820         -628.007       
          1             1            16.63     -632.507         -628.007       
         17             0            35.50     -628.070         -628.007       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    35.72
 Total CPU time used:                35.56

 Total no. of BaR iterations:      17
 Best solution found at node:      11
 Max. no. of nodes in memory:       4
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -216.639
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -329.139
 Preprocessing found feasible solution with value -638.550
 Preprocessing found feasible solution with value -638.550
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.46     -644.632         -638.550       
*         9             1            39.25     -638.814         -638.550       
          9             0            40.66     -638.614         -638.550       

                         *** Normal completion ***            

 Wall clock time:                    40.83
 Total CPU time used:                40.66

 Total no. of BaR iterations:       9
 Best solution found at node:       9
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #443*****


objective value: -628.007281206
objective bound: -628.070088213
BARON solution time: 35.71

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3153528709397806
 0.0
 0.0
 0.6846471292684647
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9184137816700342
 0.0
 0.0
 1.081586218791416
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.45349447120333947
 0.14235667603922048
 0.0
 0.0
 0.0
 0.0
 4.464919311187697
 1.4015850518269595
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09178028866765817
 0.2066584614595897
 0.00908979000820589
 0.0
 0.0
 0.0
 0.7320018570329043
 1.6482229436848022
 0.07249642883658533
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12260421175883102
 0.36781263525418606
 0.0
 0.7500000001135981
 2.250000000208484
 0.0
 0.5830333048566357
 1.7490999144567858
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5443624835656664
 1.63308745058845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9339896857468746
 0.879504009048275
 0.18650630549839356
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.839402991685965
 2.281426106888873
 0.0
 0.0
 0.0
 1.5964458716846721
 1.2827250307773261
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4452445208309882
 0.22262226037635074
 0.0
 0.0
 1.5547554794302958
 0.7773777395784601
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.41903254152439834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.580967459452732
 1.0
 0.41903254074615665
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5568462563574508
 0.7784231277729311
 0.0
 0.4431537440354708
 0.22157687190222627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3026357169892599
 0.7926774500904579
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5923428005501153
 4.037025732907626
 0.0
 0.7907657729952143
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5280531917019924
 0.0
 1.407657199791106
 0.0
 1.697364283251817
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2185325657953746
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47194680915996806
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.580967458469667
 0.0
 1.564151137922405
 0.12049599163557329
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.781467434591851
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2073225497836811
 1.1762178546173947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20923422755318008
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05695394364135918
 0.0
 0.0
 0.0
 0.0
 0.009056371321686654
 0.0
 0.0
 5.813493695656804
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.335269384398712
 0.5958511472342846
 1.0953131668829774
 0.0
 0.0
 0.4904168470067941
 0.6647306160140773
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.12082909839066
 0.0
 0.3075285401354538
 0.0
 3.0
 0.667866781207339
 2.3321332192871327
 0.0
 2.879170902375948
 0.0
 2.4190325423206396
 0.0
 1.31535287082014
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6846471292061903
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.3321332190087563
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4527212295542915
 0.0
 0.0
 5.866504362934184
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1774499341310434
 0.0
 0.0
 5.420134306388842
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5923428005064216
 4.037025732591993
 0.0
 0.7907657729359294
 0.302635717142588
 0.7926774504929888
 0.0
 0.0
 2.0
 0.9999999995774994
 0.0
 1.58096745929846
 1.0
 0.4190325407052573
 2.0
 0.0
 0.0
 0.0
 0.4190325414929326
 0.0
 0.0
 2.0
 0.9999999999224947
 0.0
 0.0
 0.0
 4.435848863048145
 3.564151137406782
 0.0
 0.0
 1.9339896856187233
 0.8795040089899915
 0.18650630548602753
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.8237821456746243
 1.8548814050861933
 0.08158621884206704
 0.0
 4.918413782168911
 1.5439417277968341
 1.9184137815390563
 0.0
 0.0
 1.081586218717455
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7784231281018186
 0.0922033995690605
 0.9999999994914838
 0.0
 0.0
 0.061302105873551914
 0.2215768719958427
 0.0
 1.0
 0.0
 0.0
 0.37500000002228345
 0.0
 0.0
 0.0
 0.6401036372860972
 0.0
 0.11141330162288207
 0.0
 1.0
 0.22262226039360378
 0.29151665239890584
 0.0
 0.3598963627861761
 0.0
 1.0
 0.13904778430777712
 0.6576764354215447
 0.0
 0.262913332314523
 0.0
 0.0
 0.0
 0.0
 0.0
 0.34232356460906826
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7773777396387141
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8885866984084437
 0.0
 0.0
 0.9077966004760831
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5980388833776998
 0.0
 0.0
 0.2721812417546352
 0.0
 0.0
 1.0



=====Finished running Instance #443=====




*****Running Instance #444*****


objective value: -638.550208532
objective bound: -638.614069939
BARON solution time: 40.83

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.6569384760943904
 0.0
 0.0
 0.3430615239056096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.999999999500581
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5233358291049263
 1.4997916117155805
 0.3765391376847341
 0.0
 0.0
 0.0
 1.2213593174380195
 3.5002083887838387
 0.878765715272901
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2986848324062747
 1.5728464251037517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27952340272940335
 0.83857020818821
 0.0
 0.75
 2.25
 0.0
 0.44333696131028666
 1.33001088393086
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.52713963596031
 1.581418907880929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9632604890268985
 0.8465211513081626
 0.19021835966493894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.667583857641077
 3.094861285544032
 0.0
 0.0
 0.0
 0.14283346714515055
 0.09472138966974075
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.817768103172569
 0.40888405158628444
 0.0
 0.0
 1.1822318968274312
 0.5911159484137156
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7750158232768452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2249841767231548
 0.9183401836768808
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.543946746543775
 0.7719733732718876
 0.0
 0.45605325345622477
 0.22802662672811239
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4640168058315026
 0.5558938528100814
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9543791899321066
 4.744695147042365
 0.0
 0.7322046472904707
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.01774999664216287
 0.0
 1.0456208100678932
 0.0
 1.535983194332347
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22918021648744488
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23755485681489147
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22498417672315485
 0.0
 1.1895826752137721
 0.1534788486918374
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7708197835125551
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4441061471899186
 0.7013151675937254
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0125867229593213
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26779535270952926
 0.0
 0.0
 0.0
 0.0
 0.0
 0.036739510973101464
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08165981632311929
 5.809781639835641
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3159201198156625
 2.399666578505241
 1.019910658641584
 0.0
 0.0
 1.1180936109176134
 0.6840798801843372
 0.0
 2.143324360400036
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.762445143185109
 0.0
 0.0
 0.0
 3.0
 1.2266521547588534
 1.7733478452411466
 0.0
 0.2375548568148913
 0.0
 2.775015823276845
 0.0
 1.6569384760943904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3430615239056096
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.7733478452411469
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8715312575100267
 0.0
 0.0
 5.600333421494759
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.108558543841239
 0.0
 0.0
 6.431278984264942
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.9543791899321068
 4.744695147042365
 0.0
 0.7322046472904707
 0.4640168058315026
 0.5558938528100814
 0.0
 0.0
 2.0
 1.0
 0.0
 1.2249841767231548
 0.9183401836768808
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7750158232768452
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 4.810417324786227
 3.1895826752137726
 0.0
 0.0
 1.9632604890268985
 0.8465211513081626
 0.19021835966493894
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.2986848324062747
 1.5728464251037517
 0.0
 1.7446951465429457
 5.000000000499419
 1.2553048529576352
 2.0
 0.0
 0.0
 0.999999999500581
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7719733732718875
 0.2999583223131551
 1.0
 0.0
 0.0
 0.13976170136470167
 0.22802662672811239
 0.0
 1.0
 0.0
 0.0
 0.375
 0.0
 0.0
 0.0
 0.9703056428981386
 0.0
 0.0
 0.0
 1.0
 0.40888405158628444
 0.22166848065514333
 0.0
 0.029694357101861413
 0.0
 1.0
 0.0
 0.8284692380471952
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1715307619528048
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.5911159484137156
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7000416776868449
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.263569817980155
 0.0
 0.0
 0.9999999999999998



=====Finished running Instance #444=====




