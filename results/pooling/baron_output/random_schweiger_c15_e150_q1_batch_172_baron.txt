===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -185.689
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -455.352
 Preprocessing found feasible solution with value -460.679
 Preprocessing found feasible solution with value -630.543
 Preprocessing found feasible solution with value -631.466
 Preprocessing found feasible solution with value -631.521
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            23.11     -650.553         -631.537       
          1             1            29.28     -648.872         -631.537       
         33+            7            59.19     -647.800         -631.537       
        190            13            91.80     -647.800         -631.537       
       3150             8           121.68     -647.800         -631.537       
       4433            12           151.57     -647.800         -631.537       
       6342+            6           181.47     -647.800         -631.537       
       6603+            6           211.36     -647.800         -631.537       
       9362             7           241.27     -647.800         -631.537       
      12190+            6           271.18     -647.800         -631.537       
      15078+            6           301.08     -647.800         -631.537       
      15297+            7           331.00     -647.800         -631.537       
      16611             9           360.89     -647.800         -631.537       
      19457             8           390.78     -647.800         -631.537       
      23014+            8           420.68     -647.800         -631.537       
      23511            10           450.57     -647.800         -631.537       
      27435            11           480.47     -647.800         -631.537       
      28843+            7           510.37     -647.800         -631.537       
      32129             9           540.26     -647.800         -631.537       
*     32206+            4           546.82     -647.800         -631.601       
*     32214+            4           550.38     -647.800         -631.664       
*     32220+            7           551.15     -647.800         -631.727       
*     32221+            8           551.20     -647.800         -631.790       
*     32222+            8           551.24     -647.800         -631.853       
*     32222+            8           551.33     -647.800         -631.917       
*     32223             9           551.35     -647.800         -632.038       
*     32228             6           551.63     -647.800         -632.103       
*     32239+            3           554.36     -647.800         -632.166       
*     32253+            6           556.43     -647.800         -632.230       
*     32261+            7           558.16     -647.800         -632.293       
*     32263+            6           558.53     -647.800         -632.356       
*     32264+            7           558.62     -647.800         -632.642       
*     32264+            5           558.69     -647.800         -632.705       
*     32271+            6           560.28     -647.800         -632.769       
*     32272+            5           560.43     -647.800         -632.832       
*     32273+            4           560.48     -647.800         -632.895       
*     32274+            4           560.53     -647.800         -632.958       
*     32280             3           560.75     -647.800         -633.040       
      36128             9           590.64     -647.743         -633.040       
      39989            10           620.54     -647.743         -633.040       
      44361             8           650.43     -647.743         -633.040       
      47293             8           680.32     -646.808         -633.040       
      51573             6           710.21     -646.808         -633.040       
      54627             9           740.10     -646.808         -633.040       
      57308             0           766.53     -633.103         -633.040       

                         *** Normal completion ***            

 Wall clock time:                   769.39
 Total CPU time used:               766.53

 Total no. of BaR iterations:   57308
 Best solution found at node:   32280
 Max. no. of nodes in memory:      17
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -229.771
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.932
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            17.43     -637.201         -631.932       
          7             0            30.42     -631.995         -631.932       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    31.88
 Total CPU time used:                31.74

 Total no. of BaR iterations:       7
 Best solution found at node:       1
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #343*****


objective value: -633.039690842
objective bound: -633.103001142
BARON solution time: 769.39

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3576306812060808
 0.0
 0.0
 0.6423693187939192
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.995071052949074
 0.0
 1.004928947050926
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0302343194452548
 4.304205412251814
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0112773613317192
 0.8404359160582039
 0.004928947050925883
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8987195764990485
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6708118533750245
 2.0124355601250734
 0.0
 0.5601445097087896
 1.6804335291263688
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7690436369161859
 2.3071309107485583
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.799715851100908
 0.9277622060291087
 0.2725219428699832
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.953668031908049
 3.0765662875372066
 0.0
 0.0
 0.0
 0.545377493186229
 0.42438818736851536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06917704991730611
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5062813074432279
 0.25314065372161393
 0.0
 0.0
 1.4937186925567723
 0.7468593462783861
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.33340115904217904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.666598840957821
 1.0
 0.33340115904217904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5603426461983134
 0.7801713230991569
 0.0
 0.4396573538016866
 0.2198286769008433
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.419595467785838
 0.5635249279543999
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8989653675322208
 4.668786351111262
 0.0
 0.7651216909769233
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.0
 1.1010346324677793
 0.0
 1.5804045322141618
 0.0
 0.0
 0.997812489846559
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22042464879891452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9697656805547452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.666598840957821
 0.0
 1.500954474905722
 0.07223779397089125
 1.930822950082694
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7795753512010855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43647507204560004
 0.9887226386682807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10128042350095139
 0.0
 1.6957945877481881
 0.0
 0.0
 0.9920107680782532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23487830902307674
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20028414889909207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.722549110079091
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3405139692974704
 5.334439731697069
 0.9831203957402379
 0.0
 0.0
 0.0
 0.6594860307025299
 0.0
 3.0
 0.0
 0.0
 2.683247413500098
 0.0
 0.0
 0.0
 7.030234319445256
 0.0
 0.0
 0.0
 3.0
 0.7594219611648418
 2.2405780388351584
 0.0
 0.9697656805547443
 0.0
 2.333401159042179
 0.06917704991730611
 1.3576306812060808
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6423693187939192
 0.0
 0.0
 0.0
 2.8987195764990483
 0.0
 0.0
 2.2405780388351584
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8566422244408491
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.076174547664744
 0.0
 0.0
 6.332873409620406
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8989653675322208
 4.668786351111262
 0.0
 0.7651216909769233
 0.4195954677858382
 0.5635249279543999
 0.0
 0.0
 2.0
 1.0000000000000002
 0.0
 1.666598840957821
 1.0000000000000002
 0.33340115904217904
 2.0
 0.0
 0.0
 0.0
 0.33340115904217904
 0.0
 0.0
 2.0
 1.0
 0.06917704991730611
 0.0
 0.0
 4.499045525094278
 3.500954474905722
 0.0
 0.0
 1.799715851100908
 0.9277622060291087
 0.2725219428699832
 2.0
 6.0
 0.0
 1.8987195764990485
 1.0
 0.0
 0.0
 1.0112773613317192
 0.8404359160582039
 0.004928947050925883
 1.0302343194452548
 4.304205412251812
 0.0
 1.995071052949074
 0.0
 1.004928947050926
 0.0
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7801713230991567
 1.0
 1.0
 0.0
 0.0
 0.0
 0.2198286769008433
 0.0
 0.9999999999999999
 0.0
 0.0
 0.33540592668751223
 0.0
 0.0
 0.0
 0.878779289930657
 0.0
 0.0
 0.0
 1.0
 0.25314065372161393
 0.2800722548543948
 0.0
 0.12122071006934299
 0.0
 1.0
 1.0
 0.6788153406030404
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3211846593969596
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7468593462783861
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38452181845809297
 0.0
 0.0
 1.0



=====Finished running Instance #343=====




*****Running Instance #344*****


objective value: -631.931517532
objective bound: -631.994716961
BARON solution time: 31.87

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.4486690114657936
 0.0
 0.0
 0.5513309875332796
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9908407088856386
 0.0
 0.0
 1.0091592910332499
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2010817763383266
 0.7241758643051835
 0.0
 0.0
 0.0
 0.0
 3.7897589334186716
 2.2849834251021277
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24396385989488845
 0.8878655291994786
 0.0020409129500128464
 0.0
 0.0
 0.0
 0.8509070151773952
 3.0967332934435667
 0.0071183785471441875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999997773924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1817707373552224
 0.5453122119935708
 0.0
 0.7500000000048047
 2.2499999999365428
 0.0
 0.5576936864989553
 1.6730810594249346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5105355763616989
 1.5316067290143012
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9329306047738744
 0.8335553653002451
 0.23351402989249692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.02206816973869
 1.3406893892072813
 0.0
 0.0
 0.0
 1.97793182930652
 0.6593106093747131
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3848863521937875
 0.0
 0.0
 0.0
 0.46317844579842504
 0.0
 0.5128168363810668
 0.256408418056266
 0.0
 0.0
 1.4871831637822912
 0.7435915815002736
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999989366604
 0.0
 0.0
 0.0
 0.9845988217065492
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0154011784915984
 0.8756976697834103
 1.108901151972762
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4728769854605617
 0.7364384914153166
 0.0
 0.527123014718354
 0.26356150688289165
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4246943225686988
 0.5547459698731967
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.8819395595868575
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5454190181782688
 0.0
 0.0
 0.0
 1.5753056764904403
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21860870571200747
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999988000625
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.45458098206414654
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.015401178330894726
 0.0
 0.0
 0.16644463424786138
 0.15193520199818206
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7813912944191852
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44525402846871265
 0.9051291249006005
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06706939416604996
 0.0
 0.12430233071873079
 5.766485970541172
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2093154778543234
 1.925257640788438
 0.9794402926059766
 0.0
 0.0
 0.727082949413659
 0.7906845220151542
 0.0
 3.0
 0.0
 0.0
 2.9999999999988134
 0.0
 0.0
 0.0
 5.362757559951274
 0.0
 1.1338703020443799
 0.0
 3.0
 0.7692252544373328
 2.230774745987715
 0.0
 2.637242439352205
 0.0
 2.9845988223558146
 1.3848863522707244
 1.448669012761006
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5513309881043705
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.230774745282565
 0.0
 2.9999999999640274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.954758687168106
 0.0
 0.0
 6.074742358785869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4631784458326235
 0.0
 0.0
 2.042142305441157
 0.0
 0.0
 4.881939559681928
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 1.881939559551003
 0.0
 1.0
 0.424694323832757
 0.5547459715254514
 0.0
 0.0
 2.0
 0.9999999983102029
 0.0
 1.015401178408078
 0.8756976697060112
 1.1089011518837233
 2.0
 0.0
 0.0
 0.0
 0.9845988222787504
 0.0
 0.0
 2.0
 0.9999999995489399
 1.8480647983080742
 0.0
 0.0
 5.999999999766296
 1.9999999989450898
 0.0
 0.0
 1.932930604857797
 0.8335553653443949
 0.23351402987277486
 2.0
 6.0
 0.0
 2.0
 0.9999999998232559
 0.0
 0.0
 1.094870875274735
 3.9845988233912863
 0.009159291367114858
 0.0
 4.990840709691892
 3.0091592893744283
 1.9908407088865279
 0.0
 0.0
 1.0091592910685634
 1.9999999992116082
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7364384926829886
 0.24065720511024344
 0.9999999970277805
 0.0
 0.0
 0.09088536866511142
 0.263561507350172
 0.0
 1.0
 0.0
 0.0
 0.37499999998561867
 0.0
 0.0
 0.0
 0.6703446949837775
 0.0
 0.22282432148209963
 0.0
 1.0
 0.256408418173643
 0.27884684323514014
 0.0
 0.32965530490382117
 0.0
 0.9999999994313105
 0.7493711007656164
 0.7243345060209833
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27566549387786277
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7435915818401578
 0.0
 0.9999999999726746
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7771756783306477
 0.0
 0.0
 0.7593427949053665
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25062889906403263
 0.0
 0.0
 0.2552677881670316
 0.0
 0.0
 1.0



=====Finished running Instance #344=====




