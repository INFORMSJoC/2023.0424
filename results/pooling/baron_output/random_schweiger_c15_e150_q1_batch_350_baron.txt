===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.16     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.18
 Total CPU time used:                 0.17

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -629.525
 Solving bounding LP
 Starting multi-start local search
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            11.41     -642.743         -629.584       
          1             1            16.03     -642.159         -629.584       
         16+            5            46.89     -640.673         -629.584       
         31+            4            76.79     -640.673         -629.584       
        107+            4           106.68     -638.694         -629.584       
        396+           11           136.57     -638.694         -629.584       
        657+           11           166.45     -638.694         -629.584       
        903+            8           196.34     -638.694         -629.584       
       3724            11           226.23     -638.694         -629.584       
       7116            11           256.11     -638.694         -629.584       
       8859+            4           285.99     -638.694         -629.584       
       9160             7           315.88     -638.694         -629.584       
      11927            10           345.77     -638.694         -629.584       
      15658            10           375.65     -638.694         -629.584       
      18061+            7           405.55     -638.694         -629.584       
      18327+           10           435.44     -638.694         -629.584       
      18718             6           465.34     -638.694         -629.584       
      22416             8           495.23     -638.694         -629.584       
      26461             7           525.11     -638.694         -629.584       
      29718+            3           554.99     -638.694         -629.584       
      32444            10           584.87     -638.694         -629.584       
      33518+            6           614.76     -638.694         -629.584       
      34718            12           644.64     -638.694         -629.584       
      36201             9           674.52     -638.694         -629.584       
      39830            11           704.41     -638.694         -629.584       
      40112+            8           734.29     -638.694         -629.584       
      40874             9           764.18     -638.694         -629.584       
      42666             7           794.06     -638.694         -629.584       
      46746            13           823.95     -638.694         -629.584       
      48405             8           853.84     -638.694         -629.584       
      51265             9           883.72     -638.694         -629.584       
      54672            12           913.60     -638.495         -629.584       
      58913            14           943.49     -638.495         -629.584       
      60865+            7           973.39     -638.495         -629.584       
      61417            12          1003.27     -638.495         -629.584       
      65160             9          1033.15     -638.495         -629.584       
      69069             8          1063.04     -638.495         -629.584       
      72020+            4          1092.95     -638.495         -629.584       
      74746             8          1122.83     -636.640         -629.584       
      75189             0          1149.21     -629.647         -629.584       

                         *** Normal completion ***            

 Wall clock time:                  1153.81
 Total CPU time used:              1149.21

 Total no. of BaR iterations:   75189
 Best solution found at node:       1
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -216.605
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -501.726
 Preprocessing found feasible solution with value -615.406
 Preprocessing found feasible solution with value -615.406
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.76     -630.860         -615.406       
         23             4            46.65     -624.426         -615.406       
*        49             3            57.16     -624.426         -615.451       
*        93             7            69.60     -624.426         -615.485       
        190             6            99.50     -624.088         -615.485       
        280             3           129.42     -624.088         -615.485       
       2599+            6           159.31     -617.945         -615.485       
       2609             0           166.84     -615.546         -615.485       

                         *** Normal completion ***            

 Wall clock time:                   167.50
 Total CPU time used:               166.84

 Total no. of BaR iterations:    2609
 Best solution found at node:     290
 Max. no. of nodes in memory:      13
 
 All done
===========================================================================



*****Running Instance #699*****


objective value: -629.583934071
objective bound: -629.646898761
BARON solution time: 1153.8

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.9104602092179583
 0.82450429337299
 0.0
 1.0895397910511568
 0.9866770962935774
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003317495
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.313677696533517
 0.5498339375771333
 0.0
 0.0
 0.0
 0.0
 3.686322304356095
 1.5428937501796243
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2126147746455722
 0.9874441690378614
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5302327671209899
 1.5906983012101512
 0.0
 0.48518921225969897
 1.4555676366306998
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9845780209752555
 2.9537340627301196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.988439062840672
 0.8728693053494158
 0.13869163195846157
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.742899394475341
 2.419774827737346
 0.0
 0.0
 0.0
 0.5544510062277137
 0.28287477271191735
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4352552019092074
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7061621011168117
 0.353081050471693
 0.0
 0.0
 1.2938378991536132
 0.6469189494121241
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8047996764520582
 0.0
 0.0
 0.0
 0.2842735435789672
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7157264573775355
 1.0
 0.28427354292120355
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4992290250325429
 0.7496145121403488
 0.0
 0.5007709754208338
 0.2503854875960109
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3225518141870419
 0.7717713690367813
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8414456401822136
 3.6229987709394065
 0.0
 0.9505905477635103
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.1952003241797467
 1.5201207818905533
 0.0
 1.1585543602026391
 0.0
 1.6774481858187942
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2535088851434642
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999997355313
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4798792182886428
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9109267801132201
 0.0
 0.702649600586345
 0.1271306950761487
 1.5647447977527749
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7464911148416884
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22822863028923385
 0.7873852255667431
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3989794513773945
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04940945279598924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.011560937942136225
 0.0
 0.0
 4.050126979503786
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.248843537389463
 1.8635116342323985
 1.0943231832238232
 0.0
 0.0
 0.0
 0.7511564630896064
 0.0
 3.0
 0.0
 0.0
 2.1209310683311413
 0.0
 0.0
 0.0
 7.1626742222126865
 0.0
 0.0
 0.0
 3.0
 1.0592431515885048
 1.9407568488903988
 0.0
 0.8373257789461934
 0.0
 2.0890732209306386
 0.43525520217212105
 1.7349645025909484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.076216887344734
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.9407568485657374
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2000589436834335
 0.0
 0.0
 5.229216054879627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.938312083705375
 0.0
 0.0
 5.415034958940497
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8414456400866467
 3.622998770578005
 0.0
 0.9505905476575885
 0.32255181454860027
 0.771771369913322
 0.0
 0.0
 2.0
 0.9999999995753773
 0.0
 1.7157264572034003
 0.9999999999933029
 0.28427354288231127
 1.8047996763269878
 0.0
 0.0
 0.0
 0.28427354354815354
 0.0
 0.0
 2.0
 0.999999999829436
 0.43525520260873746
 0.0
 0.0
 5.297350400155698
 2.702649600124292
 0.0
 0.0
 1.9884390626908068
 0.8728693053468511
 0.13869163195158413
 2.0
 6.0
 0.0
 2.0
 0.9999999999766725
 0.0
 0.0
 1.2126147746932696
 0.9874441690752621
 0.0
 0.0
 5.0000000006125696
 2.092727687598154
 1.999999999957559
 0.0
 0.0
 1.0000000002331666
 2.0
 1.8111813895362212
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7496145124560653
 0.26273553927634363
 0.9999999988601607
 0.0
 0.0
 0.0
 0.25038548769184427
 0.0
 1.0
 0.0
 0.0
 0.26511638352752714
 0.0
 0.0
 0.0
 0.8953342777455666
 0.0
 0.0
 0.0
 1.0
 0.3530810505290789
 0.24259460609804578
 0.0
 0.10466572235861508
 0.0
 1.0
 0.9999999983924764
 0.45523010457866325
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5447698954894533
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6469189495224613
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999999582602
 0.0
 0.0
 0.7372644607827229
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4922890104433603
 0.0
 0.0
 1.0



=====Finished running Instance #699=====




*****Running Instance #700*****


objective value: -615.484644282
objective bound: -615.546198902
BARON solution time: 167.5

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1965005566008595
 0.0
 0.0
 0.8034994430367884
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9482167252222522
 0.0
 0.0
 1.0517832750281617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03453903028524719
 0.02079640245476298
 0.0
 0.0
 0.0
 0.0
 4.913677695322102
 2.9585896891457923
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09993338045372296
 0.3238383870812051
 0.0
 0.0
 0.0
 0.0
 0.897114605289348
 2.907138190439999
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998339901
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2779971882258423
 0.8339915645252889
 0.0
 0.750000000279512
 2.2500000006514953
 0.0
 0.49611081273681096
 1.4883324380438532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47589199914667246
 1.4276759972747166
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998677802
 0.9960803338084312
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07020506309795717
 0.03373961726772209
 0.0
 0.0
 0.0
 3.3068346699278925
 1.5892206495122927
 0.0
 0.0
 0.0
 2.0262238398544437
 0.9737761600372328
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.202843346805115
 0.0
 0.0
 0.0
 0.797156653085877
 0.0
 0.6770378331947624
 0.33851891637560216
 0.0
 0.0
 1.3229621670211356
 0.661481083073274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.8277130028087619
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.172286998051239
 0.9035679944161001
 0.9241450078761186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5388567880476223
 0.7694283930212482
 0.0
 0.4611432120628662
 0.23057160572910806
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41573408571013915
 0.8743832655162731
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2297483802250913
 2.0964689017850078
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.591903766120967
 0.0
 0.7702516201986025
 0.0
 1.5842659132054475
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23928175524276168
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999988677186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40809623439368287
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17228699618919252
 0.0
 0.5967364281089331
 0.003919666556394837
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7607182447781211
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12561673159843514
 1.002952014383971
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05178327484064139
 0.0
 0.0
 0.0
 0.09643200613962319
 5.999999998055558
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.308285181819169
 0.05533543274001017
 1.2901173513983406
 0.0
 0.0
 1.1119887528167525
 0.6917148180858321
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.10394468036567925
 0.0
 4.896055319958863
 0.0
 0.42377176761706875
 0.0
 3.0
 1.0155567495703646
 1.9844432508422338
 0.0
 3.0
 0.0
 2.8277130046233547
 1.2028433469241528
 1.1965005580595636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8034994440435113
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.9844432500944096
 0.0
 2.9960803338017485
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.804252796038447
 0.0
 0.0
 7.872267384657073
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7971566531731431
 0.0
 0.0
 1.9035679964832957
 0.0
 0.0
 4.326217282111477
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.229748380080911
 2.096468901587929
 0.0
 0.9999999999651031
 0.4157340871113627
 0.874383268473604
 0.0
 0.0
 2.0
 0.9999999987842276
 0.0
 1.1722869979141617
 0.9035679942958874
 0.9241450077547909
 2.0
 0.0
 0.0
 0.0
 0.827713002759722
 0.0
 0.0
 2.0
 0.9999999994060904
 1.9999999999834936
 0.0
 0.0
 5.403263572621297
 2.5967364266926545
 0.0
 0.0
 2.0
 0.9960803339567899
 0.0
 2.0
 6.0
 0.0
 2.0
 0.9999999997808381
 0.0
 0.0
 0.997047985814584
 3.230976577785293
 0.0
 0.0
 4.9482167257197185
 2.979386091664163
 1.9482167251050855
 0.0
 0.0
 1.051783274978647
 1.999999999563704
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.769428393975548
 0.006980096508986339
 0.9999999966199341
 0.0
 0.0
 0.1389985940898596
 0.23057160602593837
 0.0
 1.0
 0.0
 0.0
 0.37500000010944695
 0.0
 0.012993085020510154
 0.0
 0.6120069149861901
 0.0
 0.10022925864257068
 0.0
 1.0
 0.33851891657647354
 0.24805540634243
 0.0
 0.3750000000296293
 0.0
 1.0
 0.6014216734079931
 0.5982502784312741
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40174972160637235
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6614810834667603
 0.0
 0.9999999998759769
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8997707412767606
 0.0
 0.0
 0.9930199034713993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39857832654670006
 0.0
 0.0
 0.23794599954761828
 0.0
 0.0
 1.0



=====Finished running Instance #700=====




