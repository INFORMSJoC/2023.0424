===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -192.300
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.976
 Preprocessing found feasible solution with value -625.976
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            14.64     -638.817         -625.976       
         11             0            45.42     -626.039         -625.976       

                         *** Normal completion ***            

 Wall clock time:                    45.61
 Total CPU time used:                45.42

 Total no. of BaR iterations:      11
 Best solution found at node:       1
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -202.670
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -620.567
 Preprocessing found feasible solution with value -624.534
 Preprocessing found feasible solution with value -624.534
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            26.42     -639.776         -624.534       
         27+            4            56.32     -637.892         -624.534       
        292            10            86.23     -637.892         -624.534       
       2338             9           116.12     -637.892         -624.534       
       5265             4           146.03     -637.892         -624.534       
       7218+            7           175.94     -636.901         -624.534       
       7265+            5           205.84     -636.901         -624.534       
       7298+            5           235.75     -636.474         -624.534       
       7391+            6           265.65     -636.474         -624.534       
       7445+            6           295.54     -636.474         -624.534       
       7582+            9           325.43     -636.474         -624.534       
       7643+            7           355.37     -634.564         -624.534       
       7652+            5           385.27     -634.564         -624.534       
       7704+            8           415.18     -634.564         -624.534       
       7749+            8           445.09     -634.564         -624.534       
       7833+            7           474.98     -634.564         -624.534       
       7929+            5           504.87     -634.564         -624.534       
       7979+            5           534.76     -634.564         -624.534       
       8027+            4           564.66     -634.564         -624.534       
       8165+            4           594.57     -633.565         -624.534       
       8223+            5           624.49     -633.565         -624.534       
       8291+            3           654.38     -632.955         -624.534       
       8362+            3           684.30     -629.815         -624.534       
       8479             0           707.57     -624.596         -624.534       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   710.30
 Total CPU time used:               707.63

 Total no. of BaR iterations:    8479
 Best solution found at node:     580
 Max. no. of nodes in memory:      14
 
 All done
===========================================================================



*****Running Instance #957*****


objective value: -625.976224171
objective bound: -626.038828054
BARON solution time: 45.61

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0713277571958986
 1.9286722433352865
 0.0
 0.8123403920898954
 1.4624267464725553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9902794934209396
 0.0
 0.0
 1.0097205067404875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.857685628520605
 1.7235176998520252
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.132593865855823
 1.2862028061162922
 0.35662453661242355
 1.1492288123108463
 0.0
 0.0
 0.0
 0.0
 0.659423770648409
 2.125004644807342
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.999999999942432
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04183067126343375
 0.12549201377363878
 0.0
 0.7500000002587042
 2.250000000630355
 0.0
 0.5586345583004085
 1.6759036747913962
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6495347704440244
 1.9486043112052196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.899871288468035
 0.8905852309476533
 0.20954348060177466
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.306646299856012
 1.357013647077206
 0.0
 0.0785351187766318
 0.0
 1.693353700993126
 0.533571582461727
 0.0
 0.030879650874371833
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14386632825902956
 0.0
 0.5103078449091398
 0.25515392239042456
 0.0
 0.0
 1.4896921553546623
 0.7448460774867222
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8802625807954492
 0.0
 0.0
 0.0
 0.2845561043806428
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7154438965355803
 1.0
 0.2845561037712989
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4184225794488596
 0.6267074273676141
 0.08250386223728545
 0.5815774210013236
 0.2569607214463425
 0.0338279890309264
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.715923285446566
 0.9711514384807272
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.705723391738986
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.1197374199013014
 1.5503941530461043
 0.0
 0.0
 0.0
 1.2840767143360214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27476713784190065
 0.0
 0.41629328317990194
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999996014752
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44960584764429923
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8351813140221861
 0.0
 0.0
 0.0
 1.8561336718049282
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7252328623504765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.028848560945667276
 0.9839516929690942
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11633185175606912
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10012871208684039
 0.0
 0.0
 0.009720507067841283
 0.0
 0.0
 0.0
 0.0
 1.983064247433442
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.127633869053759
 4.5812033284463825
 1.6870747241351047
 0.0
 0.0
 0.16732268512077286
 0.8723661314785925
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.7421950660329895
 0.0
 1.5058533489650532
 0.0
 3.0
 0.7654617672995644
 2.2345382331510133
 0.0
 2.2578049346335622
 0.0
 2.1648186868953414
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2747671385893873
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2345382328413845
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.7844284154771644
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1438663282993388
 0.0
 0.0
 2.598139081704074
 3.418796672052076
 0.0
 5.7057233919714845
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.7057233914876666
 0.0
 0.9999999999758774
 0.7159232860154018
 0.9711514392550322
 0.0
 0.0
 2.0
 0.8836681487009806
 0.11633185118033045
 1.7154438963681635
 0.9999999999901955
 0.2845561037488839
 1.8802625806357036
 0.0
 0.0
 0.0
 0.28455610434862805
 0.0
 0.0
 2.0
 0.9999999998337064
 0.14386632854536174
 0.0
 0.0
 6.0
 1.8905852295697076
 0.0
 0.10941476944007121
 1.8998712885233384
 0.8905852309767454
 0.20954348060081524
 2.0
 6.0
 0.0
 2.0
 0.9999999999073315
 0.0
 0.0
 1.0160483072614446
 3.274233457132413
 0.0
 0.0
 4.990279494110888
 3.009720505799475
 1.9902794932567602
 0.0
 0.0
 1.0097205066948955
 1.8836681491860576
 3.391098989644872
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7092112896738556
 0.5726504160542254
 0.9999999992042731
 0.0
 0.0
 0.020915335628737503
 0.29078871048357297
 0.0
 1.0
 0.0
 0.0
 0.37500000010583456
 0.0
 0.0
 0.0
 0.717774383244443
 0.0
 0.3509917137424437
 0.0
 1.0
 0.25515392243383206
 0.27931727913249754
 0.0
 0.2822256168132076
 0.0
 1.0
 0.0
 0.5687454861176053
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4312545139323439
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7448460776156591
 0.0
 0.9999999999811389
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6490082862537648
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999980073292
 0.0
 0.0
 0.3247673852015558
 0.427349584002562
 0.0
 1.0



=====Finished running Instance #957=====




*****Running Instance #958*****


objective value: -624.533896971
objective bound: -624.596356604
BARON solution time: 710.3

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0636355123312669
 1.9363644880079092
 0.0
 0.7937583220256985
 1.4450489937691458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002960532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0881914313852764
 2.913983775839558
 1.0459266923192887
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06313307517486848
 2.086016225031385
 0.7487413171141735
 0.33656764327683836
 1.3935448827088566
 0.0
 0.0
 0.0
 0.0
 0.6653331865763576
 2.754785482117369
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05065885080206445
 0.15197655239773175
 0.0
 0.7500000001134464
 2.25000000020503
 0.0
 0.5202942977834663
 1.5608828932428875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6790468515929673
 2.037140554651986
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8727476014855298
 0.7500715178118704
 0.37718088099226144
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.5071444321522005
 1.6063161014910765
 0.0
 0.2293987087871583
 0.0
 0.49285556888977733
 0.143755415491207
 0.0
 0.020529774098317053
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6125485396902179
 0.3062742697954631
 0.0
 0.0
 1.3874514605708987
 0.6937257301729876
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.8984018805782512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1015981203740604
 0.954182602750519
 0.9442192771637654
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.44724244710378
 0.6204283749684172
 0.10319284846175
 0.5527575532885766
 0.23696545884530784
 0.03941331775249638
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6113011802691187
 0.6163080912679318
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1281719899198857
 3.2611127149181924
 0.0
 0.8295651490945622
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.1915347354366568
 0.0
 0.8718280104658982
 0.0
 1.3886988201597512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.238807315539396
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6571407587735636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1015981194192254
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7611926848398191
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38369190904405176
 0.9980991704674801
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14260616676376048
 0.0
 0.1704348514606138
 0.0
 0.0
 0.0
 0.0
 0.0
 0.028553458043382062
 0.0
 0.0
 0.0
 0.0
 0.09869894118324647
 0.0
 0.045817397836935475
 2.2414056384277936
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1708636705339477
 4.048101899544122
 1.2276092713403945
 0.0
 0.0
 0.20263540319700687
 0.8291363298863809
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.342859242245857
 0.0
 1.7301125259532346
 0.0
 3.0
 0.9188228094856811
 2.0811771910067676
 0.0
 0.657140758463225
 0.0
 2.8984018813717
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2388073157524184
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0811771907438863
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.420118668629822
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.716187406212633
 2.897890617320427
 0.0
 5.218849853834162
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.1281719898321958
 3.2611127146606402
 0.0
 0.8295651490306374
 0.6113011802343864
 0.6163080912329248
 0.0
 0.0
 2.0
 0.8573938337300951
 0.14260616620033684
 1.1015981202653302
 0.9541826026563593
 0.9442192770705905
 2.0
 0.0
 0.0
 0.0
 0.8984018804954819
 0.0
 0.0
 2.0
 0.9999999999362211
 0.0
 0.0
 0.0
 6.0
 1.7500715168517433
 0.0
 0.24992848286778999
 1.8727476013638646
 0.7500715177631359
 0.37718088096775093
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.001900829821852
 4.148330364694207
 0.0
 0.15132450655382013
 5.000000000661739
 1.7946680093583771
 2.0
 0.0
 0.0
 1.0000000002277696
 1.8573938342876404
 3.381413481649969
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7236212234805147
 0.5827967550907796
 1.0
 0.0
 0.0
 0.02532942539877956
 0.2763787766170248
 0.0
 1.0
 0.0
 0.0
 0.3750000000222702
 0.0
 0.0
 0.0
 0.9178574052683536
 0.0
 0.335929099227265
 0.0
 1.0
 0.30627426981498984
 0.26014714886439
 0.0
 0.0821425948068608
 0.0
 1.0
 0.08511825568251101
 0.5726494256073841
 0.0
 0.17332028442538167
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42735057443020574
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6937257302172408
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.66407090080455
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7415614598921073
 0.0
 0.0
 0.33952342576417843
 0.41720324495106087
 0.0
 1.0



=====Finished running Instance #958=====




