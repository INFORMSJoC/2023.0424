===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -209.600
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.330
 Preprocessing found feasible solution with value -624.330
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.84     -632.701         -624.330       
         39+            6            45.73     -628.684         -624.330       
        171+            4            75.64     -628.684         -624.330       
        267+            4           105.54     -627.866         -624.330       
        564+            4           135.87     -627.866         -624.330       
       4584             8           165.76     -627.765         -624.330       
       9594             8           195.66     -627.765         -624.330       
      15188             9           225.55     -627.765         -624.330       
      20571             7           255.43     -627.765         -624.330       
      24899            14           285.31     -627.723         -624.330       
      29392             9           315.20     -627.723         -624.330       
      33694            14           345.09     -627.723         -624.330       
      38366             6           376.31     -627.723         -624.330       
      43614             9           406.20     -627.723         -624.330       
      47515+            4           436.09     -627.723         -624.330       
      47612+            2           465.99     -626.083         -624.330       
      47613             0           466.56     -624.393         -624.330       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   468.44
 Total CPU time used:               466.67

 Total no. of BaR iterations:   47613
 Best solution found at node:    1833
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -192.776
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -358.900
 Preprocessing found feasible solution with value -623.565
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            13.96     -645.672         -629.026       
*         1             1            16.35     -644.221         -629.141       
          1             1            17.56     -644.221         -629.141       
         18+            3            47.48     -641.913         -629.141       
        331            10            77.67     -641.913         -629.141       
       1470             5           107.59     -641.913         -629.141       
       1668+            7           137.49     -641.344         -629.141       
       1685+            3           167.41     -641.344         -629.141       
       1803+            6           197.31     -641.344         -629.141       
       1873+            7           227.24     -641.344         -629.141       
       1896+            5           257.14     -641.344         -629.141       
       1935+            4           287.07     -641.344         -629.141       
       1961+            3           317.00     -641.344         -629.141       
       2061+            8           346.91     -641.114         -629.141       
       2083+            6           376.81     -641.114         -629.141       
       2298+            7           406.72     -641.114         -629.141       
       2450+            5           436.66     -641.114         -629.141       
       2506             5           466.57     -641.114         -629.141       
       2645+            8           496.47     -641.114         -629.141       
       2934+           10           526.40     -641.114         -629.141       
       3119            12           556.30     -641.114         -629.141       
       3407+            9           586.20     -641.114         -629.141       
       5394            12           616.10     -641.114         -629.141       
       6098+            6           646.00     -641.114         -629.141       
       6773            13           675.90     -641.114         -629.141       
      10583+            4           705.81     -641.114         -629.141       
      13049            14           735.71     -640.960         -629.141       
      13658             8           765.64     -640.960         -629.141       
      14315             9           795.53     -640.960         -629.141       
      15819             8           825.44     -640.960         -629.141       
      15885+            4           855.36     -640.960         -629.141       
      15999+            3           885.28     -640.960         -629.141       
      16046+            4           915.19     -640.960         -629.141       
      16180+            9           945.10     -638.387         -629.141       
      16815            11           974.99     -638.387         -629.141       
      21007            11          1004.88     -638.387         -629.141       
      24668+            9          1034.80     -638.387         -629.141       
      24850            11          1064.71     -638.387         -629.141       
      25122+           10          1094.61     -638.387         -629.141       
      27018            18          1124.50     -638.387         -629.141       
      29471             9          1154.40     -638.387         -629.141       
      30092            10          1184.29     -638.387         -629.141       
      34209            14          1214.19     -638.387         -629.141       
      36742+            6          1244.10     -638.387         -629.141       
      39057             8          1274.00     -638.387         -629.141       
      42679             8          1303.89     -638.387         -629.141       
      46722            11          1333.78     -638.387         -629.141       
      49246+            5          1363.68     -638.387         -629.141       
      49443+            9          1393.60     -638.387         -629.141       
      49553             5          1423.51     -636.065         -629.141       
      52024            13          1453.40     -636.065         -629.141       
      55684             6          1483.29     -636.065         -629.141       
      59598            12          1513.19     -636.065         -629.141       
      63812            10          1543.08     -636.065         -629.141       
      67297+            7          1572.98     -636.065         -629.141       
      67322+            2          1602.90     -632.575         -629.141       
      67325             0          1611.18     -629.204         -629.141       

                         *** Normal completion ***            

 Wall clock time:                  1616.97
 Total CPU time used:              1611.18

 Total no. of BaR iterations:   67325
 Best solution found at node:       1
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================



*****Running Instance #777*****


objective value: -624.330433048
objective bound: -624.392872282
BARON solution time: 468.43

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.44140461683794
 0.0
 0.0
 0.5585953822397572
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6157842832638534
 0.0
 0.0
 1.3842157170763516
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20633179867544246
 0.1512790184544887
 0.0
 0.0
 0.0
 0.0
 4.409452485074323
 3.23293669774914
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25929361329002
 0.7406126064202027
 0.00011586177876084714
 0.0
 0.0
 0.0
 0.7324081469687814
 2.091955524121414
 0.0003272664874029669
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999999369551
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11737486874306088
 0.35212460618764946
 0.0
 0.7500000000326528
 2.2500000000042526
 0.0
 0.5614733852952641
 1.6844201558089302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5711517461683919
 1.7134552384275374
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7403536222815623
 0.9496085367188254
 0.31003783961330406
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.769218327653437
 2.4999615380966853
 0.0
 0.0
 0.0
 0.4794819834644301
 0.2513381511489476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7569042294747929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5027376396269236
 0.2513688197060368
 0.0
 0.0
 1.4972623605587982
 0.7486311799599561
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.5838678193106215
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.416132181508305
 0.974569145134702
 0.6092986736341083
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.401193563927139
 0.700596780871044
 0.0
 0.5988064360884554
 0.29940321757610305
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5708949859805182
 0.9272959903911776
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.006485611169412
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.2691798653973596
 0.0
 0.0
 0.0
 1.4291050133232517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27185923582230787
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999991289468
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7308201350019743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41613218050743384
 0.0
 0.7512996899141084
 0.05039146287292443
 1.2430957697604712
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7281407632994134
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.072704008075341
 1.0082982397840872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2596463774190926
 0.0
 0.0
 0.38377258881329107
 0.0
 0.0
 0.0
 0.02543085536183511
 5.68996216078442
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1017903457108202
 0.3576108171361914
 1.4981909762167922
 0.0
 0.0
 0.46949947494773475
 0.8982096540466812
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.269179865873329
 0.0
 1.0000220814889835
 0.0
 3.0
 0.7541064593329605
 2.2458935411086722
 0.0
 0.7308201346493667
 0.0
 2.583867820192564
 0.7569042305320942
 1.4414046168963879
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5585953822699726
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2458935405187543
 0.0
 2.9999999986136054
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8246909375775986
 0.0
 0.0
 7.642389182828748
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.284606984600176
 0.0
 0.0
 5.006485611361763
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.0064856110810876
 0.0
 1.0
 0.5708949869928892
 0.9272959920369241
 0.0
 0.0
 1.9999999999397338
 0.9999999984169635
 0.0
 1.4161321813914396
 0.9745691450615885
 0.6092986735958245
 2.0
 0.0
 0.0
 0.0
 0.583867819305038
 0.0
 0.0
 2.0
 0.9999999996579342
 0.756904230565866
 0.0
 0.0
 5.248700310859216
 2.751299689107205
 0.0
 0.0
 1.7403536231263095
 0.9496085371872883
 0.31003783978140326
 2.0
 6.0
 0.0
 2.0
 0.9999999998965592
 0.0
 0.0
 0.9917017604178636
 2.8325681310023616
 0.0004431282634479155
 0.0
 4.615784283702448
 3.3842157161660675
 1.6157842831376361
 0.0
 0.0
 1.3842157169698723
 1.9999999990946846
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7005967819877414
 0.04470135213918889
 0.9999999982235029
 0.0
 0.0
 0.05868743436011928
 0.29940321805492465
 0.0
 1.0
 0.0
 0.0
 0.37499999999288747
 0.0
 0.0
 0.0
 0.9086474832229795
 0.0
 0.26146329838064797
 0.0
 1.0
 0.25136881979299003
 0.2807366926281014
 0.0
 0.09135251682333166
 0.0
 0.999999999991395
 0.9999999985578689
 0.7207023087433164
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2792976912444199
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7486311802226048
 0.0
 0.999999999518906
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7385367014563972
 0.0
 0.0
 0.9552986478688484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.28557587306448684
 0.0
 0.0
 1.0



=====Finished running Instance #777=====




*****Running Instance #778*****


objective value: -629.140783082
objective bound: -629.203703452
BARON solution time: 1616.97

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.666061182706461
 0.546326877372408
 0.0
 1.2125363739076231
 0.9945651061128561
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000000298117
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24508852995943328
 1.4276691172803886
 0.611512939647987
 0.0
 0.0
 0.0
 0.613263475554088
 3.5723308838772123
 1.530135052808504
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09486940461211851
 0.22655863401157186
 0.0
 0.0
 0.0
 0.0
 0.843711951263426
 2.014877483028135
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999999868769
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5510356793619726
 1.6531070379748505
 0.0
 0.5168864403020976
 1.5506593208024242
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9320778805701786
 2.7962336415189237
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8480462696190965
 0.8789730008081582
 0.27298072977591203
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.991050558837732
 2.626786154467591
 0.0
 0.0
 0.0
 0.2503855566263797
 0.1317777300537187
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9080210548226272
 0.0
 0.0
 0.0
 0.6078198256369854
 0.0
 0.621636159530856
 0.310818079703306
 0.0
 0.0
 1.3783638407410332
 0.6891819202271862
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5721041326275802
 0.9543858046221362
 0.47351006312054383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5513815776277824
 0.6815200312068328
 0.09417075749266725
 0.4486184228380287
 0.19707752493213662
 0.02723168648007378
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4140766200395365
 0.7122164887979473
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9707023690962496
 3.3848419460269272
 0.0
 0.9353052002396389
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.7594847076494168
 0.0
 1.0292976313034305
 0.0
 1.5859233799009478
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20710147942038853
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999997212614
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3821632875690389
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.999999999092369
 0.0
 0.7585638857595771
 0.12102699966862136
 0.484159119886527
 0.0
 0.0
 0.0
 0.42789586822624864
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7928985208331347
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2877835106461391
 1.0614186442650104
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12140244445534168
 0.0
 0.0646948003266358
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11200673624589438
 0.0
 0.0
 0.0
 0.0
 0.03994699474272532
 0.0
 0.04561419594659862
 4.186127287842786
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.327072366327283
 2.284270586887809
 1.1262931090430015
 0.0
 0.0
 0.0
 0.6729276342502392
 0.0
 3.0
 0.0
 0.0
 2.204142717441118
 0.0
 0.0
 0.0
 7.617836713904031
 0.0
 0.3214280386824141
 0.0
 3.0
 0.932454239234162
 2.0675457612099484
 0.0
 0.3821632870335336
 0.0
 2.0000000017928605
 0.908021054828445
 1.2123880601124746
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.207101480026108
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0675457609682195
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.858589434298771
 0.0
 0.0
 5.715729412239805
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6078198256501549
 0.0
 0.0
 3.728311522181105
 0.0
 0.0
 5.290849515467917
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.970702368985643
 3.384841945680221
 0.0
 0.9353052001325872
 0.41407662046721816
 0.7122164895373932
 0.0
 0.0
 2.0
 0.8785975560094248
 0.12140244392857434
 1.572104132471219
 0.9543858045269757
 0.4735100630680824
 1.9999999998862559
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998824269
 1.5158408804716719
 0.0
 0.0
 5.241436115111703
 2.7585638844028755
 0.0
 0.0
 1.848046269560161
 0.8789730007816315
 0.2729807297612548
 2.0
 5.999999999928521
 0.0
 2.0
 0.9999999999495602
 0.0
 0.0
 0.9385813559903252
 2.241436117323867
 0.0
 0.8583520054145963
 5.000000000872823
 2.1416479923044585
 1.9999999999719764
 0.0
 0.0
 0.999999999978719
 1.8785975564887152
 1.5408919833776429
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7756907887547628
 0.2855338234089726
 0.999999998961422
 0.0
 0.0
 0.0
 0.22430921140310747
 0.0
 1.0
 0.0
 0.0
 0.2755178396679855
 0.0
 0.0
 0.0
 0.9522295892265207
 0.0
 0.10107744417119939
 0.0
 1.0
 0.3108180797396595
 0.2584432201390534
 0.0
 0.047770410851330866
 0.0
 1.0
 0.5990213527823849
 0.3545523523152066
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6454476477517548
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6891819203132802
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8989225557025076
 0.0
 0.0
 0.7144661766534498
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4009786472101282
 0.0
 0.0
 0.46603894026081505
 0.0
 0.0
 1.0



=====Finished running Instance #778=====




