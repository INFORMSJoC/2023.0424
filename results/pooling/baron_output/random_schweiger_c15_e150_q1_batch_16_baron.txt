===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -225.725
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -629.993
 Preprocessing found feasible solution with value -629.993
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            13.47     -644.354         -629.993       
         19+            6            43.43     -643.321         -629.993       
         69             4            73.85     -643.321         -629.993       
        154+            8           103.74     -643.321         -629.993       
        206             8           133.63     -643.321         -629.993       
        334+            7           163.54     -643.321         -629.993       
        360             5           193.44     -643.321         -629.993       
        435+            3           223.37     -643.321         -629.993       
       1030            13           253.26     -642.424         -629.993       
       4210             9           283.13     -642.424         -629.993       
       5877+            4           313.03     -642.424         -629.993       
       5946+            7           342.94     -642.424         -629.993       
       5995             6           372.83     -641.521         -629.993       
       6092+            5           402.72     -641.521         -629.993       
       6164+            2           432.62     -640.088         -629.993       
       6222+            2           462.54     -635.024         -629.993       
       6227             0           468.56     -630.056         -629.993       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   470.94
 Total CPU time used:               469.11

 Total no. of BaR iterations:    6227
 Best solution found at node:      -1
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -626.864
 Solving bounding LP
 Starting multi-start local search
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             6.15     -643.815         -627.942       
*         1             1            13.56     -640.071         -628.347       
          1             1            16.34     -639.277         -628.347       
         36+            5            46.25     -638.324         -628.347       
        189+            8            76.23     -638.324         -628.347       
        376+            9           106.12     -638.324         -628.347       
        518             9           136.01     -638.324         -628.347       
        735+            5           165.89     -638.324         -628.347       
        991             7           195.78     -638.324         -628.347       
       1355+            8           225.69     -638.324         -628.347       
       4042+           11           255.59     -638.324         -628.347       
       4135+            5           285.50     -638.241         -628.347       
       4200             8           315.41     -638.241         -628.347       
       4893            10           345.30     -638.241         -628.347       
       8119             9           375.19     -638.241         -628.347       
      11401            10           405.07     -638.241         -628.347       
      12433             7           434.96     -638.241         -628.347       
      12929            11           464.85     -638.241         -628.347       
      16307             8           494.74     -638.241         -628.347       
      19653            12           524.63     -638.241         -628.347       
      21088             7           554.52     -638.241         -628.347       
      21300+            8           584.40     -638.241         -628.347       
      21991            11           614.29     -638.241         -628.347       
      23888+            8           644.20     -638.241         -628.347       
      25371             8           674.09     -638.241         -628.347       
      29315            13           703.97     -638.241         -628.347       
      33264            14           733.86     -638.241         -628.347       
      37706            10           763.75     -638.241         -628.347       
      41988             9           793.64     -638.241         -628.347       
      46225             9           823.53     -638.241         -628.347       
      50037+            4           853.42     -638.241         -628.347       
      50087+            8           883.32     -637.526         -628.347       
      50276+            6           913.21     -637.526         -628.347       
      50489+            7           943.11     -637.526         -628.347       
      50698+            6           973.02     -637.524         -628.347       
      50796+            5          1002.91     -637.524         -628.347       
      50914             7          1032.81     -637.524         -628.347       
      51154+            8          1062.71     -637.524         -628.347       
      51484             7          1092.60     -637.524         -628.347       
      51910             5          1122.49     -637.524         -628.347       
      52105+            4          1152.38     -637.294         -628.347       
      52404+            9          1182.27     -637.294         -628.347       
      52662+            6          1212.17     -637.294         -628.347       
      52868             8          1242.07     -636.912         -628.347       
      53286+            8          1271.97     -636.912         -628.347       
      55014             8          1301.86     -635.225         -628.347       
      57338+            7          1331.76     -635.225         -628.347       
      57584            10          1361.65     -634.931         -628.347       
      57895+            7          1391.55     -631.718         -628.347       
      58009             0          1413.81     -628.410         -628.347       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1420.61
 Total CPU time used:              1415.29

 Total no. of BaR iterations:   58009
 Best solution found at node:      28
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================



*****Running Instance #31*****


objective value: -629.9926015
objective bound: -630.055607061
BARON solution time: 470.93

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0740986911681434
 1.9259013083830752
 0.0
 0.8036569939197915
 1.4409886808424803
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995649158
 0.0
 0.0
 1.0000000001288636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.612805827786793
 1.5676834947458453
 0.0
 0.0
 0.0
 0.0
 0.948877690118696
 0.5693266133746819
 0.0
 0.0
 0.0
 0.0
 1.4383164826677046
 0.8629898885421298
 0.24861062853598886
 0.9459960471127483
 0.0
 0.0
 0.0
 0.0
 0.7579329230787223
 2.8840341759996844
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999995947697
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6938078414704909
 2.0814235244332933
 0.0
 0.5059899245536449
 1.517969773659575
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8002022336803002
 2.4006067010740684
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9900496136355637
 0.8305857734884807
 0.1793646113382211
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.257486895682885
 1.29894915694442
 0.0
 0.12021314124462364
 0.0
 1.742513103945371
 0.5316366163111307
 0.0
 0.049201084910089884
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08268119773006471
 0.0
 0.6506935348130074
 0.3253467671554603
 0.0
 0.0
 1.3493064652457192
 0.6746532321025412
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999989904063
 0.0
 0.0
 0.0
 0.6606159969570037
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3393840033915292
 0.9558607072963612
 0.7047552895353415
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5173870898845778
 0.6659475719688644
 0.09274597269809301
 0.4826129102392978
 0.21180811272099917
 0.029498342367969842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24189819431506157
 0.6305421619984163
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.0704760835696874
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5870175253201178
 0.0
 0.0
 0.0
 1.7581018016566516
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24464567412340127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999976628224
 0.0
 0.22476863127338248
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4129824736016774
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3393840026421567
 0.0
 0.0
 0.0
 1.9173188010008893
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7553543256628508
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3694578266153204
 0.9934564482217744
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12224431565636167
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.009950385694981084
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04413929313961609
 2.4537453994708573
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.276080634551535
 4.180489323267164
 0.8724403563962206
 0.0
 0.0
 0.0
 0.723919365328267
 0.0
 3.0
 0.0
 0.0
 2.7752313660143555
 0.0
 0.0
 0.0
 5.676649194212311
 0.0
 1.1946066756926037
 1.0887777048585886e-8
 3.0
 0.9760403019684676
 2.0239596983229386
 0.0
 2.3233508053787664
 0.0
 2.660615997954393
 0.0
 2.999999999567331
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.244645674764942
 0.0
 0.0
 0.0
 2.9999999998305547
 0.0
 0.0
 2.0239596973482605
 0.0
 2.999999998461807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.6419670991691855
 0.0
 0.0
 1.5182043037897055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08268119787860076
 0.0
 0.0
 3.2008089348634634
 2.3013063716363686
 0.0
 5.0704760838997425
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.070476083529867
 0.0
 1.0
 0.24189819861540923
 0.6305421732209314
 0.0
 0.0
 2.0
 0.8777556847060974
 0.122244314912283
 1.3393840033109359
 0.9558607072288774
 0.7047552894686152
 2.0
 0.0
 0.0
 0.0
 0.6606159972979347
 0.0
 0.0
 2.0
 0.9999999992772075
 0.08268119923805017
 0.0
 0.0
 6.0
 1.8305857735837845
 0.0
 0.1694142259082301
 1.9900496146997606
 0.830585773939639
 0.17936461139482915
 2.0
 6.0
 0.0
 2.0
 0.9999999996369823
 0.0
 0.0
 1.0065435518769108
 3.830030224131623
 0.0
 0.0
 5.000000000511444
 2.999999996612614
 1.9999999996186233
 0.0
 0.0
 1.0000000001806333
 1.8777556851895765
 3.366889989410153
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7586935449005999
 0.5225611655054141
 0.9999999822039763
 0.0
 0.0
 0.0
 0.24130645511475007
 0.0
 1.0
 0.0
 0.0
 0.34690392073844367
 0.0
 0.0
 0.0
 0.7095811492587493
 0.0
 0.24699440781265453
 1.2703866443569032e-8
 1.0
 0.325346767393806
 0.2529949622773705
 0.0
 0.2904188506550469
 0.0
 0.9999999994828215
 0.0
 0.5720119500317308
 0.0
 1.0163460086641989e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4279880499144754
 0.0
 0.0
 0.0
 0.9999999999902257
 0.0
 0.0
 0.6746532325942959
 0.0
 0.9999999994829075
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7530055919218723
 0.0
 0.0
 0.189775538005685
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999817512507
 0.0
 0.0
 0.40010111684440425
 0.28766329650564154
 0.0
 1.0



=====Finished running Instance #31=====




*****Running Instance #32*****


objective value: -628.346981934
objective bound: -628.409822844
BARON solution time: 1420.6

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.9547177996318922
 0.9402005554061378
 0.0
 1.045282199916758
 1.0293878518833242
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999991569148
 0.0
 0.0
 1.0000000006138312
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2193569864624576
 0.7316141915303558
 0.0
 0.0
 0.0
 0.0
 3.7806430132842688
 2.2683858068942624
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2925048821831807
 0.9590554117433994
 0.0
 0.0
 0.0
 0.0
 0.7437649771839003
 2.438632207129742
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9827367562921892
 0.9999999998341171
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47816136474254756
 1.434484094175662
 0.0
 0.4954971855071387
 1.4864915564672947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0263414494507868
 3.079024348161748
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9149473554082255
 0.8517000362857288
 0.2333526077869469
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.669726635459769
 1.5565755447335918
 0.0
 0.0
 0.0
 1.330273363057436
 0.44342445416365
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7289127718148342
 0.22786890721602696
 0.0
 0.0
 0.0
 0.0
 0.6786741723663098
 0.33933708586615424
 0.0
 0.0
 1.3213258276803483
 0.6606629132249621
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8924113093998043
 0.0
 0.0
 0.0
 0.5052763085587619
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.494723691814097
 0.9874774280278134
 0.5177988803311482
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.373665409891605
 0.6868327035607489
 0.0
 0.6263345886417324
 0.31316729367927704
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.497807526323309
 0.5113742519365748
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.482201121688785
 0.0
 0.9999999999988187
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.10758868951805864
 1.4253238637759955
 0.0
 0.0
 0.0
 1.5021924717099513
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999997585582
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5746761358061486
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6023123808061379
 0.0
 0.0
 0.14829996341918947
 1.2710872275398677
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7721310921538784
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.48862574540676385
 0.9637301403266486
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01726324415040128
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08505264477923773
 0.0
 0.012522572386026531
 3.797058985298937
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.0604981139356817
 1.950971178200295
 1.0091817784950523
 0.0
 0.0
 0.0
 0.9395018825789139
 0.0
 3.0
 0.0
 0.0
 1.9126454590378736
 0.0
 0.0
 0.0
 6.226302181096527
 0.0
 1.251560293985023
 0.0
 3.0
 1.018011258232464
 1.981988742099049
 0.0
 1.7736978177336777
 0.0
 2.3976876197764545
 0.9567816790308611
 1.894918355093535
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.074670051850283
 0.0
 0.0
 0.0
 2.9827367566165117
 0.0
 0.0
 1.9819887409053103
 0.0
 2.9999999994949005
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.1823971844128565
 0.0
 0.0
 6.049028820647227
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.105365797772143
 0.0
 0.0
 5.48220112182175
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.4822011217197777
 0.0
 1.0
 0.4978075285653297
 0.511374254239633
 0.0
 0.0
 1.9999999997271487
 0.9999999978706452
 0.0
 1.49472369173371
 0.9874774279786687
 0.5177988803064225
 1.8924113106078644
 0.0
 0.0
 0.0
 0.5052763088788782
 0.0
 0.0
 2.0
 0.9999999991177262
 0.7289127727047663
 0.2278689074965569
 0.0
 5.999999999512689
 1.9999999993650044
 0.0
 0.0
 1.914947355639253
 0.8517000364020503
 0.23335260781113107
 2.0
 5.999999999735397
 0.0
 1.982736756410832
 0.9999999999193483
 0.0
 0.0
 1.0362698597526474
 3.3976876201425084
 0.0
 0.0
 4.999999999941543
 2.9999999985369015
 1.999999999230632
 0.0
 0.0
 1.000000000701296
 1.9999999996794502
 1.9695884074174497
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.686832705048593
 0.2438713972976879
 0.9999999954990006
 0.0
 0.0
 0.0
 0.31316729437390334
 0.0
 1.0
 0.0
 0.0
 0.23908068237136865
 0.0
 0.0
 0.0
 0.7782877726380246
 0.0
 0.282267094260916
 0.0
 0.9999999999903206
 0.33933708616883823
 0.24774859275389075
 0.0
 0.22171222720047626
 0.0
 0.9999999993602345
 0.9999999987854804
 0.4773588998932726
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5226411000429629
 0.0
 0.0
 0.0
 0.9999999999561302
 0.0
 0.0
 0.660662913813108
 0.0
 0.9999999998897718
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.717732905365789
 0.0
 0.0
 0.756128602666872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.513170724714914
 0.0
 0.0
 0.9999999999929453



=====Finished running Instance #32=====




