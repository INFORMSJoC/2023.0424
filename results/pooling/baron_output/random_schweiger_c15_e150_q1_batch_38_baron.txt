===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -167.509
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -626.587
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            22.93     -641.539         -626.587       
         34+            5            52.82     -637.466         -626.587       
       1256            10            83.61     -637.466         -626.587       
       4905             8           113.50     -637.466         -626.587       
       5471+            5           143.40     -637.466         -626.587       
       6672            10           173.29     -637.466         -626.587       
      10005             5           203.17     -637.466         -626.587       
      12080+            6           233.09     -637.466         -626.587       
      12162+            5           262.98     -637.466         -626.587       
      12611+            8           292.86     -637.466         -626.587       
      12913+            5           322.78     -637.466         -626.587       
      13645             8           353.14     -637.466         -626.587       
      16381             7           383.03     -637.466         -626.587       
      19957            10           412.91     -637.466         -626.587       
      23142            10           442.80     -637.466         -626.587       
      25057            11           472.69     -637.466         -626.587       
      28432             7           502.57     -637.466         -626.587       
      32274             8           532.46     -637.466         -626.587       
      34046+            4           562.35     -637.466         -626.587       
      34229             4           592.23     -637.466         -626.587       
      34339+            3           622.14     -634.848         -626.587       
      37541             7           652.02     -634.848         -626.587       
      41415+            5           681.92     -634.848         -626.587       
      41658             9           711.81     -634.848         -626.587       
      41753+            6           741.72     -634.848         -626.587       
      44141+            7           771.63     -634.848         -626.587       
      44180+            2           801.54     -634.848         -626.587       
      44325+            7           831.43     -633.273         -626.587       
      44481             9           861.32     -633.134         -626.587       
      44575+            5           891.22     -631.061         -626.587       
      44675             0           899.28     -626.649         -626.587       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   902.87
 Total CPU time used:               899.36

 Total no. of BaR iterations:   44675
 Best solution found at node:     522
 Max. no. of nodes in memory:      20
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -256.459
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -632.046
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            20.34     -638.340         -632.046       
          9             0            38.09     -632.109         -632.046       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    38.36
 Total CPU time used:                38.19

 Total no. of BaR iterations:       9
 Best solution found at node:       2
 Max. no. of nodes in memory:       2
 
 All done
===========================================================================



*****Running Instance #75*****


objective value: -626.586555212
objective bound: -626.649220131
BARON solution time: 902.86

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3431343857960494
 0.0
 0.0
 0.6568656144178538
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002858078
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4133770263957173
 0.8320208191292019
 0.0
 0.0
 0.0
 0.0
 3.5866229744588334
 2.111358066097109
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1884426150790635
 1.1422649206627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04689345177415836
 0.1406803553544762
 0.0
 0.7499999999719024
 2.250000000347019
 0.0
 0.5670993577127806
 1.7012980734543603
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6360071904621711
 1.9080215717459186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3221037737231566
 0.3198797410548875
 0.6524679535880112
 0.42439877573934937
 0.42146842589985584
 0.8596813303768249
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0351361620923916
 2.2413126204511227
 0.0
 0.0
 0.0
 1.5666500582581597
 1.1569011602394947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4877350462561577
 0.2438675230866649
 0.0
 0.0
 1.5122649540052238
 0.7561324768742081
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9764125148150808
 0.0
 0.0
 0.0
 0.5590546108842479
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4409453901008598
 0.9773751917723015
 0.5816794184245231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5118074111213635
 0.755903705173419
 0.0
 0.4881925892702435
 0.2440962945100566
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5598265403752014
 0.6110816446916707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.836644903382634
 2.4749416977933234
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.023587485939864882
 1.679290938990194
 0.0
 0.163355097057285
 0.0
 1.440173460046193
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21946512251151445
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3207090617747093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46453287447892794
 0.0
 1.39821378095463
 0.25865183375778134
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.780534877876698
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38891835561147087
 0.8115573852636873
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9949884253307232
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0352704330735614
 0.0
 0.0
 0.0
 0.0
 0.21822701810154702
 0.0
 0.0226248088154132
 4.48785071730352
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2677111165507684
 2.2453978455273935
 1.170908184870336
 0.0
 0.0
 0.1875738071245543
 0.7322888838629482
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.27644878234844
 0.0
 0.0
 0.0
 3.0
 0.7316025693428226
 2.268397431141628
 0.0
 2.7235512184164725
 0.0
 2.535467126311606
 0.0
 1.3431343856720965
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6568656143572089
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.268397430879432
 0.0
 1.294451468366055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.3307075356534392
 0.0
 0.0
 5.697981040562251
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7055485320160302
 0.0
 0.0
 0.0
 2.5440287621768394
 0.0
 0.0
 5.311586601175604
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.8366449032414958
 2.4749416976022696
 0.0
 1.0
 0.5598265403482562
 0.6110816446623949
 0.0
 0.0
 2.0
 0.9999999995862151
 0.0
 1.4409453899593367
 0.9773751916763236
 0.5816794183674217
 1.9764125146374103
 0.0
 0.0
 0.0
 0.5590546108323251
 0.0
 0.0
 2.0
 0.9999999999284972
 0.0
 0.0
 0.0
 4.60178622001589
 3.398213780443251
 0.0
 0.0
 0.7465025494135953
 0.7413481669061696
 1.5121492838658852
 1.9999999998213431
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.1884426150289484
 1.1422649206145317
 0.0
 0.0
 5.000000000674476
 2.943378885120388
 2.0
 0.0
 0.0
 1.0000000002159994
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7559037054861995
 0.28267540524100804
 1.0
 0.0
 0.0
 0.023446725890063105
 0.24409629461107601
 0.0
 1.0
 0.0
 0.0
 0.37500000002194217
 0.0
 0.0
 0.0
 0.6595560977807938
 0.0
 0.0
 0.0
 1.0
 0.24386752310410248
 0.2835496788809402
 0.0
 0.34044390229135546
 0.0
 1.0
 0.07131185162446327
 0.6715671928465163
 0.0
 0.19366962603980836
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3284328071837391
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7561324769282597
 0.0
 0.4314838227595797
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7173245947949993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5685161773057987
 0.7350185223357283
 0.0
 0.0
 0.31800359525993344
 0.0
 0.0
 1.0



=====Finished running Instance #75=====




*****Running Instance #76*****


objective value: -632.045577402
objective bound: -632.10878827
BARON solution time: 38.35

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1885503319621393
 0.0
 0.0
 0.8114496654213529
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999735993
 0.0
 0.0
 1.0000000001896627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.384732234240716
 0.5312936816768947
 0.0
 0.0
 0.0
 0.0
 3.6152677664720647
 1.3871049394254675
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09554915146488574
 0.21539532734378727
 0.0
 0.0
 0.0
 0.0
 0.8008973340405035
 1.8054534319533808
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998692288
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12580249390626871
 0.37740748169844535
 0.0
 0.7499999999832492
 2.249999999869877
 0.0
 0.559070519912644
 1.6772115596965325
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.565126986386252
 1.695380959117494
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7387934786563952
 0.8627400450826785
 0.39846647597780127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.843304619964252
 2.156695380865857
 0.0
 0.0
 0.0
 1.7059827713027564
 1.2940172280084692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2234771031531461
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5091452806407379
 0.2545726401735957
 0.0
 0.0
 1.4908547195048114
 0.7454273593193262
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999999854951
 0.0
 0.0
 0.0
 0.47156136832454426
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5284386324244676
 1.0
 0.47156136770660084
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5345450728275334
 0.7672725339159566
 0.0
 0.4654549273139869
 0.23272746289948512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3921233650726377
 0.900140414244102
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7553405607762917
 3.6100400124117016
 0.0
 0.8679820351292244
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4655135455722832
 0.0
 1.244659439529989
 0.0
 1.6078766339598625
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22582633265598961
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999985752308
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5344864517582568
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5284386315215802
 0.0
 1.4507126092982847
 0.13725995485148615
 1.7765228957451384
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.774173666788578
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09985958291768207
 1.103553514339053
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.132017965217909
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12324799060672277
 0.0
 0.0
 0.0
 0.0
 0.13795853074590872
 0.0
 0.0
 5.601533524484497
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.301817608955685
 1.916025916761245
 1.2922637791524556
 0.0
 0.0
 0.5032099756129604
 0.6981823908859016
 0.0
 3.0
 0.0
 0.0
 2.9999999998582987
 0.0
 0.0
 0.0
 5.000000000883547
 0.0
 0.3109444788117854
 0.0
 3.0
 0.7637179208142504
 2.2362820796052842
 0.0
 2.999999999365744
 0.0
 2.471561369150597
 0.22347710385368888
 1.1885503321682773
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.811449665561679
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.236282078824098
 0.0
 2.999999999721095
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.6063507660119174
 0.0
 0.0
 5.002372708102122
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2605079454994685
 0.0
 0.0
 5.233362608418311
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.755340560737277
 3.6100400122454186
 0.0
 0.8679820350849808
 0.3921233663451262
 0.9001404171635299
 0.0
 0.0
 2.0
 0.9999999968238783
 0.0
 1.5284386323282713
 0.9999999999987628
 0.4715613676775373
 1.999999999975621
 0.0
 0.0
 0.0
 0.4715613683566094
 0.0
 0.0
 2.0
 0.9999999994912822
 0.2234771045545708
 0.0
 0.0
 4.549287391241431
 3.450712608856219
 0.0
 0.0
 1.7387934788535628
 0.862740045179834
 0.39846647602206253
 2.0
 6.0
 0.0
 2.0
 0.9999999998325797
 0.0
 0.0
 0.8964464858473198
 2.0208487600625884
 0.0
 0.0
 5.0000000006075656
 1.9183986210615585
 1.9999999998690439
 0.0
 0.0
 1.0000000001399405
 1.999999997509793
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7672725363528008
 0.27694644681441694
 0.999999996757078
 0.0
 0.0
 0.06290124694872987
 0.2327274636384776
 0.0
 1.0
 0.0
 0.0
 0.3749999999688876
 0.0
 0.0
 0.0
 0.6250000000985422
 0.0
 0.10658656481432667
 0.0
 1.0
 0.2545726403014827
 0.2795352599442596
 0.0
 0.3749999999094443
 0.0
 0.9999999999401882
 0.9999999937174634
 0.5942751667214352
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4057248332162777
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7454273597005906
 0.0
 0.9999999998875508
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8934134348074819
 0.0
 0.0
 0.7230535532064974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.28256349318106444
 0.0
 0.0
 1.0



=====Finished running Instance #76=====




