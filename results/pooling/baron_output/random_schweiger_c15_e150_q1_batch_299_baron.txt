===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.37
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -245.291
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -437.920
 Preprocessing found feasible solution with value -618.078
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             9.12     -640.301         -623.175       
*         1             1            12.37     -637.452         -623.307       
          1             1            21.89     -634.268         -623.307       
*        14             7            53.23     -625.310         -623.526       
         51             0            78.65     -623.588         -623.526       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    79.19
 Total CPU time used:                78.75

 Total no. of BaR iterations:      51
 Best solution found at node:      25
 Max. no. of nodes in memory:       7
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -189.148
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -415.090
 Preprocessing found feasible solution with value -610.093
 Preprocessing found feasible solution with value -610.093
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             7.94     -644.684         -619.648       
*         1             1             9.51     -642.282         -621.989       
*         1             1            13.09     -641.737         -623.342       
          1             1            15.88     -641.492         -623.342       
         12+            4            45.80     -641.009         -623.342       
       1145            11            75.70     -640.872         -623.342       
       4482            12           105.59     -640.872         -623.342       
       8749            14           135.48     -640.872         -623.342       
      12880            15           165.37     -640.872         -623.342       
      17016            15           195.25     -640.872         -623.342       
      18608             9           225.15     -640.872         -623.342       
      22753             7           255.04     -640.872         -623.342       
      26488             9           284.93     -640.872         -623.342       
      30422            10           314.83     -640.872         -623.342       
      33470+            5           344.72     -640.872         -623.342       
      33564+            6           374.64     -640.872         -623.342       
      33828+            6           404.57     -640.872         -623.342       
      35449             8           434.46     -640.872         -623.342       
      39255            13           464.35     -640.872         -623.342       
      43162            13           494.24     -640.872         -623.342       
      47036            12           524.13     -640.872         -623.342       
      51162             7           554.02     -640.872         -623.342       
      54841             9           583.91     -640.872         -623.342       
      58504             6           613.80     -640.872         -623.342       
      62336             9           643.70     -640.872         -623.342       
      66612            11           673.59     -640.872         -623.342       
      70779+            8           703.47     -640.872         -623.342       
      71857             9           733.37     -640.872         -623.342       
      75436            11           763.26     -640.872         -623.342       
      78758+            8           793.16     -640.872         -623.342       
      81010            11           825.20     -640.872         -623.342       
      83683            13           855.10     -640.872         -623.342       
      87576            11           884.98     -640.872         -623.342       
      89794+            4           914.89     -640.872         -623.342       
      90811            11           944.77     -640.872         -623.342       
      95300             9           974.66     -640.872         -623.342       
      99585             9          1004.54     -640.872         -623.342       
     103561            13          1034.43     -640.872         -623.342       
     106252+            9          1064.32     -640.872         -623.342       
     107753            11          1094.21     -640.872         -623.342       
     110913            14          1124.09     -640.872         -623.342       
     114206            14          1153.98     -640.872         -623.342       
     116407+            9          1183.88     -640.872         -623.342       
     120121            15          1213.77     -640.872         -623.342       
     123941             8          1243.65     -640.872         -623.342       
     126113            12          1273.54     -640.872         -623.342       
     128382            10          1303.43     -640.872         -623.342       
     132209            13          1333.32     -640.872         -623.342       
     135285            10          1363.20     -640.264         -623.342       
     139074+            5          1393.12     -640.264         -623.342       
     139534            11          1423.00     -640.264         -623.342       
     142715            14          1452.89     -640.264         -623.342       
     146921            15          1482.77     -640.264         -623.342       
     151021            14          1512.66     -640.264         -623.342       
     155442            13          1542.54     -640.264         -623.342       
     157591            12          1572.43     -640.264         -623.342       
     161947            11          1602.32     -640.264         -623.342       
     164640             4          1632.22     -640.264         -623.342       
     168920            11          1662.11     -640.264         -623.342       
     171994+            5          1691.99     -640.264         -623.342       
     173373            11          1721.88     -639.056         -623.342       
     177710             5          1751.76     -639.056         -623.342       
     181874             7          1781.85     -639.056         -623.342       
     183314             9          1811.75     -639.056         -623.342       
     184201             9          1841.63     -639.056         -623.342       
     187594            12          1871.52     -639.056         -623.342       
     191710             6          1901.41     -639.056         -623.342       
     195648            14          1931.30     -639.056         -623.342       
     200022            12          1961.18     -639.056         -623.342       
     204047            10          1991.21     -639.056         -623.342       
     208303             8          2021.09     -639.056         -623.342       
     212570             9          2050.98     -639.056         -623.342       
     216738             4          2080.87     -639.056         -623.342       
     220972            11          2110.76     -639.056         -623.342       
     223324             8          2140.65     -639.056         -623.342       
     227059             9          2170.54     -639.056         -623.342       
     231269             7          2200.42     -639.056         -623.342       
     235579             7          2230.31     -633.435         -623.342       
     239251             8          2260.21     -630.908         -623.342       
     239437+            4          2290.10     -625.446         -623.342       
     239525             0          2303.29     -623.405         -623.342       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2312.28
 Total CPU time used:              2303.45

 Total no. of BaR iterations:  239525
 Best solution found at node:  237104
 Max. no. of nodes in memory:      23
 
 All done
===========================================================================



*****Running Instance #597*****


objective value: -623.525784809
objective bound: -623.588143578
BARON solution time: 79.18

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.683298237249764
 0.0
 0.0
 0.3167017514859408
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.87518868224513
 0.0
 0.0
 1.124811316556449
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.275018130184506
 0.12615593193972632
 0.0
 0.0
 0.0
 0.0
 4.600170550709448
 2.110183799587155
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1666215894872727
 0.9606072403108322
 0.12481131342272393
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999990955015
 0.999999997849165
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3364309843407141
 1.0092929529588877
 0.0
 0.7499999988348234
 2.2499999963691635
 0.0
 0.4404297757499002
 1.3212893271846806
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47313924042391
 1.4194177211989558
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8725255182738847
 0.7939741213664299
 0.0778627084987263
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.446244778188928
 2.828780827720419
 0.0
 0.0
 0.0
 0.44307934571837737
 0.2818950419360726
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23049492434128036
 0.0
 0.8255205992712352
 0.41276029720740653
 0.0
 0.0
 1.1744793997047442
 0.5872396963983395
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7510867675178547
 0.0
 0.0
 0.0
 0.5274255583606582
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4725744407367503
 0.9421687258656679
 0.5852568315651787
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4913165563664326
 0.7456582695885688
 0.0
 0.508683441689702
 0.25434171790570875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.490456949529138
 0.7628983357335171
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.03569983473432
 3.178403435410792
 0.0
 0.9509388939766574
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.24891322950236164
 1.2750256042947272
 0.0
 0.9643001652141994
 0.0
 1.5095430420971334
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2683680884165528
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999884992181
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7249743906627669
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7214876690334325
 0.0
 1.1106758719078458
 0.20602587484295334
 1.7695050650235904
 0.0
 0.0
 0.0
 0.0
 5.999999998975027
 0.0
 0.0
 0.0
 0.0
 0.7316319104981158
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23710165013343099
 0.8333784054560941
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2072292125690103
 0.0
 0.0
 0.0
 0.0
 1.1843625237203344e-8
 0.0
 0.04906110556911719
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1274744724091071
 0.0
 0.05783127398510548
 5.922137288706915
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.236974833270038
 0.4011740622645131
 1.2533552854921655
 0.0
 0.0
 1.3457239377222823
 0.7630251621499515
 0.0
 2.999999998169155
 0.0
 0.0
 2.9999999960569452
 0.0
 0.0
 0.0
 7.275025608465815
 0.0
 0.0
 1.111180569514616e-8
 2.9999999994111843
 1.2382808964786418
 1.7617191034595294
 0.0
 0.7249743881132447
 0.0
 2.2785123309267434
 0.0
 1.6832982459077623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31670175319956717
 0.0
 0.0
 0.0
 2.9999999978444594
 0.0
 0.0
 1.7617190961030837
 0.0
 2.744362348139041
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.252040143220829
 0.0
 0.0
 6.710354351999161
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23049492465363614
 0.0
 0.0
 1.89255696218294
 0.0
 0.0
 5.165042164333593
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.035699834912577
 3.178403436017711
 0.0
 0.9509388941348246
 0.4904569577628118
 0.7628983485415045
 0.0
 0.0
 1.9999999993220114
 0.999999988152067
 0.0
 1.4725744410545245
 0.9421687260678272
 0.5852568316805541
 1.7510867699362782
 0.0
 0.0
 0.0
 0.5274255590853494
 0.0
 0.0
 1.999999999574173
 0.9999999939102933
 0.2304949347350923
 0.0
 0.0
 4.8893241262006395
 3.1106758711900766
 0.0
 0.0
 1.872525519742067
 0.7939741219957209
 0.07786270848692006
 1.9999999995331197
 5.999999998214629
 0.0
 1.9999999997605764
 0.9999999981992063
 0.0
 0.0
 1.1666215942096025
 0.9606072441991926
 0.12481131390988369
 0.0
 4.875188682744878
 2.236339732376703
 1.8751886826990523
 0.0
 0.0
 1.124811316849002
 1.9999999901681897
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7456582784461115
 0.05641179205233077
 0.9999999832121769
 0.0
 0.0
 0.1682154922143619
 0.2543417209402196
 0.0
 0.9999999997959833
 0.0
 0.0
 0.37499999951156443
 0.0
 0.0
 0.0
 0.909378201056315
 0.0
 0.0
 0.0
 0.9999999997859877
 0.4127602997240655
 0.2202148879356538
 0.0
 0.090621798499613
 0.0
 0.9999999986228096
 3.0140433972680815e-8
 0.8416491227627098
 0.0
 1.4953136450963708e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15835087652176874
 0.0
 0.0
 0.0
 0.9999999996862221
 0.0
 0.0
 0.5872396999784111
 0.0
 0.9999999992234715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999959526973
 0.0
 0.0
 0.9435882075689812
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999549064819
 0.0
 0.0
 0.23656962027611103
 0.0
 0.0
 0.9999999998139212



=====Finished running Instance #597=====




*****Running Instance #598*****


objective value: -623.342305037
objective bound: -623.40464445
BARON solution time: 2312.28

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2424500483015606
 0.0
 0.0
 0.757549950579641
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8407230106383512
 0.0
 0.997158681281112
 0.16211830819692025
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1845672094966373
 3.1430954994867113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10697408021972046
 0.3617988331235811
 0.01648422055038631
 0.0
 0.0
 0.0
 0.926651346202185
 3.1340430792838343
 0.14279276919653394
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.99999999982676
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7037451331432454
 2.111235399386646
 0.0
 0.5469651963458041
 1.6408955889987837
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7492896704439947
 2.2478690112875057
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999991821202
 0.9999999992617408
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.0180731805914585
 1.8308187555376603
 0.0
 0.0
 0.0
 1.4777687311708383
 0.6733393314815982
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2533918621719278
 0.0
 0.0
 0.0
 0.7466081371323867
 0.0
 0.5414261433989248
 0.270713071544913
 0.0
 0.0
 1.45857385672163
 0.7292869279434468
 0.1902895916886798
 0.0
 0.0
 0.0
 0.07915248580498632
 0.6119195967035171
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6477122748549825
 0.0
 0.0
 0.0
 0.26942112906238475
 2.0828665954016534
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.651426385854341
 1.0
 0.34857361418021554
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5331561791797137
 0.7665780881858717
 0.0
 0.4668438208642798
 0.23342190999833798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10531193430967396
 0.33327187438351813
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2106821288756867
 0.6667281201419346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5081540022988833
 4.552081825219387
 0.0
 0.7738779321100538
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 1.161998133747146
 0.0
 0.0
 1.4918459979884227
 0.0
 1.6840059362598885
 0.0
 0.0
 1.099344561888037
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2318708929565461
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999984076544
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8154327908838165
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5041580885714122
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7681291070565258
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9663745735852736
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2261220682175557
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.002841318783141
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2997342684361937
 4.3276627090162885
 0.43858380871773983
 0.0
 0.0
 0.0
 0.7002657312496351
 0.0
 3.0
 0.0
 0.0
 2.814980532621406
 0.0
 0.0
 0.8813616745817383
 5.848891936637829
 0.0
 0.4852571338936879
 0.877410249059034
 3.0
 0.8121392149438378
 2.1878607854370262
 0.0
 2.1511080629931474
 0.0
 3.0
 1.2533918622784712
 1.2424500487788657
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7575499508997275
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1878607846650766
 0.0
 2.999999998716268
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.203487194682553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7466081372026604
 0.0
 0.0
 2.9971586818226945
 0.0
 0.0
 5.834113759795879
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5081540022684248
 4.552081824991678
 0.0
 0.773877932056211
 0.31599406403870994
 0.9999999972504586
 0.0
 0.0
 2.0
 0.9999999982622797
 0.0
 1.6514263857501015
 1.0
 0.3485736141413679
 0.8380018666688304
 0.0
 0.0
 0.0
 0.3485736149306945
 2.6947861924558105
 0.0
 2.0
 0.9999999994904555
 1.999999999646051
 0.0
 0.0
 5.495841912158584
 2.5041580872589897
 0.0
 0.0
 2.0
 0.9999999997171298
 0.0
 2.0
 6.0
 0.0
 2.0
 0.9999999998694681
 0.0
 0.0
 1.033625426583572
 3.495841912971325
 0.15927698972966187
 1.184567209664708
 3.1430954999580374
 0.0
 1.840723010573575
 0.0
 0.997158681259365
 0.16211830822407036
 1.9999999991055777
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.766578089541025
 0.9999999998527067
 0.333271875303592
 0.0
 0.0
 0.0
 0.23342191042400146
 0.0
 1.0
 0.0
 0.0
 0.3518725665635721
 0.0
 0.0
 0.22707537927099533
 0.7311114920723929
 0.0
 0.1034940486819218
 0.6667281219788604
 1.0
 0.27071307168487335
 0.2734825981661592
 0.0
 0.26888850786015983
 0.0
 0.7729246206015874
 0.6266959311972254
 0.6212250244306803
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37877497546129424
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7292869283194586
 0.0
 0.9999999995791055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8965059511577854
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.373304068632611
 0.0
 0.0
 0.3746448352135438
 0.0
 0.0
 1.0



=====Finished running Instance #598=====




