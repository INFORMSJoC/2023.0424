===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -219.964
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -264.104
 Preprocessing found feasible solution with value -631.444
 Preprocessing found feasible solution with value -631.444
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             7.73     -645.722         -633.057       
          1             1            15.36     -644.316         -633.057       
         13+            3            45.26     -642.711         -633.057       
         30+            3            75.17     -641.202         -633.057       
         46+            2           105.07     -635.915         -633.057       
         55             0           109.75     -633.120         -633.057       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   111.36
 Total CPU time used:               110.92

 Total no. of BaR iterations:      55
 Best solution found at node:       1
 Max. no. of nodes in memory:       5
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -193.295
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -623.695
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             9.31     -642.072         -625.304       
          1             1            20.82     -638.648         -625.304       
         15+            8            50.73     -637.642         -625.304       
*        22            11            54.83     -637.642         -625.498       
        120+            9            84.72     -637.642         -625.498       
        229+            7           114.63     -637.642         -625.498       
        249             4           144.52     -637.642         -625.498       
        426+            9           174.43     -637.642         -625.498       
        446+            4           204.33     -637.642         -625.498       
        529+            6           234.22     -637.642         -625.498       
        572+            5           264.12     -637.642         -625.498       
       1134             8           296.01     -637.062         -625.498       
       4466            10           325.90     -637.062         -625.498       
       5009+            6           355.79     -637.062         -625.498       
       5143+            8           385.68     -637.062         -625.498       
       5229+            5           415.57     -637.062         -625.498       
       5291             5           445.47     -637.062         -625.498       
       5350+            5           475.39     -637.062         -625.498       
       5426+            9           505.28     -637.062         -625.498       
       5487+            4           535.21     -635.393         -625.498       
       6179             6           565.10     -633.783         -625.498       
       7905+            3           594.99     -633.783         -625.498       
       8363             7           624.88     -631.024         -625.498       
      11705             9           654.77     -630.948         -625.498       
      13504+            4           684.66     -629.541         -625.498       
      13583             0           712.10     -625.560         -625.498       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   714.94
 Total CPU time used:               712.22

 Total no. of BaR iterations:   13583
 Best solution found at node:      22
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================



*****Running Instance #253*****


objective value: -633.05686752
objective bound: -633.120179529
BARON solution time: 111.35

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.8197048525447376
 0.9390610585089935
 0.0
 1.042543442582596
 1.194346899087654
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.832150048796864
 0.0
 0.029993421376878226
 1.1378565294434049
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.351043353430394
 0.8719159008869362
 0.0
 0.0
 0.0
 0.0
 3.5111001174776475
 2.265940626033231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16846646658294812
 0.46924026992264756
 0.026405918432174127
 0.0
 0.0
 0.0
 0.9023952891238937
 2.513498488033676
 0.14144403266676175
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998598705
 0.9999999993544009
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49349852708170727
 1.4804955813482432
 0.0
 0.5042649934377651
 1.5127949804166811
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0022364789793916
 3.0067094370524163
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999988641832
 0.9790453654573402
 0.020954634461723826
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.26513450246271
 1.4217114984629866
 0.0
 0.0
 0.0
 1.734865496712857
 0.5782884978866369
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.220279456285958
 0.0
 0.0
 0.0
 0.4815228962046207
 0.0
 0.6552933510151119
 0.32764667529581215
 0.0
 0.0
 1.3447066490800827
 0.6723533241142627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8012608733283877
 0.0
 0.0
 0.0
 0.18147788010331958
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8185221201133033
 0.9999999998720716
 0.18147787980505206
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.487178948113288
 0.6411587560318562
 0.10243071776443413
 0.5128210519811031
 0.22108953878883
 0.03532098707887426
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3359065954850148
 0.9352749717027954
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.6806655939254402
 0.0
 0.9999999999825541
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.19873912562127244
 1.578566406067852
 0.0
 0.0
 0.0
 1.6640934026685412
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2368903408118512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999979550251
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4214335935161644
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0172612448417895
 0.0
 0.0
 0.020954632029682476
 0.2981976471656693
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7631096587610969
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06472502237271087
 0.9291382441494309
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13775170552967664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.815643987235301
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2307684219095782
 2.222959254594959
 1.2711815674271538
 0.0
 0.0
 0.0
 0.7692315778488074
 0.0
 2.999999999787838
 0.0
 0.0
 1.9739941085586465
 0.0
 0.0
 0.0
 5.686846003156203
 0.0
 0.6641126549377698
 0.0
 2.9999999997846003
 0.982940026310924
 2.0170599739833226
 0.0
 2.3131539957214167
 0.0
 1.9827387557616463
 1.220279456527605
 1.758765911096515
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.236890341705651
 0.0
 0.0
 0.0
 2.9999999994463415
 0.0
 0.0
 2.0170599731943453
 0.0
 2.9999999987833283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.557337809824331
 0.0
 0.0
 5.777040744089291
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4815228963264985
 0.0
 0.0
 4.008945916169456
 0.0
 0.0
 5.680665594342666
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.680665593954272
 0.0
 1.0
 0.3359065975891576
 0.9352749775625742
 0.0
 0.0
 2.0
 0.8622482948510807
 0.13775170488438854
 1.8185221202982222
 0.9999999999960959
 0.18147787966189638
 1.8012608747833367
 0.0
 0.0
 0.0
 0.18147788025142134
 0.0
 0.0
 2.0
 0.9999999994306528
 1.7018023530919173
 0.0
 0.0
 6.0
 1.999999996802832
 0.0
 0.0
 1.9999999996526403
 0.9790453658391668
 0.020954634426920596
 1.999999999938051
 5.999999999909733
 0.0
 2.0
 0.9999999995094769
 0.0
 0.0
 1.070861755990171
 2.982738758732404
 0.16784995115539925
 0.0
 4.8621434711071725
 3.137856527070745
 1.8321500489911218
 0.0
 0.02999342124389535
 1.13785652958928
 1.8622482952964206
 2.1334079577893905
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7435894740209879
 0.2778699068510396
 0.9999999937298405
 0.0
 0.0
 0.0
 0.25641052598250513
 0.0
 0.9999999999102449
 0.0
 0.0
 0.24674926356065982
 0.0
 0.0
 0.0
 0.7108557503923624
 0.0
 0.15731859471350254
 0.0
 0.9999999999045396
 0.32764667548963905
 0.25213249673879295
 0.0
 0.28914424945028006
 0.0
 0.999999999188512
 0.7170512216399002
 0.4401694739746666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5598305259410918
 0.0
 0.0
 0.0
 0.999999999845684
 0.0
 0.0
 0.6723533245007871
 0.0
 0.9999999996008991
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8426814050253892
 0.0
 0.0
 0.7221300930988311
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.28294877797964924
 0.0
 0.0
 0.5011182395140829
 0.0
 0.0
 1.0



=====Finished running Instance #253=====




*****Running Instance #254*****


objective value: -625.497874361
objective bound: -625.560430391
BARON solution time: 714.94

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1099950671058922
 1.6371828363418135
 0.0
 0.8900049331625048
 1.3127092579178419
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8490898555486817
 0.0
 0.6543078792981384
 0.4966022655572203
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9408490340959967
 3.385293587173461
 0.5948807162990821
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5886686607294047
 2.1181041484057177
 0.37220385191036326
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3721646476519214
 1.2932420750252744
 0.1509101449948089
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09715918735955291
 0.2914775620462317
 0.0
 0.750000000053693
 2.250000000264984
 0.0
 0.5824699076108768
 1.7474097228991456
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5703709052195748
 1.7111127157225594
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9421813912621921
 0.8529766224061932
 0.2048419866154402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.931428111515571
 1.3104760370323
 0.0
 0.0
 0.0
 2.0685718895598315
 0.68952396312221
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10579871849277735
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44674691335499767
 0.2233734566517695
 0.0
 0.0
 1.5532530869121437
 0.7766265433495936
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3618338278073394
 0.0
 0.0
 0.0
 0.26798271980517924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7320172811820744
 1.0
 0.2679827190193342
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5267802085612232
 0.7633901039584026
 0.0
 0.4732197918707742
 0.23660989583855627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5114526588410439
 0.999999999992839
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6065794837127177
 4.764932714284754
 0.0
 0.7129568867099975
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.6381661728597319
 0.31111818475743686
 0.0
 1.3934205166242837
 0.0
 1.4885473415016868
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20271419076933253
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1593641212092754
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3701834524399439
 0.0
 0.0
 0.1470233781678196
 1.8942012816144358
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7972858095482088
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6278353526751302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3365744734370113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2870431138055621
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05781860946400704
 0.0
 0.0
 2.1909580409770473
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2901703127251536
 4.921023337568539
 1.5114526586408403
 0.0
 0.0
 0.3886367494115206
 0.7098296877741196
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.2419041483641005
 0.0
 0.0
 0.0
 3.0
 0.6701203700067672
 2.329879630463577
 0.0
 2.7580958525912926
 0.0
 1.6298165483258882
 0.1057987184469345
 2.7471779033836388
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2027141910266135
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.3298796302617375
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.816316867672005
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2814836208969984
 3.078976661045486
 0.0
 6.084469084688169
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6065794836700836
 4.764932713911913
 0.0
 0.7129568866586817
 0.5114526588841082
 1.0
 0.0
 0.0
 2.0
 0.9999999996830881
 0.0
 1.7320172810101166
 1.0
 0.26798271899970105
 1.3618338276904018
 0.0
 0.0
 0.0
 0.26798271977384647
 0.0
 0.0
 2.0
 0.9999999999680952
 0.10579871876867408
 0.0
 0.0
 6.0
 1.9999999999920863
 0.0
 0.0
 1.9421813911463781
 0.8529766223627765
 0.20484198661618971
 2.0
 6.0
 0.0
 2.0
 0.9999999999917857
 0.0
 0.0
 1.3721646476073905
 1.2932420749830416
 0.15091014498543381
 1.5295176947696734
 5.503397735351066
 0.967084568178952
 1.8490898553959194
 0.0
 0.6543078792486858
 0.496602265521402
 2.0
 2.949892094125942
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7633901042121044
 0.615127917327779
 0.9999999999107831
 0.0
 0.0
 0.0485795936681727
 0.23660989591112655
 0.0
 1.0
 0.0
 0.0
 0.37500000001496425
 0.0
 0.0
 0.0
 0.6552380185300997
 0.0
 0.0
 0.0
 1.0
 0.22337345665312422
 0.2912349537930265
 0.0
 0.3447619815621402
 0.0
 1.0
 0.9999999973753152
 0.5549975335037549
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.445002466541784
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7766265433882273
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2851854525973423
 0.38487208271348555
 0.0
 1.0



=====Finished running Instance #254=====




