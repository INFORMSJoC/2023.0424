===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -625.513
 Solving bounding LP
 Starting multi-start local search
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            17.82     -639.296         -625.513       
         17+            5            47.72     -637.139         -625.513       
         61+            5            77.64     -637.139         -625.513       
        809            11           107.53     -637.139         -625.513       
       2014+           10           137.42     -637.139         -625.513       
       4497             9           168.47     -637.139         -625.513       
       7866             9           198.35     -637.139         -625.513       
       9469+            7           228.24     -637.139         -625.513       
       9569             7           258.13     -637.139         -625.513       
       9925+           14           288.00     -637.139         -625.513       
      12795            15           317.89     -637.139         -625.513       
      16489            15           347.77     -637.139         -625.513       
      17086             6           377.67     -637.139         -625.513       
      20347            13           407.55     -637.139         -625.513       
      24666            15           438.74     -637.139         -625.513       
      26723+            7           468.64     -637.139         -625.513       
      26861            18           498.54     -637.139         -625.513       
      26902+            6           528.44     -637.139         -625.513       
      26993+            7           558.32     -637.139         -625.513       
      29737             8           588.20     -637.139         -625.513       
      33658            15           618.09     -637.139         -625.513       
      37711            12           647.98     -637.139         -625.513       
      41809            14           677.87     -637.139         -625.513       
      42608+            5           707.76     -637.139         -625.513       
      42716+            7           737.65     -637.139         -625.513       
      42739+            5           767.54     -637.139         -625.513       
      43808            11           797.42     -637.139         -625.513       
      47167            13           827.31     -637.139         -625.513       
      50513            11           857.20     -637.139         -625.513       
      54109            13           887.09     -637.139         -625.513       
      57274            13           916.97     -637.139         -625.513       
      57665             7           946.86     -637.139         -625.513       
      57727+            6           976.77     -637.139         -625.513       
      57844+            5          1006.65     -637.139         -625.513       
      58159+            9          1036.54     -636.186         -625.513       
      59191            11          1066.42     -636.186         -625.513       
      62573            12          1098.39     -636.186         -625.513       
      65785            11          1128.28     -636.186         -625.513       
      69084            11          1158.35     -636.186         -625.513       
      72320            12          1188.24     -636.186         -625.513       
      75426            11          1218.12     -636.186         -625.513       
      76844+            5          1248.02     -636.186         -625.513       
      76887+            5          1277.92     -636.186         -625.513       
      76999+            8          1307.82     -636.186         -625.513       
      78231             9          1337.70     -636.186         -625.513       
      81530            11          1367.59     -636.186         -625.513       
      85085             5          1397.48     -636.186         -625.513       
      86723            11          1427.36     -636.186         -625.513       
      87089+            7          1457.25     -636.186         -625.513       
      87177             7          1487.15     -636.186         -625.513       
      87291+            8          1517.05     -636.186         -625.513       
      87340+            6          1546.94     -636.186         -625.513       
      87375+            4          1576.83     -636.186         -625.513       
      87417+            3          1606.72     -636.186         -625.513       
      87521+           12          1636.62     -633.442         -625.513       
      87545+            6          1666.52     -633.442         -625.513       
      87843+            7          1696.41     -633.442         -625.513       
      88015+            5          1726.31     -633.442         -625.513       
      88122+            8          1756.20     -633.442         -625.513       
      88186+            4          1786.10     -633.442         -625.513       
      88275             5          1816.00     -633.442         -625.513       
      89550            15          1845.89     -633.442         -625.513       
      93414            14          1875.77     -633.442         -625.513       
      95911            13          1905.66     -633.442         -625.513       
      99488             6          1935.54     -633.442         -625.513       
     100044+            4          1965.45     -633.442         -625.513       
     100157+            6          1995.33     -633.442         -625.513       
     100272+            4          2025.24     -633.442         -625.513       
     100550+            6          2055.12     -633.442         -625.513       
     102261             7          2085.01     -632.839         -625.513       
     106038             6          2114.90     -632.839         -625.513       
     108729            11          2144.78     -632.839         -625.513       
     112304             9          2174.66     -632.839         -625.513       
     115864             8          2204.55     -632.839         -625.513       
     119274            11          2234.43     -632.064         -625.513       
     122999             6          2264.31     -632.064         -625.513       
     126853            11          2294.20     -631.554         -625.513       
     129045             4          2324.09     -631.554         -625.513       
     132683             7          2353.97     -629.960         -625.513       
     136086             2          2383.86     -628.514         -625.513       
     136383             0          2386.26     -625.576         -625.513       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2395.86
 Total CPU time used:              2386.33

 Total no. of BaR iterations:  136383
 Best solution found at node:       1
 Max. no. of nodes in memory:      28
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -170.977
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -476.264
 Preprocessing found feasible solution with value -629.047
 Preprocessing found feasible solution with value -629.047
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            11.17     -647.056         -629.426       
*         1             1            14.65     -646.831         -633.594       
          1             1            15.58     -646.831         -633.594       
         15+            7            45.49     -645.770         -633.594       
         94+            5            75.39     -645.770         -633.594       
        223+            8           105.28     -645.770         -633.594       
        359+            6           135.18     -645.770         -633.594       
        497+            3           165.08     -645.770         -633.594       
       3053            10           196.10     -645.770         -633.594       
       6315            11           225.99     -645.770         -633.594       
       9325            11           255.88     -645.770         -633.594       
      12473            11           285.77     -645.770         -633.594       
      16194             8           315.66     -645.770         -633.594       
      16658+            6           345.57     -645.770         -633.594       
      16901             6           375.46     -645.770         -633.594       
      17292+            8           405.37     -645.770         -633.594       
      17991            13           435.26     -645.770         -633.594       
      21537            11           465.15     -645.770         -633.594       
      25023             8           495.04     -645.770         -633.594       
      26492+            7           524.94     -645.770         -633.594       
      29566             7           554.83     -645.770         -633.594       
      33019            12           584.73     -645.770         -633.594       
      36475            12           614.62     -645.770         -633.594       
      39808            12           644.51     -645.395         -633.594       
      42957             8           674.40     -645.395         -633.594       
      46169            11           704.29     -645.395         -633.594       
      48347+            6           734.19     -645.395         -633.594       
      48573             8           764.08     -645.395         -633.594       
      49034            12           793.97     -645.395         -633.594       
      52263            13           823.86     -645.395         -633.594       
      55762             7           853.75     -645.395         -633.594       
      59559            12           883.64     -645.395         -633.594       
      62684+            9           913.56     -645.395         -633.594       
      62862+            5           943.45     -645.395         -633.594       
      62978             6           973.35     -645.395         -633.594       
      65163             8          1003.23     -644.169         -633.594       
      68287             7          1033.12     -644.169         -633.594       
      72014             7          1063.01     -641.626         -633.594       
      75179            10          1092.90     -639.397         -633.594       
      78260             8          1122.79     -639.397         -633.594       
      81543             9          1152.68     -639.397         -633.594       
      84989             9          1182.57     -639.397         -633.594       
      86949+            5          1212.46     -638.226         -633.594       
      87055+            2          1242.35     -637.940         -633.594       
      87095             0          1261.76     -633.658         -633.594       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1266.71
 Total CPU time used:              1261.87

 Total no. of BaR iterations:   87095
 Best solution found at node:      12
 Max. no. of nodes in memory:      17
 
 All done
===========================================================================



*****Running Instance #895*****


objective value: -625.513201348
objective bound: -625.575758918
BARON solution time: 2395.85

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0717668813766894
 1.9282331189353898
 0.0
 0.803021655319655
 1.4447292390869277
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002828735
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0371684031334105
 3.2217733542636426
 0.8958956088036067
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5724550701302374
 1.778226646595416
 0.4944809174842135
 0.1729869319994687
 0.623147668740489
 0.0
 0.0
 0.0
 0.0
 0.8517371689989621
 3.0681972626812573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.727990599638708
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.038666330235459886
 0.11599899073100553
 0.0
 0.7499999999726332
 2.2500000003451026
 0.0
 0.49455260948895857
 1.4836578287340458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7167810602212773
 2.150343181070101
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6488332739042426
 0.805522158293333
 0.5456445680854306
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.192777960144059
 1.2616922511819175
 0.0
 0.13590040188932806
 0.0
 1.8072220409018047
 0.543829906295063
 0.0
 0.05857744054459793
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6811930415586269
 0.3405965207271355
 0.0
 0.0
 1.3188069587026834
 0.6594034792502712
 0.14307067095230225
 0.0
 0.0
 0.0
 0.04930522827926672
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.856929329386119
 0.0
 0.0
 0.0
 0.6399377585280184
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3107570141720875
 0.9850048714876964
 0.7042381146092594
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4950501217423948
 0.6539263536099744
 0.09359870713367349
 0.5049498786493938
 0.2208621825442024
 0.03161275673742128
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3882964759204588
 0.7358658586301632
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6794344920738836
 3.9053853606386437
 0.0
 0.7615462015266535
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.24846545558799038
 0.0
 1.3205655082751147
 0.0
 1.6117035244749338
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24775089414849416
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1419110719783798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5031329123057332
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7522491062297907
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2641341416531578
 0.975275899323542
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2720094011658145
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12521146442520573
 0.0
 0.2384537990222605
 0.0
 0.0
 0.0
 0.0
 0.0
 0.30627638970534365
 0.0
 0.0
 0.0
 0.0
 0.04489033708370022
 0.0
 0.014995129102602624
 2.0813930751106926
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.242575182486043
 5.15483736620066
 1.124162334352961
 0.0
 0.0
 0.15466532096357893
 0.7574248179310175
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.19237589929102206
 5.590370613074309
 0.0
 0.7961346007235699
 0.0
 3.0
 1.0217895622857625
 1.9782104382044166
 0.0
 2.409629387688849
 0.0
 2.4968670884849584
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2477508943634974
 0.0
 0.0
 0.0
 2.7279905996408784
 0.0
 0.0
 1.9782104379529544
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.919934431601272
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8671242412546643
 2.845162634209867
 0.0
 5.346366054140484
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6794344920225099
 3.9053853603146584
 0.0
 0.7615462014683813
 0.3882964759188807
 0.7358658586281528
 0.0
 0.0
 2.0
 0.8747885360687705
 0.12521146385886658
 1.3107570140425233
 0.9850048713903629
 0.7042381145397053
 2.0
 0.0
 0.0
 0.0
 0.6892429867509189
 0.0
 0.0
 2.0
 0.9999999999450829
 0.0
 0.0
 0.0
 6.0
 1.8055221573421294
 0.0
 0.1944778424197356
 1.6488332738013411
 0.8055221582430565
 0.5456445680513717
 1.9999999998187656
 6.0
 0.0
 1.7279905994652376
 0.9999999999962138
 0.0
 0.0
 1.0247241009681471
 3.69134493130992
 0.0
 1.6096234732063133
 5.000000000680981
 1.3903765262382939
 2.0
 0.0
 0.0
 1.0000000002106284
 1.8747885366258878
 3.3729623578938037
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7475250607977412
 0.644354670764973
 1.0
 0.0
 0.0
 0.019333165119953994
 0.25247493929988546
 0.0
 1.0
 0.0
 0.0
 0.3750000000220648
 0.0
 0.0
 0.07153533546869405
 0.6987963266216759
 0.0
 0.16881317794362677
 0.0
 1.0
 0.3405965207458049
 0.24727630476432286
 0.0
 0.30120367345311294
 0.0
 0.9284646646055555
 0.11624508739359023
 0.5716734770024257
 0.0
 0.16426484074089806
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42832652303571167
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6594034792865212
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8311868220866877
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7194900718655117
 0.0
 0.0
 0.3583905301442879
 0.35564532927064024
 0.0
 1.0



=====Finished running Instance #895=====




*****Running Instance #896*****


objective value: -633.594191331
objective bound: -633.657557069
BARON solution time: 1266.7

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3097294068546848
 0.0
 0.0
 0.6902705933773506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.8323409441187556
 0.16765905609951998
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.245831720747023
 3.261976438695147
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23645263419280182
 0.9083695095425954
 0.0
 0.0
 0.0
 0.0
 0.8047652036592894
 3.0916304901446856
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6612149415818106
 1.983644824801262
 0.0
 0.5738069289883637
 1.7214207870057552
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7649781296993834
 2.29493438917287
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9244975377271927
 0.6444272370366959
 0.4310752254956547
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.34016097911213
 1.446720327074315
 0.0
 0.0
 0.0
 1.65983902104553
 0.5532796739570902
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3346978287321725
 0.0
 0.0
 0.0
 0.6653021714631822
 0.0
 0.46984818970687786
 0.23492409482406473
 0.0
 0.0
 1.5301518105633314
 0.7650759051715674
 0.421955963211547
 0.0
 0.0
 0.0
 0.08977347885297371
 0.7690244251559246
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9883771753246352
 0.0
 0.0
 0.0
 0.21028274318721102
 1.8013400813312395
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6999437789402576
 1.0
 0.3000562212459763
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.55275830608252
 0.7763791526713809
 0.0
 0.44724169435880023
 0.22362084707452848
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4069782480157109
 0.465665831268008
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8649624555726032
 5.164474203169268
 0.0
 0.7636710611454047
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5896668620879084
 0.0
 0.0
 1.1350375447771708
 0.0
 1.5930217523131975
 0.0
 0.0
 0.5354695770808872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19864926619035742
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7541682802197108
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3555727635944831
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.8013507341749581
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.53433416890094
 0.9587821624568288
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23632893937500715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07550246302051142
 0.0
 0.0
 4.736583831504748
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3291374590030114
 4.50780815944217
 0.8726440792837189
 0.0
 0.0
 0.0
 0.6708625415064545
 0.0
 3.0
 0.0
 0.0
 2.6448597663830724
 0.0
 0.0
 1.280753867469648
 5.786881306186445
 0.0
 1.1448221437353974
 0.0
 3.0
 0.7047722845309425
 2.295227715994119
 0.0
 2.2131186950026205
 0.0
 3.0
 1.3346978287321725
 1.3097294068546848
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6902705933773506
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2952277157348986
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.896395693803975
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6653021714631822
 0.0
 0.0
 3.0599125188722534
 0.0
 0.0
 6.793107719887276
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8649624555184717
 5.164474202788117
 0.0
 0.7636710610989644
 0.40697824807586813
 0.4656658313375824
 0.0
 0.0
 2.0
 0.9999999996330597
 0.0
 1.6999437787688916
 1.0
 0.30005622122335607
 1.4103331384183555
 0.0
 0.0
 0.0
 0.300056222017115
 2.5703645062670963
 0.0
 2.0
 0.9999999999643971
 2.0
 0.0
 0.0
 5.999999999618181
 2.00000000086003
 0.0
 0.0
 1.9244975376157702
 0.6444272370089668
 0.4310752254813709
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0412178378247399
 3.999999999584171
 0.0
 1.2458317206448486
 3.261976438421561
 0.0
 2.0
 0.0
 0.8323409440540535
 0.16765905609112502
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7763791529708994
 1.0
 0.9999999998403348
 0.0
 0.0
 0.0
 0.22362084715473815
 0.0
 1.0
 0.0
 0.0
 0.33060747077419517
 0.0
 0.0
 0.29918885950913693
 0.7233601632321965
 0.0
 0.22709237740937432
 0.0
 1.0
 0.23492409482728016
 0.2869034644779032
 0.0
 0.2766398368561629
 0.0
 0.7008111405740667
 0.6673489143218605
 0.6548647033803576
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.34513529666306075
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7650759052148673
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7729076226166383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3326510857096911
 0.0
 0.0
 0.3824890648326907
 0.0
 0.0
 1.0



=====Finished running Instance #896=====




