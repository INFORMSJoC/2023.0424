===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -208.647
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.614
 Preprocessing found feasible solution with value -625.614
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            10.38     -640.576         -626.753       
*         1             1            12.15     -639.295         -626.849       
          1             1            19.84     -637.999         -626.849       
         24+            5            49.75     -634.833         -626.849       
         79+            5            79.66     -634.833         -626.849       
        176+            5           109.56     -631.946         -626.849       
        242+            2           139.47     -631.946         -626.849       
        359+            4           169.36     -628.661         -626.849       
        456+            3           199.24     -628.313         -626.849       
        459             0           204.66     -626.912         -626.849       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   205.53
 Total CPU time used:               204.71

 Total no. of BaR iterations:     459
 Best solution found at node:      22
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -214.474
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -629.455
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             9.26     -639.094         -629.495       
          1             1            14.18     -637.857         -629.495       
         23+            5            44.08     -636.288         -629.495       
         48+            9            73.97     -636.288         -629.495       
       1868            11           103.86     -636.288         -629.495       
       2784+            5           133.75     -636.288         -629.495       
       7509            13           163.63     -636.288         -629.495       
      12749            12           193.51     -636.288         -629.495       
      18499            12           223.39     -636.288         -629.495       
      24088            11           253.26     -636.288         -629.495       
      29857            11           283.14     -636.288         -629.495       
      35514            13           313.01     -636.288         -629.495       
      40918             8           342.88     -636.288         -629.495       
      46692            14           372.75     -636.288         -629.495       
      52618            13           402.63     -636.288         -629.495       
      58059            10           432.51     -636.288         -629.495       
      64063            10           462.38     -636.288         -629.495       
      69482             8           492.26     -636.288         -629.495       
      73831            10           522.14     -636.288         -629.495       
      77348+            3           552.03     -636.288         -629.495       
      80159            10           582.97     -635.645         -629.495       
      84273+            5           612.88     -635.645         -629.495       
      84431+            5           642.76     -635.639         -629.495       
      87559             6           672.64     -635.055         -629.495       
      88261+            6           702.53     -633.987         -629.495       
      92376             6           732.41     -633.987         -629.495       
      97309            10           762.29     -633.987         -629.495       
      98483             0           784.42     -629.558         -629.495       

                         *** Normal completion ***            

 Wall clock time:                   787.65
 Total CPU time used:               784.42

 Total no. of BaR iterations:   98483
 Best solution found at node:       1
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================



*****Running Instance #397*****


objective value: -626.848916467
objective bound: -626.911607625
BARON solution time: 205.52

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.8375516317140012
 1.0136107199705087
 0.0
 1.034858072268571
 1.2523923254173903
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9185349036412178
 0.0
 0.0
 1.0814650968401809
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8428679098335532
 0.5280572559496496
 0.0
 0.0
 0.0
 0.0
 4.0756669944433614
 2.5534078402336067
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10040382832217996
 0.2969270964099006
 0.007751157056894584
 0.0
 0.0
 0.0
 0.7768600390702814
 2.2974302830227638
 0.05997345195213181
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7966375679462827
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4073034357305382
 1.2219103070934734
 0.0
 0.47648254379862887
 1.4294476312698614
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1162140207836808
 3.3486420620770234
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.877403728179542
 0.8992531555241434
 0.2233431165695319
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.588081304866529
 2.824140724503575
 0.0
 0.0
 0.0
 0.36382789294104917
 0.22395007866908964
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7293798836641125
 0.3646899417774945
 0.0
 0.0
 1.2706201165968538
 0.6353100582032297
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.642448181305876
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3575518196768872
 0.9755099214914656
 0.6669382591297154
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4453643020079168
 0.6304749209152405
 0.09220722997808299
 0.5546356983734706
 0.24193478252022127
 0.03538306662405418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.365115791364203
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6348842087814052
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.2515966461045998
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4122220289324143
 0.0
 0.0
 0.0
 1.968886579515747
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2872503974095929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.031113420808315972
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5877779719290248
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3575518186689644
 0.0
 1.0480908035317216
 0.10074684518096487
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7127496029620763
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.12273613293564
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20336243292661385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12759029714237566
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12259627261778622
 0.0
 0.0
 0.013740487778827993
 0.0
 0.0
 0.0
 0.024490079095289552
 3.5106538392290956
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.16804645290124
 1.3709251657675752
 0.3651157912821832
 0.0
 0.0
 0.0
 0.831953547517746
 0.0
 3.0
 0.0
 0.0
 1.6292137428037543
 0.0
 0.0
 0.0
 7.41222202910874
 0.0
 0.4050820817889752
 0.634884208638011
 3.0
 1.094069825441607
 1.9059301750503268
 0.0
 0.587777971591079
 0.0
 2.642448182120452
 0.0
 1.8511623516401563
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.287250397631224
 0.0
 0.0
 0.0
 2.7966375679514694
 0.0
 0.0
 1.9059301748000834
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.1342637740451766
 0.0
 0.0
 6.629074834601254
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.464856082806629
 0.0
 0.0
 5.251596646303555
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.2515966459336476
 0.0
 1.0
 0.0
 1.0
 0.0
 0.0
 2.0
 0.8724097033512409
 0.12759029658982954
 1.3575518195442637
 0.9755099213961538
 0.6669382590645399
 2.0
 0.0
 0.0
 0.0
 0.6424481812463774
 0.0
 0.0
 2.0
 0.9999999999485725
 0.0
 0.0
 0.0
 4.951909197441584
 3.048090802947426
 0.0
 0.0
 1.877403728068717
 0.8992531554710622
 0.22334311655635186
 2.0
 6.0
 0.0
 1.7966375677664725
 0.99999999999618
 0.0
 0.0
 0.8772638673564676
 2.5943573793285077
 0.06772460900515767
 0.0
 4.918534904118064
 3.0814650960837358
 1.918534903508625
 0.0
 0.0
 1.0814650967650608
 1.8724097038967866
 2.2660030452839646
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.722682150935927
 0.17136564571857577
 0.365115791330658
 0.0
 0.0
 0.0
 0.27731784916062546
 0.0
 1.0
 0.0
 0.0
 0.20365171784611039
 0.0
 0.0
 0.0
 0.9265277536262101
 0.0
 0.11445111563102732
 0.6348842087233855
 1.0
 0.3646899417961455
 0.2382412718741136
 0.0
 0.07347224644769781
 0.0
 1.0
 0.33035391399792674
 0.4473121614201426
 0.0
 0.14186968922761126
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5526878386258008
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6353100582360142
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8855488844089933
 0.0
 0.0
 0.8286343543137192
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5277763967744621
 0.0
 0.0
 0.558107010338231
 0.0
 0.0
 1.0



=====Finished running Instance #397=====




*****Running Instance #398*****


objective value: -629.494813368
objective bound: -629.557769145
BARON solution time: 787.65

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.8327901173723448
 0.7449260063098977
 0.0
 1.167209882898785
 1.044062577658595
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9348330739719242
 0.0
 0.0
 1.0651669262089285
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0156981185480014
 0.33270396382108897
 0.0
 0.0
 0.0
 0.0
 3.9191349563974445
 1.2837591316626904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16196112418982836
 0.4759026666427655
 0.010253627255092292
 0.0
 0.0
 0.0
 0.8673827803695611
 2.5486966718126367
 0.05491329932953873
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7643000023323097
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.511400915360379
 1.5342027458728915
 0.0
 0.5386634793529479
 1.6159904378417738
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9499356056138346
 2.8498068164913035
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9853642309777623
 0.014635768695178951
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.017313544474872
 1.9465824594125076
 0.0
 0.0
 0.0
 0.7464871115404218
 0.28961688446541217
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1714487618904768
 0.0
 0.0
 0.0
 0.8285512380052578
 0.0
 0.5635640554831647
 0.28178202766504445
 0.0
 0.0
 1.4364359447759958
 0.7182179721852273
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7893414442030726
 0.0
 0.0
 0.0
 0.47145723653947635
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5285427644474279
 0.9961180700633012
 0.4753391658470114
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5440038678503378
 0.7720019334709007
 0.0
 0.4559961325499191
 0.22799806613900386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7604686086980409
 0.9999999991369902
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9216851059384583
 3.9081977402889305
 0.0
 0.8287384405145236
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.21065855634763003
 1.589991176189202
 0.0
 1.0783148944862921
 0.0
 1.2395313909564618
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22380339967939894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995187137
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4100088243151392
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7392013184795921
 0.0
 0.23619934518178276
 0.014635769539740304
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7761966005770352
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9706560956725206
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2356999984870323
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1712615600606087
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.003881930522558105
 4.1963756485256045
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.316005801633152
 1.3484020824872052
 1.760468608040564
 0.0
 0.0
 0.0
 0.6839941988508756
 0.0
 3.0
 0.0
 0.0
 2.045603661338107
 0.0
 0.0
 0.0
 6.963896004402686
 0.0
 0.6481174180876861
 0.0
 3.0
 0.8453460831482091
 2.154653917298706
 0.0
 1.0361039964247938
 0.0
 2.260798682429486
 1.17144876190708
 1.5777161237102704
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2112724605712795
 0.0
 0.0
 0.0
 2.764300002659992
 0.0
 0.0
 2.154653916961223
 0.0
 2.999999999729802
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4709927515117367
 0.0
 0.0
 5.2028940882432195
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8285512380238735
 0.0
 0.0
 3.799742422196734
 0.0
 0.0
 5.658621286848116
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.9216851057994743
 3.9081977399181587
 0.0
 0.8287384403804616
 0.7604686093722975
 1.0
 0.0
 0.0
 2.0
 0.9999999995009765
 0.0
 1.5285427642728364
 0.9961180699446225
 0.47533916577360247
 1.7893414440414555
 0.0
 0.0
 0.0
 0.47145723647873233
 0.0
 0.0
 2.0
 0.9999999998016036
 1.9999999998949176
 0.0
 0.0
 5.763800655679668
 2.236199343852161
 0.0
 0.0
 2.0
 0.985364231033049
 0.014635768626500477
 2.0
 5.999999999861654
 0.0
 1.7643000021629434
 0.9999999999856679
 0.0
 0.0
 1.0293439045642396
 3.0245993384916496
 0.06516692651402893
 0.0
 4.934833074684077
 1.616463095367436
 1.9348330737968085
 0.0
 0.0
 1.0651669261394192
 2.0
 1.7889885838327708
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7720019338766799
 0.20582218348350098
 0.999999999112332
 0.0
 0.0
 0.0
 0.22799806626949798
 0.0
 1.0
 0.0
 0.0
 0.25570045765501975
 0.0
 0.0
 0.0
 0.8704870005405053
 0.0
 0.15734403581599374
 0.0
 1.0
 0.2817820277198509
 0.2693317396501327
 0.0
 0.129512999532092
 0.0
 1.0
 0.5857243809764678
 0.4163950586605962
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5836049414133527
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7182179723308477
 0.0
 0.9999999999606702
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8426559641732755
 0.0
 0.0
 0.7941778165735458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41427561902485033
 0.0
 0.0
 0.47496780276290135
 0.0
 0.0
 1.0



=====Finished running Instance #398=====




