===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -622.992
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.325
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.52     -636.769         -625.325       
         51+            4            46.42     -636.291         -625.325       
       1873            10            76.32     -636.102         -625.325       
*      4651             7           103.23     -635.817         -625.477       
       6047+            4           133.12     -635.817         -625.477       
       9272             9           163.01     -635.817         -625.477       
      13588+            4           192.91     -635.817         -625.477       
      17450             9           222.81     -635.817         -625.477       
      20499             6           252.71     -635.597         -625.477       
      24621             8           282.60     -635.597         -625.477       
      26873             9           312.49     -635.438         -625.477       
      31605            10           342.37     -635.438         -625.477       
      35049+            4           372.26     -635.409         -625.477       
      35456+            3           402.18     -627.404         -625.477       
      35459             0           404.78     -625.540         -625.477       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   406.88
 Total CPU time used:               405.33

 Total no. of BaR iterations:   35459
 Best solution found at node:    7706
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -189.171
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.365
 Preprocessing found feasible solution with value -628.607
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            17.52     -639.826         -628.620       
          1             1            24.70     -636.609         -628.620       
         11             0            52.71     -628.683         -628.620       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    53.03
 Total CPU time used:                52.82

 Total no. of BaR iterations:      11
 Best solution found at node:       8
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #709*****


objective value: -625.477433227
objective bound: -625.539987151
BARON solution time: 406.87

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0819727242994317
 0.8784282066233797
 0.0
 0.9180272758673027
 0.7453247530972407
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.99999999939531
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8805865402135838
 0.13134115791031722
 0.4598847935814396
 0.04187562609937176
 0.0
 0.0
 0.0
 0.8521559713653707
 2.983783447806071
 0.2716936975624089
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998212961
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7032746284427487
 2.109823885213445
 0.0
 0.5758277368541844
 1.7274832104848714
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7208976347841095
 2.1626929042323875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9906570222443198
 0.8595758795863231
 0.14976709842476893
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.127890991186085
 2.382729802508409
 0.0
 0.0
 0.0
 0.3341246062832815
 0.15525459844077916
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3611905422326814
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4644593687125249
 0.23222968431081448
 0.0
 0.0
 1.5355406315407891
 0.7677703156209602
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8590326713737253
 0.0
 0.0
 0.0
 0.41294092602582677
 0.7096790438838763
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5870590747205044
 1.0
 0.4129409254868809
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3801991335684805
 0.6900995662691715
 0.0
 0.6198008666652632
 0.30990043308952486
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4394450482817841
 0.585881996355363
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3181764228713118
 4.706472535131378
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.14096732844154009
 1.510620793937401
 0.0
 0.6818235774286415
 0.0
 1.5605549515589576
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2847896114631272
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998312403
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4893792068192012
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01834735785746167
 0.0
 0.5379844027316208
 0.1404241210362349
 1.638809455639556
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7152103854718609
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41411800312694025
 1.0165028709362425
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.686430676618649
 0.0
 0.00934297854544144
 0.0
 0.0
 4.226479942872834
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.0702987001332955
 0.0
 1.0253270448390328
 0.0
 0.0
 0.0
 0.9297012999410897
 0.0
 3.0
 0.0
 0.0
 2.8130985137556666
 0.0
 0.0
 0.0
 7.510620794173485
 0.0
 0.6331015775911285
 0.0
 2.9999999996261026
 0.6966890530233426
 2.3033109474435265
 0.0
 0.4893792051463361
 0.0
 2.9816526428894075
 0.3611905456336404
 1.960400930940009
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6633520289890849
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.3033109471617492
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.10763311673385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8835905391152963
 0.8805865404454468
 0.0
 7.0246489582824445
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.3181764228641284
 4.706472535071853
 0.0
 1.0
 0.4394450488131273
 0.5858819970629919
 0.0
 0.0
 2.0
 0.9999999993771845
 0.0
 1.5870590745690807
 1.0
 0.41294092546290384
 1.8590326721175128
 0.0
 0.0
 0.0
 0.4129409261925193
 0.709679044169171
 0.0
 2.0
 0.9999999999038427
 0.3611905447259658
 0.0
 0.0
 5.462015598174304
 2.537984401417409
 0.0
 0.0
 1.990657022096878
 0.8595758795325869
 0.1497670984331337
 2.0
 5.999999999926899
 0.0
 2.0
 0.9999999999028261
 0.0
 0.0
 0.9834971293248376
 3.4436682415515283
 0.3135693236761709
 0.0
 0.0
 0.8805865405302711
 0.0
 0.0
 0.0
 2.999999999924565
 2.0
 1.623752959718304
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6900995667303584
 0.0
 0.9999999987975525
 0.0
 0.0
 0.0
 0.3099004333137296
 0.0
 1.0
 0.0
 0.0
 0.35163731420719974
 0.0
 0.0
 0.0
 0.9388275992665123
 0.0
 0.1335450343343004
 0.0
 0.9999999998413241
 0.232229684335197
 0.2879138684181992
 0.0
 0.06117240062106022
 0.0
 0.999999999601186
 0.9999999930970035
 0.5409863621076791
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4590136378983211
 0.0
 0.0
 0.0
 0.9999999999859853
 0.0
 0.0
 0.7677703157029755
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8664549656015869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3604488173771484
 0.9999999996545635
 0.0
 1.0



=====Finished running Instance #709=====




*****Running Instance #710*****


objective value: -628.620239682
objective bound: -628.683107991
BARON solution time: 53.03

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2831189788367663
 0.0
 0.0
 0.7168810214393315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8886765382734207
 0.0
 0.0
 1.1113234621850525
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2516688918159006
 1.2146310783446947
 0.5213644926766132
 0.0
 0.0
 0.0
 0.7612541503983328
 3.6740454606745496
 1.5770359262543658
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20238373492356498
 0.575187598241951
 0.020281387076965664
 0.0
 0.0
 0.0
 0.9084898949438414
 2.5819867436463877
 0.09104207519757813
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20003391234400109
 0.6001017369934704
 0.0
 0.7500000000860105
 2.2500000002371054
 0.0
 0.5200636566987005
 1.5601909700662877
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5299024311678147
 1.589707293473946
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9657314628278801
 0.7557453922362007
 0.2785231452399391
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.5619976657307575
 2.073755219045372
 0.0
 0.0
 0.0
 0.2653230979122403
 0.09892401833714594
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2999471754379726
 0.0
 0.0
 0.0
 0.7000528246219548
 0.0
 0.6131635825376657
 0.3065817912237284
 0.0
 0.0
 1.3868364177329455
 0.6934182087623499
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7139491847233788
 0.0
 0.0
 0.0
 0.6159043934351102
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3840956075602957
 0.8753551178615634
 0.7405492747779169
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.464038416627681
 0.7320192079960753
 0.0
 0.5359615838119838
 0.2679807917906744
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3316679028653949
 0.997933642907488
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6355168365800489
 3.1610503078495564
 0.0
 0.8976998178066183
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.28605081600174515
 0.6228298420789486
 0.0
 1.364483163771039
 0.0
 1.6683320974364795
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.255966976153413
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36424711647707647
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6701464219333458
 0.0
 0.17267923783013822
 0.24425460836426638
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7440330242045046
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.002066357105760591
 0.8891263704419237
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10230018274956958
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.034268537902168106
 0.0
 0.12464488270790058
 5.721476855832199
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.196057624830122
 1.9876644628372084
 1.3296015455808965
 0.0
 0.0
 0.8001356493329358
 0.803942375674555
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.635752884576877
 0.0
 0.7978527202424816
 0.0
 3.0
 0.9197453737613941
 2.0802546267259148
 0.0
 0.3642471162533499
 0.0
 2.3298535788285855
 1.29994717538402
 1.283118978789773
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7168810214151277
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0802546264952957
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.581518713787807
 0.0
 0.0
 6.012335537327249
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7000528245901078
 0.0
 0.0
 2.1196097246016468
 0.0
 0.0
 4.694266962140896
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6355168365229887
 3.1610503075312657
 0.0
 0.8976998177233382
 0.3316679029471289
 0.9979336431612142
 0.0
 0.0
 2.0
 0.9999999996712581
 0.0
 1.3840956074177206
 0.8753551177793926
 0.7405492747107139
 1.713949184554444
 0.0
 0.0
 0.0
 0.6159043933684747
 0.0
 0.0
 2.0
 0.999999999954088
 2.0
 0.0
 0.0
 5.827320763133442
 2.172679237192998
 0.0
 0.0
 1.9657314626810831
 0.755745392191361
 0.2785231452349772
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.1108736298389628
 3.1571743418144638
 0.11132346226832278
 1.0129230421849595
 4.88867653878252
 2.098400418845514
 1.8886765381059323
 0.0
 0.0
 1.111323462092927
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7320192082488903
 0.24845805786204686
 0.999999999744638
 0.0
 0.0
 0.1000169561566918
 0.26798079188091106
 0.0
 1.0
 0.0
 0.0
 0.3750000000179965
 0.0
 0.0
 0.0
 0.9544691105596108
 0.0
 0.1821843002537048
 0.0
 1.0
 0.3065817912390064
 0.2600318283280153
 0.0
 0.04553088952424246
 0.0
 1.0
 0.6499735877173758
 0.6415594893610579
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35844051068680616
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6934182088031087
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8178156997699907
 0.0
 0.0
 0.7515419421852204
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3500264123102068
 0.0
 0.0
 0.26495121556239914
 0.0
 0.0
 1.0



=====Finished running Instance #710=====




