===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -156.294
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.687
 Preprocessing found feasible solution with value -624.687
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            14.20     -634.134         -624.687       
         15+            2            45.09     -628.745         -624.687       
        374+            6            75.01     -628.364         -624.687       
       2690            13           104.90     -628.364         -624.687       
       6607            10           134.79     -628.364         -624.687       
       7084+            2           164.68     -628.364         -624.687       
       7225             0           187.86     -624.749         -624.687       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   188.79
 Total CPU time used:               188.08

 Total no. of BaR iterations:    7225
 Best solution found at node:     362
 Max. no. of nodes in memory:      16
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -177.691
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.990
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            21.22     -641.652         -624.990       
         22+            5            51.98     -634.701         -624.990       
        133             6            81.88     -634.701         -624.990       
       1128             6           112.29     -629.378         -624.990       
       1413             0           114.28     -625.053         -624.990       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   114.84
 Total CPU time used:               114.40

 Total no. of BaR iterations:    1413
 Best solution found at node:     117
 Max. no. of nodes in memory:      12
 
 All done
===========================================================================



*****Running Instance #127*****


objective value: -624.68692278
objective bound: -624.749397693
BARON solution time: 188.79

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3377123912117381
 0.0
 0.0
 0.662287608903276
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9655981985807087
 0.0
 0.4127491203777229
 0.6216526813815904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.12373180735749
 0.3892747427163731
 0.0
 0.0
 0.0
 0.0
 4.254615512387229
 1.4738519886173689
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9817456170918246
 0.5927019477925204
 0.0344018019476346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.834842206041169
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.75000000007317
 2.250000000073487
 0.0
 0.0
 0.0
 0.0
 0.5833348171520948
 1.7500044513377169
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.666665182845975
 1.9999955484058634
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8953715720104367
 0.849564094212258
 0.2550643340415798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.775800915869988
 2.5847532026470184
 0.0
 0.0
 0.0
 0.4148962403743528
 0.22454964203625888
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.347592256340972
 0.2241348000974784
 0.0
 0.0
 0.0
 0.0
 0.44444048804091996
 0.2222202439795343
 0.0
 0.0
 1.5555595122102972
 0.7777797559574869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6332729185118938
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3667270824300013
 0.9861841265199605
 0.6470887913471521
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.54863493374889
 0.7743174663402698
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.45136506634150125
 0.22568253301565677
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8040600865902522
 0.92579652806581
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.489784478555997
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3605541189829469
 0.0
 0.0
 0.0
 1.1959399136255506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11729157934323278
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999654914
 0.0
 2.9999999999108664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6394458817227793
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36672708147477984
 0.0
 0.26307704678043947
 0.1504359063897254
 1.6524077440259142
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.5462257981807151
 0.0
 0.0
 0.7758652002040091
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07420347200262288
 1.0182543831851094
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16515779481895726
 0.0
 0.0
 0.0
 0.0
 2.2312681269615644
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10462842860844504
 0.0
 0.013815874049767122
 5.214894967103401
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.322952400409911
 1.51300655007404
 1.7298566144633125
 0.0
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 7.360554118299762
 0.0
 0.0
 0.0
 3.0
 0.6666607320204543
 2.3333392684625442
 0.0
 0.6394458824182331
 0.0
 2.63327291929651
 0.5717270564384505
 1.3377123912235707
 0.6770475994504997
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6622876089083299
 0.0
 0.0
 0.0
 2.834842206195982
 0.0
 0.0
 2.333339268167784
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6088493668319797
 0.0
 0.0
 5.7284675010197805
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.666660731217887
 0.0
 0.0
 3.489784478753944
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 0.48978447852509294
 0.0
 1.0
 0.8040600867506623
 0.9257965282505656
 0.0
 0.0
 2.0
 0.9999999993966949
 0.0
 1.366727082300426
 0.9861841264274186
 0.6470887912875285
 2.0
 0.0
 0.0
 0.0
 0.6332729184675394
 0.0
 0.0
 2.0
 0.9999999999068228
 0.3475922563517997
 0.22413480010359968
 0.0
 5.190697155857269
 2.8093028444705377
 0.0
 0.0
 1.8953715718951156
 0.8495640941623112
 0.2550643340285573
 2.0
 6.0
 0.0
 1.8348422058560596
 0.9999999999952824
 0.0
 0.0
 0.9817456170916632
 0.5927019477911888
 0.03440180194471166
 0.0
 5.378347319523346
 1.8631267312601212
 1.9655981984302016
 0.0
 0.41274912034780403
 0.6216526813354482
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7743174668096601
 0.20893626621660075
 0.999999999800076
 0.0
 0.0
 0.37500000000185413
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9200692647759747
 0.0
 0.0
 0.0
 1.0
 0.22222024399879836
 0.29166740854737727
 0.0
 0.0799307352941314
 0.0
 1.0
 0.9999999999622597
 0.6688561955869134
 0.22568253315118517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3311438044420148
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7777797560332915
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999999982127
 0.0
 0.0
 0.7910637338244777
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3333325913913454
 0.0
 0.0
 1.0



=====Finished running Instance #127=====




*****Running Instance #128*****


objective value: -624.990197269
objective bound: -625.052702534
BARON solution time: 114.84

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2364241214568599
 1.7635758788716451
 0.0
 0.7635758787935917
 1.089127895646276
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8458527263920905
 0.0
 0.0
 1.1541472740856713
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.704215009733639
 1.7601633561747416
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.141637717281685
 1.3939839171783415
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0037520328129061
 1.2864178112313642
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8747983220286484
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3891664233282639
 1.1674992699112323
 0.0
 0.7500000001044297
 2.2500000002083054
 0.0
 0.49721403212225807
 1.491642096282214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36361954473832786
 1.0908586341451834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8626039611560474
 0.13739603875955314
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.247540112190869
 1.3185808390453693
 0.0
 0.09726586473632444
 0.0
 1.7524598887985086
 0.5440231215145068
 0.0
 0.040130174650734415
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.674095914782123
 0.33704795732461457
 0.0
 0.0
 1.3259040854737967
 0.662952042606188
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.35299317332104435
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6470068276242675
 1.0
 0.3529931725797993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.560815781687466
 0.7804078904678133
 0.0
 0.43918421869784335
 0.2195921092431462
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6266503272165923
 0.9999999997042189
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9309578307356945
 2.492859555438549
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.6367763076471178
 0.0
 0.06904216968520593
 0.0
 1.3733496729276344
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21000643537203467
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3632236931940258
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6470068266719482
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7899935650056105
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9962479674945901
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12520167884598016
 0.0
 0.0
 0.0
 0.0
 2.2039714024956463
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1541472741012279
 0.0
 0.0
 0.0
 0.0
 3.009900187882218
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.341223672392665
 4.46437836586035
 1.6266503267271626
 0.0
 0.0
 1.5566656932262701
 0.6587763280077873
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.663386815828928
 0.0
 0.0
 0.0
 3.0
 1.0111438721067376
 1.9888561283827861
 0.0
 2.3366131849230496
 0.0
 2.3529931741105914
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8527037744029116
 0.0
 0.0
 0.0
 2.8747983220996356
 0.0
 0.0
 1.9888561280799848
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.290169843965409
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4544781788717143
 3.535621634421998
 0.0
 5.423817386237076
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.9309578306127346
 2.4928595552798023
 0.0
 1.0
 0.6266503274563833
 1.0
 0.0
 0.0
 2.0
 0.9999999996146003
 0.0
 1.6470068274766374
 1.0
 0.3529931725484112
 2.0
 0.0
 0.0
 0.0
 0.3529931732974193
 0.0
 0.0
 2.0
 0.99999999989979
 0.0
 0.0
 0.0
 6.0
 1.8626039604258275
 0.0
 0.13739603937430223
 2.0
 0.8626039611475684
 0.13739603875670042
 2.0
 6.0
 0.0
 1.8747983218439606
 0.9999999999961996
 0.0
 0.0
 1.0037520327920597
 1.2864178112046474
 0.0
 0.0
 4.845852726865412
 3.1541472732554348
 1.8458527262660003
 0.0
 0.0
 1.1541472740068364
 2.0
 2.8527037744058217
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7804078907685758
 0.5580472957301157
 0.9999999996176455
 0.0
 0.0
 0.19458321164265954
 0.2195921093277744
 0.0
 1.0
 0.0
 0.0
 0.3750000000202343
 0.0
 0.0
 0.0
 0.707923351965875
 0.0
 0.0
 0.0
 1.0
 0.337047957358513
 0.24860701603611232
 0.0
 0.2920766481042331
 0.0
 1.0
 0.08293695198220903
 0.6182120606753078
 0.0
 0.14996351808807062
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38178793936399247
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6629520426727684
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7670995299297205
 0.0
 0.0
 0.18180977234881907
 0.4419527043008247
 0.0
 1.0



=====Finished running Instance #128=====




