===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -196.276
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -230.672
 Preprocessing found feasible solution with value -256.601
 Preprocessing found feasible solution with value -632.829
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.87     -639.637         -632.829       
         21+            2            48.78     -637.843         -632.829       
        167+            6            78.67     -636.181         -632.829       
        396+            7           108.56     -635.884         -632.829       
        563             0           130.24     -632.892         -632.829       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   132.32
 Total CPU time used:               131.76

 Total no. of BaR iterations:     563
 Best solution found at node:       1
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -232.164
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -567.177
 Preprocessing found feasible solution with value -629.152
 Preprocessing found feasible solution with value -629.152
 Preprocessing found feasible solution with value -629.252
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            24.97     -642.650         -629.252       
          7+            3            54.87     -635.985         -629.252       
         21+            2            84.77     -631.605         -629.252       
         23             0            87.72     -629.315         -629.252       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    88.15
 Total CPU time used:                87.79

 Total no. of BaR iterations:      23
 Best solution found at node:      12
 Max. no. of nodes in memory:       4
 
 All done
===========================================================================



*****Running Instance #301*****


objective value: -632.829099454
objective bound: -632.892388668
BARON solution time: 132.31

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3029919033491386
 0.0
 0.0
 0.6970080967487705
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.990601234286573
 0.0
 0.0
 1.0093987653909953
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0238316821845355
 0.6173840893400563
 0.0
 0.0
 0.0
 0.0
 3.9667695533814165
 2.3920146748318456
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2850939254719778
 1.5198004779289351
 0.009398765882206313
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06526733617976692
 0.19580200852833335
 0.0
 0.7500000000912183
 2.250000000196409
 0.0
 0.5515648569163355
 1.6546945706858047
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6331678070939238
 1.899503421213476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.506852125966819
 0.8543521304802479
 0.6387957437860101
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.822839546829722
 2.1771604539306955
 0.0
 0.0
 0.0
 1.693703728012372
 1.3062962722921931
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0679035005693151
 0.0
 0.0
 0.0
 0.02806340014088089
 0.0
 0.5291603819743858
 0.26458019093553903
 0.0
 0.0
 1.4708396182766708
 0.7354198089941807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.34836004768834367
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6516399532354167
 1.0
 0.34836004697308126
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4808422885455657
 0.7404211438098655
 0.0
 0.5191577118313871
 0.259578855752629
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3105141006610219
 0.6444775528559163
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.642241190244413
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.649808293556628
 0.0
 0.0
 0.0
 1.6894858994588973
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22821621340690929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999999966631
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3501917071844297
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6516399523170983
 0.0
 1.4834567264038352
 0.14564787013120134
 1.9040330995984147
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7717837869315891
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35552244683624534
 0.714906074768798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3451028445686708
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38702335911385854
 0.0
 0.0
 0.0
 0.0
 0.10612451551437607
 0.0
 0.0
 5.361204257292044
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.221263432679128
 1.6412157715245916
 0.9549916535169383
 0.0
 0.0
 0.261069344709263
 0.7787365676972944
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.0000000007604175
 0.0
 0.0
 0.0
 2.9999999998108176
 0.7937405729099247
 2.20625942760214
 0.0
 3.0
 0.0
 2.348360048552867
 0.0679035005693151
 1.3029919033491386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6970080967487705
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2062594272708513
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.814293169283119
 0.0
 0.0
 6.358784228213262
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.02806340014088089
 0.0
 0.0
 2.5326712283073998
 0.0
 0.0
 5.642241190246896
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.642241190064552
 0.0
 1.0
 0.31051410092218446
 0.6444775533994123
 0.0
 0.0
 2.0
 0.9999999994706257
 0.0
 1.6516399530974233
 1.0
 0.34836004694299827
 2.0
 0.0
 0.0
 0.0
 0.34836004766285356
 0.0
 0.0
 2.0
 0.9999999999003513
 0.09596690077903008
 0.0
 0.0
 4.516543274500541
 3.4834567259652305
 0.0
 0.0
 1.5068521258945504
 0.8543521304403272
 0.6387957437566091
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.2850939255084735
 1.5198004779721983
 0.009398765881893334
 0.0
 4.990601235377444
 3.0093987640628352
 1.9906012344771207
 0.0
 0.0
 1.0093987654875232
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7404211442048342
 0.20515197145502373
 0.9999999991545486
 0.0
 0.0
 0.03263366808544515
 0.25957885589099505
 0.0
 1.0
 0.0
 0.0
 0.37500000001662137
 0.0
 0.0
 0.0
 0.6250000000588355
 0.0
 0.0
 0.0
 0.9999999999044884
 0.264580190961495
 0.2757824284350035
 0.0
 0.3750000000152571
 0.0
 1.0
 0.7075720901504893
 0.6514959516624964
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3485040483676453
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7354198090690212
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.999999999971336
 0.0
 0.0
 0.7948480285823261
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29242790913573935
 0.0
 0.0
 0.31658390352157323
 0.0
 0.0
 1.0



=====Finished running Instance #301=====




*****Running Instance #302*****


objective value: -629.252485013
objective bound: -629.315416552
BARON solution time: 88.14

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1258471714278446
 1.874152828922798
 0.0
 0.7033301564912735
 1.1708056261166597
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002736784
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0113580631769183
 1.8068148373694213
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9886419376956759
 1.19318516226302
 0.15001902859938146
 0.5169589171802029
 0.0
 0.0
 0.0
 0.0
 0.8500350921954115
 2.9291832171461887
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6711218312042796
 2.013365493489465
 0.0
 0.5093634924807294
 1.5280904773385982
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8195146766238369
 2.4585440297307186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8802330802045775
 0.8807651517590451
 0.2390017683081875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.187117216460018
 1.625958215449526
 0.0
 0.10308085629183504
 0.0
 0.812882784594046
 0.2548069354608502
 0.0
 0.01615399267042328
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6416973538270577
 0.32084867686317536
 0.0
 0.0
 1.358302646434253
 0.6791513231105173
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.32690728400543506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6730927169609988
 1.0
 0.32690728324054924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3504367821186174
 0.5598757807867611
 0.11534261016434084
 0.6495632182679921
 0.26930154659118993
 0.05548006249079773
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0040466093101298155
 0.01994242149388037
 0.0
 0.0
 0.19445992856311242
 0.9583336473691573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14811302236805632
 0.19795992077391947
 0.0
 0.07405651118315743
 0.0
 0.0
 0.0
 0.0
 1.8518869779253753
 2.4751327977121935
 0.0
 0.9259434889605401
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3671867017568233
 0.0
 0.0
 0.0
 1.8014934624861232
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2942652367575665
 0.0
 1.731389936261285
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6328132990862585
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6730927159756249
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7057347636086717
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.021723931266117276
 0.9999458795346623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17082267319657055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11976692059128285
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9846498414902048
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.02398903080230516
 0.0
 2.0256551730697194
 4.818172900504247
 1.1527935757364671
 0.0
 0.0
 0.0
 0.9743448273499797
 0.0
 3.0
 0.0
 0.0
 2.6844873246609615
 0.0
 0.0
 0.0
 6.916156288028163
 0.0
 0.6669779457651533
 0.0
 3.0
 0.962546030690233
 2.037453969799601
 0.0
 1.0838437126978153
 0.0
 2.326907284813436
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.874135782568621
 0.42012945431718235
 0.0
 0.0
 3.0
 0.0
 0.0
 2.03745396954477
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.7792183092612626
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.278058706309407
 3.181827099931063
 0.0
 5.2529632645151665
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.673092718356922
 0.0
 1.0
 0.19850653790289466
 0.9782760690152542
 0.0
 0.0
 2.0
 0.8291773272971764
 0.17082267263849238
 1.6730927168066063
 1.0
 0.32690728320963663
 2.0
 0.0
 0.0
 0.0
 0.3269072839809988
 0.0
 0.0
 2.0
 0.9999999999413666
 0.0
 0.0
 0.0
 6.0
 1.880765150768475
 0.0
 0.11923484895550562
 1.8802330800944589
 0.8807651517074597
 0.2390017682941874
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0000541207572564
 3.446142134195238
 0.0
 0.0
 5.000000000690207
 2.999999999522999
 2.0
 0.0
 0.0
 1.000000000198743
 1.8291773278447074
 3.044958454913631
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.02038526968490749
 0.0
 0.6752183909945675
 0.6022716125522595
 0.9796147301580375
 0.0
 0.0
 0.0
 0.3247816091028411
 0.0
 1.0
 0.0
 0.0
 0.3355609155704015
 0.0
 0.0
 0.0
 0.8645195359911331
 0.0
 0.15001090989561577
 0.0
 1.0
 0.32084867688197255
 0.2546817462136956
 0.0
 0.13548046408556413
 0.0
 1.0
 0.10758553553752634
 0.6154937273113524
 0.0
 0.15637995252372214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.384506272730108
 0.07405651117699504
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6791513231503551
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8499890901424678
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7360345119387515
 0.0
 0.0
 0.4097573382757124
 0.3977283874842109
 0.0
 0.9259434888715027



=====Finished running Instance #302=====




