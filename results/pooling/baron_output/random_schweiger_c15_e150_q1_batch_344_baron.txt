===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.29     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.32
 Total CPU time used:                 0.30

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -199.493
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -410.436
 Preprocessing found feasible solution with value -411.206
 Preprocessing found feasible solution with value -628.817
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.78     -643.473         -628.817       
         17+            3            45.69     -642.445         -628.817       
         75             7            75.59     -642.445         -628.817       
       2696            10           105.48     -642.445         -628.817       
       3724+            9           135.39     -642.445         -628.817       
       3872+            3           165.92     -642.445         -628.817       
       4141+            8           195.82     -642.375         -628.817       
       4546+            6           225.72     -642.375         -628.817       
       7521            11           255.62     -642.375         -628.817       
      11827             9           285.49     -642.375         -628.817       
      16267            10           315.39     -642.375         -628.817       
      20477            11           345.28     -642.375         -628.817       
      21198+            6           375.20     -642.375         -628.817       
      24427             6           405.09     -641.371         -628.817       
      24465+            4           435.00     -641.371         -628.817       
      24568+            9           464.90     -641.371         -628.817       
      24660+           11           494.80     -641.371         -628.817       
      27335+           10           524.71     -641.371         -628.817       
      27422+            9           554.61     -641.371         -628.817       
      27519             9           584.52     -641.371         -628.817       
      27629+            4           614.43     -641.371         -628.817       
      27953+            6           644.32     -641.371         -628.817       
      29020            16           674.21     -641.371         -628.817       
      33855            14           704.10     -641.371         -628.817       
      38851            11           733.99     -641.371         -628.817       
      43449            13           763.89     -641.371         -628.817       
      47848            11           793.78     -641.371         -628.817       
      51372            14           823.67     -641.371         -628.817       
      56025            14           853.56     -641.371         -628.817       
      61209            14           883.45     -641.371         -628.817       
      63997+           10           913.36     -641.371         -628.817       
      64380             9           943.25     -641.371         -628.817       
      66397            13           973.15     -641.371         -628.817       
      68285+            9          1003.05     -641.371         -628.817       
      70666            14          1032.95     -641.371         -628.817       
      75595            15          1062.84     -641.371         -628.817       
      79877            11          1092.73     -641.371         -628.817       
      84739            17          1122.62     -641.371         -628.817       
      86784            10          1152.53     -641.371         -628.817       
      87054+           11          1182.43     -641.371         -628.817       
      87232+            9          1212.33     -641.371         -628.817       
      87520             8          1242.24     -641.371         -628.817       
      92448            10          1272.13     -641.371         -628.817       
      97141            13          1302.03     -641.371         -628.817       
     100837            14          1331.92     -641.371         -628.817       
     101359            11          1361.83     -639.160         -628.817       
     101666             9          1391.73     -639.160         -628.817       
     105767            11          1421.62     -639.160         -628.817       
     106310+            5          1451.52     -639.160         -628.817       
     106791            11          1481.42     -639.160         -628.817       
     110912            14          1511.31     -639.160         -628.817       
     115416            16          1541.20     -639.160         -628.817       
     119569            13          1571.10     -639.160         -628.817       
     121358            13          1600.99     -639.160         -628.817       
     125743            12          1630.89     -639.160         -628.817       
     130312            18          1660.78     -639.160         -628.817       
     134811            15          1690.68     -639.160         -628.817       
     136399+            8          1720.58     -639.160         -628.817       
     136543+            8          1750.48     -639.160         -628.817       
     136718+           10          1780.39     -639.160         -628.817       
     136961            14          1810.29     -639.160         -628.817       
     137138+           12          1840.21     -639.160         -628.817       
     137219+            7          1870.11     -639.160         -628.817       
     137381+            7          1900.02     -639.160         -628.817       
     137403+            4          1929.94     -639.160         -628.817       
     137581+            8          1959.84     -639.160         -628.817       
     137776            10          1989.74     -639.160         -628.817       
     140100            18          2020.85     -639.160         -628.817       
     141661+            6          2050.77     -639.160         -628.817       
     141729+            6          2080.67     -639.160         -628.817       
     141747+            6          2110.58     -639.160         -628.817       
     142833            12          2140.48     -639.160         -628.817       
     146890             9          2170.38     -639.160         -628.817       
     150630             8          2200.28     -639.160         -628.817       
     153786+            2          2230.20     -639.160         -628.817       
     156050             8          2260.11     -638.466         -628.817       
     157279             7          2290.01     -638.466         -628.817       
     161153            12          2319.91     -638.466         -628.817       
     164467+            5          2349.83     -638.466         -628.817       
     164887             9          2379.75     -638.466         -628.817       
     166744            10          2409.64     -638.466         -628.817       
     170249             9          2439.54     -638.466         -628.817       
     172861+            4          2469.45     -638.466         -628.817       
     174480             7          2499.35     -638.466         -628.817       
     174889+            3          2529.25     -637.773         -628.817       
     178302            12          2559.15     -636.978         -628.817       
     182304             6          2589.05     -636.978         -628.817       
     185809             9          2618.94     -636.978         -628.817       
     189811            11          2648.83     -636.978         -628.817       
     193537             7          2678.73     -636.978         -628.817       
     197664            11          2708.63     -636.978         -628.817       
     201867            11          2738.52     -636.978         -628.817       
     203415             6          2768.42     -636.978         -628.817       
     203579+            4          2798.33     -636.752         -628.817       
     203641             2          2828.23     -636.752         -628.817       
     203828+            5          2858.13     -636.542         -628.817       
     204018+            9          2888.04     -636.542         -628.817       
     204120+            6          2917.93     -636.060         -628.817       
     204204+            4          2947.85     -635.187         -628.817       
     204271             0          2959.85     -628.880         -628.817       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2970.95
 Total CPU time used:              2960.21

 Total no. of BaR iterations:  204271
 Best solution found at node:     746
 Max. no. of nodes in memory:      25
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -206.134
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -248.241
 Preprocessing found feasible solution with value -429.615
 Preprocessing found feasible solution with value -631.753
 Preprocessing found feasible solution with value -632.387
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            18.91     -644.290         -632.567       
          1             1            24.85     -641.365         -632.567       
         21+            4            55.12     -639.101         -632.567       
        140+            5            85.02     -639.101         -632.567       
        271+            3           114.94     -639.101         -632.567       
        322+            4           144.83     -638.125         -632.567       
        351+            2           174.73     -638.125         -632.567       
        427             7           204.64     -635.946         -632.567       
        606             7           234.55     -635.946         -632.567       
        707             0           261.98     -632.631         -632.567       

                         *** Normal completion ***            

 Wall clock time:                   262.95
 Total CPU time used:               261.98

 Total no. of BaR iterations:     707
 Best solution found at node:       1
 Max. no. of nodes in memory:      11
 
 All done
===========================================================================



*****Running Instance #687*****


objective value: -628.816619688
objective bound: -628.879507612
BARON solution time: 2970.94

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1344333440911254
 1.7713270550430635
 0.0
 0.8655666541303892
 1.3515131941342278
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9318129636404195
 0.0
 0.3680811231233736
 0.7001059133347604
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0327835985411102
 0.500685974783072
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2671104878689494
 0.37428005911808976
 0.20513803679070716
 0.597572853506948
 0.013399936749868129
 0.0
 0.0
 0.0
 0.8387291923153817
 2.443241656262035
 0.05478709986868979
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999993933907
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7360283045916163
 2.2080849136878418
 0.0
 0.5405276581829604
 1.6215829745122228
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7234440369290149
 2.170332110703289
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999966934807
 0.9557546791631057
 0.04424532283287739
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.021777191289511
 1.3405923776921196
 0.0
 1.8844064806294812e-8
 0.0
 1.9782228077253887
 0.6594075929691815
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.049994307545834324
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5585929118201272
 0.2792964556971319
 0.0
 0.0
 1.4414070882290166
 0.7207035435705759
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.769127418316271
 0.0
 0.0
 0.0
 0.2716870612034279
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7283129392761392
 1.0
 0.27168706080381
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.497093042892351
 0.7485465194752946
 0.0
 0.5029069570847963
 0.2514534778656714
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.33404447359829964
 0.5144983227897231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7448034391750284
 4.853346906188983
 0.0
 0.674469987866487
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.23087258042534894
 1.4811909653943454
 0.0
 1.255196561054774
 0.0
 1.665955524292303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21707984744637643
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999977183842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5188090340193359
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9591855184466073
 0.0
 0.0
 0.044245292722162675
 1.950005690542293
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7829201521485974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4855016731446576
 0.9561327706759286
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32553001238645035
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4648333053593774
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2456395639067463
 3.5334695738622006
 0.8485427966304355
 0.0
 0.0
 0.0
 0.7543604355340046
 0.0
 3.0
 0.0
 0.0
 2.944113218418624
 0.0
 0.0
 0.0
 5.3623695882690905
 0.0
 0.8161108270475231
 0.0
 3.0
 0.8378893675172591
 2.16211063283105
 0.0
 2.6376304103831743
 0.0
 2.040814482136192
 0.049994307947580884
 2.9057603991726872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2170798483088245
 0.0
 0.0
 0.0
 2.999999999669167
 0.0
 0.0
 2.1621106317995924
 0.0
 2.999999998690498
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.336757948446106
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.893776147771248
 2.6413905474145336
 0.0
 6.272620333516452
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.7448034391946936
 4.8533469061517245
 0.0
 0.6744699878675962
 0.3340444759960186
 0.514498326481937
 0.0
 0.0
 2.0
 0.999999997443134
 0.0
 1.728312939200053
 0.9999999999983143
 0.27168706075781157
 1.7691274199456075
 0.0
 0.0
 0.0
 0.27168706145587446
 0.0
 0.0
 2.0
 0.9999999992969205
 0.04999430971066752
 0.0
 0.0
 6.0
 1.9999999711959182
 0.0
 2.778405147207633e-8
 1.999999997586439
 0.9557546796122196
 0.044245322802375565
 2.0
 5.99999999979478
 0.0
 2.0
 0.9999999995116189
 0.0
 0.0
 1.0438672294412294
 3.040814510743328
 0.06818703658118544
 0.0
 5.29989408728746
 0.8749660340597077
 1.9318129636230752
 0.0
 0.3680811231674934
 0.7001059133731704
 1.9999999983234384
 3.1228402493319503
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7485465214209625
 0.5722347557504637
 0.9999999928246558
 0.0
 0.0
 0.0
 0.25145347853989997
 0.0
 1.0
 0.0
 0.0
 0.36801415229361356
 0.0
 0.0
 0.0
 0.6702961985269235
 0.0
 0.19651736447455437
 0.0
 1.0
 0.27929645589821783
 0.27026382909448105
 0.0
 0.32970380128354615
 0.0
 0.9999999990760956
 0.9999999566846954
 0.5672166725217812
 0.0
 1.139696278102193e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43278332742872
 0.0
 0.0
 0.0
 0.9999999999514293
 0.0
 0.0
 0.7207035440829229
 0.0
 0.9999999995644373
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8034826352052284
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.191858081393162e-8
 0.0
 0.0
 0.3617220184626498
 0.4277652440844219
 0.0
 1.0



=====Finished running Instance #687=====




*****Running Instance #688*****


objective value: -632.567326742
objective bound: -632.630589801
BARON solution time: 262.94

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2955741750625125
 0.0
 0.0
 0.7044258251449358
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8152067398880605
 0.0
 0.0929097577177822
 1.091883502609683
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2731008898706029
 0.8019939294769168
 0.0
 0.0
 0.0
 0.0
 3.635015608717111
 2.2898895719696872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10889037732902987
 0.34670003279851186
 0.018829389022652722
 0.0
 0.0
 0.0
 0.9597692509344555
 3.055844225544151
 0.16596387156450995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7669158996738579
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.050867765248862475
 0.15260329578540427
 0.0
 0.7500000002604678
 2.25000000066204
 0.0
 0.5068949227423186
 1.5206847681633948
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6922373119697343
 2.0767119358031207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5388742159519577
 0.2907324371097234
 0.532232084775236
 0.41579888450250735
 0.0785549733530731
 0.14380740468764935
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.580740115902592
 1.8602467041562456
 0.0
 0.0
 0.0
 0.419259884872984
 0.13975329476080348
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0737132349517344
 0.0
 0.0
 0.0
 0.4890125429050959
 0.0
 0.6482802063922253
 0.32414010311981073
 0.0
 0.0
 1.3517197938888073
 0.6758598967902555
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.4025442553670234
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5974557455785627
 1.0
 0.402544254721375
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5622793659889844
 0.7811396824307107
 0.0
 0.4377206344973318
 0.21886031707589657
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2273750943780868
 0.8579305056401753
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1726550675605404
 0.2162998725943752
 0.0
 0.08632753377645136
 0.0
 0.0
 0.0
 0.0
 1.8273449328813987
 2.2892723727666477
 0.0
 0.9136724664321246
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4409868198620601
 0.0
 0.0
 0.0
 1.7726249046340545
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2160703928697226
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999007407
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5590131807350104
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5974557436798155
 0.0
 0.0
 0.6307125898790042
 0.437274222551562
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7839296074678735
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14206948946130998
 0.9313403720372264
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23308410116667327
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04532690036862295
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.231050753737002
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3434190488545417
 2.075094819475952
 1.0853056002223684
 0.0
 0.0
 0.2034710611206281
 0.656580951768017
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.440986820751109
 0.0
 0.4744197991501945
 0.0
 3.0
 0.9724203095120361
 2.027579690965251
 0.0
 0.5590131800728544
 0.0
 2.402544256995512
 1.0737132349517344
 1.2955741751687693
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7044258252634802
 0.4752824740256978
 0.0
 0.0
 2.766915900101396
 0.0
 0.0
 2.0275796906790626
 0.0
 2.361838737836917
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.181577348043116
 0.0
 0.0
 5.924905180868054
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6381612625432298
 0.4890125429158943
 0.0
 0.0
 2.7689492478219435
 0.0
 0.0
 5.030289772121165
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.505572245066298
 0.0
 1.0
 0.22737509574018602
 0.8579305107796372
 0.0
 0.0
 2.0
 0.9999999994010448
 0.0
 1.5974557454308234
 1.0
 0.4025442547003422
 1.9999999999795304
 0.0
 0.0
 0.0
 0.4025442553274675
 0.0
 0.0
 2.0
 0.9999999998720447
 1.5627257778214725
 0.0
 0.0
 6.0
 1.9999999989776565
 0.0
 0.0
 1.954673100278177
 0.3692874104506355
 0.6760394894194269
 2.0
 6.0
 0.0
 1.7669158995074872
 0.9999999999957527
 0.0
 0.0
 1.0686596282325502
 3.4025442582447805
 0.18479326058139328
 0.0
 4.9081164983022125
 3.091883501296473
 1.8152067397783238
 0.0
 0.09290975774730646
 1.0918835025596794
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.781139682929557
 0.25938685243321274
 0.9999999940094653
 0.0
 0.0
 0.02543388262906006
 0.21886031723653504
 0.0
 1.0
 0.0
 0.0
 0.375000000109014
 0.0
 0.0
 0.0
 0.9301233525828525
 0.0
 0.10189434919422523
 0.0
 1.0
 0.3241401031673528
 0.25344746135912744
 0.0
 0.06987664748703726
 0.0
 1.0
 0.6870771892228917
 0.647787087517203
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35221291256485
 0.08632753376998117
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6758598968828239
 0.0
 0.7872795792493975
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8981056508344762
 0.0
 0.0
 0.7406131476247737
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21272042084555967
 0.31292281079973405
 0.0
 0.0
 0.34611865596583596
 0.0
 0.0
 0.9136724663514088



=====Finished running Instance #688=====




