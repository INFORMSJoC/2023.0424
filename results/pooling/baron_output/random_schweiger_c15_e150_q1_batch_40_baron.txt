===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.37
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -207.074
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -638.626
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            19.72     -641.181         -638.626       
          9             0            34.46     -638.690         -638.626       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    34.94
 Total CPU time used:                34.78

 Total no. of BaR iterations:       9
 Best solution found at node:       2
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -176.418
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -619.009
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            20.64     -641.173         -619.009       
        232             9            50.53     -630.400         -619.009       
       2670+            6            80.42     -630.400         -619.009       
       2927+            2           110.30     -629.885         -619.009       
       8143            11           141.10     -629.881         -619.009       
      13689            10           170.98     -629.881         -619.009       
      19234            16           200.86     -629.881         -619.009       
      24890            14           230.74     -629.881         -619.009       
      28800            10           260.62     -629.881         -619.009       
      30547+            4           290.50     -625.370         -619.009       
      30557             0           295.77     -619.071         -619.009       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   297.10
 Total CPU time used:               295.87

 Total no. of BaR iterations:   30557
 Best solution found at node:     484
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================



*****Running Instance #79*****


objective value: -638.626335863
objective bound: -638.690204848
BARON solution time: 34.93

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5775224625541602
 0.0
 0.1346256706110382
 0.26812748665447234
 0.0
 0.022881983335446617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999276545
 0.0
 0.0
 0.9999999998118828
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03871963669033869
 1.570126836348175
 0.9033564635190219
 0.0
 0.0
 0.0
 0.08458134698082134
 3.429873164616801
 1.9733425482580087
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27262737220905797
 0.8757145506164621
 0.0
 0.0
 0.0
 0.0
 0.7700569641555616
 2.473523046677544
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.839073540904495
 0.9999999999288223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1505010556369018
 0.4515031669327507
 0.0
 0.7500000000062007
 2.2499999999293516
 0.0
 0.5641042954797474
 1.692312886385939
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5353946489478443
 1.6061839467957117
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8424923465297565
 0.7874026221086176
 0.14157859549790033
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.249778708472187
 1.4165929017967418
 0.0
 0.0
 0.0
 1.750221290758847
 0.5834070964278055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.075254488264333
 0.0
 0.0
 0.0
 0.2968944329397764
 0.0
 0.49572187907418364
 0.24786093942028445
 0.0
 0.0
 1.5042781211029048
 0.7521390602047382
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999986285208
 0.0
 0.0
 0.0
 0.349237596522005
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6507624040287183
 1.0
 0.3492375961799522
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5515543905486089
 0.6560359453344825
 0.11974124972534092
 0.4484456097801354
 0.18961400343192517
 0.0346088013827734
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7772241726827955
 0.9999999980143426
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7853252420498664
 2.77406339302673
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4035036558161629
 0.0
 0.21467475821266002
 0.0
 1.2227758261288493
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22897786737915815
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999998971991
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4731953610844132
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6507624039222792
 0.0
 0.0
 0.21259737784110166
 0.6278510787919117
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7710221328057787
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9573156636025844
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16092645953824194
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1543500517103715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.858421405039784
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.327331585608432
 2.512202936557536
 1.777224170909735
 0.0
 0.0
 0.6020042226538391
 0.672668414594834
 0.0
 3.0
 0.0
 0.0
 2.9999999999984928
 0.0
 0.0
 0.0
 5.666371611214621
 0.0
 1.1483419228819751
 0.0
 2.9999999999717706
 0.7435828184944681
 2.2564171819345007
 0.0
 2.3336283878126096
 0.0
 2.349237596769027
 1.0752544882917083
 1.712148133563833
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2910094701126727
 0.0
 0.0
 0.0
 2.8390735412598858
 0.0
 0.0
 2.256417181307643
 0.0
 2.7714735641362744
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.2435800108712223
 0.0
 0.0
 5.487797059855631
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29689443297091744
 0.0
 0.0
 2.141578595813313
 0.0
 0.0
 5.5593886353752255
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.7853252420708667
 2.7740633930529706
 0.0
 1.0
 0.77722417418848
 0.9999999999513663
 0.0
 0.0
 2.0
 0.84564994871954
 0.1543500511221354
 1.6507624039059265
 0.9999999999988237
 0.34923759617031996
 2.0
 0.0
 0.0
 0.0
 0.349237596775239
 0.0
 0.0
 2.0
 0.9999999996204705
 1.3721489215212437
 0.0
 0.0
 6.0
 1.9999999986738652
 0.0
 0.0
 1.8424923464753153
 0.7874026220873435
 0.14157859549792912
 2.0
 5.999999999993925
 0.0
 1.8390735410937977
 1.0
 0.0
 0.0
 1.0426843365881935
 3.3492375980108573
 0.0
 0.1233009835843221
 5.0000000008861845
 2.8766990117537645
 2.0
 0.0
 0.0
 0.9999999999123773
 1.845649949296274
 0.0
 0.1575076539549584
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7757771952117816
 0.31402536721410607
 0.9999999980634836
 0.0
 0.0
 0.07525052782106793
 0.2242228048738779
 0.0
 1.0
 0.0
 0.0
 0.37499999998920475
 0.0
 0.0
 0.0
 0.7082964513949049
 0.0
 0.2614668338658993
 0.0
 0.9999999999582154
 0.24786093951969862
 0.28205214773145737
 0.0
 0.2917035484601123
 0.0
 0.9999999992754769
 0.7836281262184667
 0.8547246259541563
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1452753739987972
 0.0
 0.0
 0.0
 0.9999999999015645
 0.0
 0.0
 0.7521390604966305
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7385331659201063
 0.0
 0.0
 0.6859746328018999
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21637187355048274
 0.0
 0.0
 0.26769732446633465
 0.0
 0.0
 0.9999999999906647



=====Finished running Instance #79=====




*****Running Instance #80*****


objective value: -619.009366157
objective bound: -619.071273285
BARON solution time: 297.09

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1959728873910604
 0.0
 0.0
 0.8040271097641053
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.999999999784402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6618968369000559
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.004076069877637
 0.6994765150302796
 0.186300457711666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999997677729
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.34375316789125754
 1.031259503632663
 0.0
 0.7499999999379849
 2.249999999748261
 0.0
 0.5259182198857515
 1.5777546596035248
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3803286124785234
 1.1409858373919957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9258336608954911
 0.8167887137434577
 0.25737762505141115
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.94500247231199
 2.054997526991622
 0.0
 0.0
 0.0
 1.7670014834673078
 1.2329985162363728
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1544335320649993
 0.18556279152913677
 0.0
 0.0
 0.0
 0.0
 0.5975514140969915
 0.29877570679935617
 0.0
 0.0
 1.4024485860008233
 0.701224292415444
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4971950858550611
 0.0
 0.0
 0.0
 0.37726492387621624
 0.46379781428188904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6227350768415474
 1.0
 0.3772649232207405
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4685901056312576
 0.7342950501524373
 0.0
 0.5314098940770993
 0.265704946074966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2285634721099001
 0.6400892162342098
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7258013604730257
 4.9608382408724765
 0.0
 0.8603518084006254
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5028049143448069
 1.5577578384404431
 0.0
 1.2741986398187732
 0.0
 1.7714365262014806
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999982711796
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44224216190467536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6617421753721296
 0.0
 1.280819501956603
 0.18321128615558574
 1.8455664679758237
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.007176542219669709
 0.0
 0.0
 0.814437207934645
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3599107781014434
 0.995923929763481
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.35078526355157
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13964819196761397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8136995418546495
 0.0
 0.07416633849433293
 0.0
 0.0
 5.7426223753946255
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2028851580171733
 0.0
 0.8686526881932496
 0.0
 0.0
 1.3750126715333157
 0.7971148409603372
 0.0
 3.0
 0.0
 0.0
 2.999999999695904
 0.0
 0.0
 0.0
 4.999999999513278
 0.0
 0.0
 0.0
 3.0
 0.8963271208963336
 2.1036728794997828
 0.0
 2.9999999996571964
 0.0
 2.3382578252521924
 0.3399963235941307
 1.1959728878475997
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8040271100704038
 0.0
 0.0
 0.0
 2.999999999914168
 0.0
 0.0
 2.103672878416261
 0.0
 2.999999999690648
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.889853042619575
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.521314449880143
 0.6618968368802924
 0.0
 6.546991409861398
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.725801360441168
 4.9608382406585525
 0.0
 0.8603518083629372
 0.22856347409842753
 0.6400892218035976
 0.0
 0.0
 2.0
 0.9999999964305958
 0.0
 1.622735076748444
 1.0
 0.37726492319942745
 1.4971950860078518
 0.0
 0.0
 0.0
 0.377264923914324
 0.46379781432877104
 0.0
 2.0
 0.999999999223333
 0.15443353229230133
 0.185562791802432
 0.0
 4.712003956131454
 3.287996043456688
 0.0
 0.0
 1.9258336611183065
 0.816788713838787
 0.25737762508243683
 2.0
 6.0
 0.0
 2.0
 0.9999999997436396
 0.0
 0.0
 1.0040760704024616
 0.6994765153958976
 0.18630045780895402
 0.0
 0.0
 0.6618968371346581
 0.0
 0.0
 0.0
 2.999999999656302
 1.9999999973275677
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7342950527736585
 0.0
 0.9999999912988958
 0.0
 0.0
 0.17187658393443767
 0.26570494702329855
 0.0
 1.0
 0.0
 0.0
 0.3749999999498603
 0.0
 0.0
 0.0
 0.6249999999376818
 0.0
 0.0
 0.0
 1.0
 0.2987757070311975
 0.26295910992772475
 0.0
 0.3749999999933261
 0.0
 0.9999999998977306
 0.9999999985258837
 0.5979864444945842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4020135554192447
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7012242929601104
 0.0
 0.9999999998852468
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999994774477
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1901643062272927
 0.9999999996460499
 0.0
 1.0



=====Finished running Instance #80=====




