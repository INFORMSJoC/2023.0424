===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -133.544
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.561
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            13.70     -640.506         -625.561       
         16+            2            43.62     -636.987         -625.561       
         39+            2            73.54     -631.660         -625.561       
         63             0            89.85     -625.623         -625.561       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    90.27
 Total CPU time used:                89.92

 Total no. of BaR iterations:      63
 Best solution found at node:      29
 Max. no. of nodes in memory:       6
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -182.174
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.464
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            13.42     -646.297         -625.556       
          1             1            18.72     -645.226         -625.556       
         36+            5            48.64     -643.097         -625.556       
        593            15            78.95     -643.097         -625.556       
       4047            16           108.84     -643.097         -625.556       
       8626            18           138.74     -643.097         -625.556       
      12734            11           168.63     -643.097         -625.556       
      15147            17           198.53     -643.097         -625.556       
      19275             7           228.43     -643.097         -625.556       
      19699+           11           258.33     -643.097         -625.556       
      21778            11           288.22     -643.097         -625.556       
      22032+           13           318.13     -643.097         -625.556       
      22396+            7           348.03     -643.097         -625.556       
      24823            12           378.98     -643.097         -625.556       
      28479            11           408.87     -643.097         -625.556       
      32401             8           438.77     -643.097         -625.556       
      36793            13           468.66     -643.097         -625.556       
      41510            12           498.56     -643.097         -625.556       
      45615            10           528.45     -643.097         -625.556       
      50153            12           558.35     -643.097         -625.556       
      53588+           10           588.24     -643.097         -625.556       
      56602            14           618.14     -643.097         -625.556       
      60903            15           648.03     -643.097         -625.556       
      64182+           12           677.96     -643.097         -625.556       
      64322            13           707.85     -643.097         -625.556       
      68966             9           737.75     -643.097         -625.556       
      71840+            9           767.65     -643.097         -625.556       
      72005+            8           797.57     -643.097         -625.556       
      76088            13           827.46     -643.097         -625.556       
      80808             7           857.36     -643.097         -625.556       
      83155            10           887.26     -643.097         -625.556       
      84912            10           917.16     -643.097         -625.556       
      89488            10           947.05     -643.097         -625.556       
      93381+            7           976.95     -643.097         -625.556       
      96311            15          1006.85     -643.097         -625.556       
     100110+            8          1036.75     -643.097         -625.556       
     102410            13          1066.65     -643.097         -625.556       
     106370            11          1096.54     -643.097         -625.556       
     110123+            7          1126.45     -643.097         -625.556       
     110257+            6          1156.36     -643.097         -625.556       
     113772            11          1186.26     -643.097         -625.556       
     115683             9          1216.15     -643.097         -625.556       
     119795            11          1246.04     -643.097         -625.556       
     123930             9          1276.59     -643.097         -625.556       
     127092+            4          1306.49     -643.097         -625.556       
     129449            12          1336.38     -642.421         -625.556       
     133169            13          1366.28     -641.475         -625.556       
     137948            12          1396.18     -641.475         -625.556       
     142671            12          1426.07     -641.475         -625.556       
     147646            12          1455.97     -641.475         -625.556       
     152337            11          1485.86     -641.475         -625.556       
     157099             7          1515.76     -641.475         -625.556       
     161440             9          1545.66     -641.475         -625.556       
     166309             8          1575.55     -641.039         -625.556       
     170594            12          1605.45     -641.039         -625.556       
     175154            16          1635.35     -641.039         -625.556       
     177954            10          1665.26     -641.039         -625.556       
     178134+            5          1695.18     -641.039         -625.556       
     180033            11          1725.07     -641.039         -625.556       
     184549             9          1754.97     -641.039         -625.556       
     188570            12          1784.87     -640.822         -625.556       
     192248+            9          1814.79     -640.822         -625.556       
     193449            10          1844.69     -640.822         -625.556       
     197130             7          1874.59     -640.822         -625.556       
     201069             8          1904.48     -640.822         -625.556       
     204771             7          1934.40     -640.579         -625.556       
     205623             8          1964.29     -640.579         -625.556       
     208517+            7          1994.22     -640.579         -625.556       
     210616            10          2024.12     -640.579         -625.556       
     214578             8          2054.02     -640.579         -625.556       
     218559            10          2083.91     -639.451         -625.556       
     223053            12          2113.82     -639.451         -625.556       
     225536+            3          2143.73     -639.451         -625.556       
     225672             7          2173.63     -637.520         -625.556       
     225734+            4          2203.52     -637.520         -625.556       
     225888+            8          2233.43     -636.464         -625.556       
     227615            10          2263.32     -636.262         -625.556       
     228197             4          2293.24     -636.262         -625.556       
     228433+            4          2323.14     -636.201         -625.556       
     228567+            3          2353.05     -635.058         -625.556       
     228704+            7          2382.95     -634.425         -625.556       
     228833             0          2409.74     -625.619         -625.556       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2418.41
 Total CPU time used:              2409.80

 Total no. of BaR iterations:  228833
 Best solution found at node:      67
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================



*****Running Instance #147*****


objective value: -625.560540365
objective bound: -625.623102672
BARON solution time: 90.26

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1460605921072309
 1.8539394076392917
 0.0
 0.8539394081360103
 1.3813858808012873
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002817142
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.9730474282263764
 1.7838284564291698
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0269525726318025
 1.2161715432337383
 0.33862613113522005
 1.0965476705621955
 0.0
 0.0
 0.0
 0.0
 0.7563055978898128
 2.4490878445159465
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17302192878367326
 0.5190657864434062
 0.0
 0.7499999999781268
 2.25000000034082
 0.0
 0.5517637486520187
 1.6552912462429525
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5252143225251973
 1.5756429678465766
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3943993156641075
 0.8233238242251002
 0.782276860381155
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.583885147596755
 1.3929844989530549
 0.0
 0.13497721656073058
 0.0
 1.4161148534446297
 0.43033932484474297
 0.0
 0.041698959526876356
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5286300037741473
 0.2643150018430263
 0.0
 0.0
 1.471369996487204
 0.7356849981209954
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.740873416732394
 0.0
 0.0
 0.0
 0.628085921078281
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3719140799012772
 0.9239997252221007
 0.704086195173548
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5376012340547955
 0.7688006166479175
 0.0
 0.46239876633826704
 0.23119938305501528
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29438816539367607
 0.9566592076631445
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.295913806591489
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.25912658399108696
 1.5266206324502978
 0.0
 0.0
 0.0
 1.7056118350000178
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23532528867666375
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4733793684029336
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6310406623577679
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7646747116981721
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0433407926189208
 0.9050682713031637
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5354383849731849
 0.0
 0.0
 0.0
 0.0
 0.07016230003320695
 0.0
 0.0760002753609006
 1.9823978524060184
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.306401850947199
 4.756875884607676
 1.2510473728599993
 0.0
 0.0
 0.6920877152184292
 0.6935981494668101
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.111846862961023
 0.0
 1.435173801667352
 0.0
 3.0
 0.7929450056171736
 2.207054994870855
 0.0
 1.8881531377690222
 0.0
 2.3689593384310026
 0.0
 2.9999999996895186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2353252888946398
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2070549946081996
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.2053934423392163
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1008572903498828
 3.243124115833131
 0.0
 5.295913806790142
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.295913806417976
 0.0
 1.0
 0.2943881653936206
 0.9566592076653744
 0.0
 0.0
 2.0
 0.9999999996051837
 0.0
 1.3719140797666813
 0.9239997251314639
 0.704086195104494
 1.7408734165885997
 0.0
 0.0
 0.0
 0.628085921025312
 0.0
 0.0
 2.0
 0.9999999999316744
 0.0
 0.0
 0.0
 6.0
 1.8233238236622218
 0.0
 0.17667617607603703
 1.394399315583284
 0.8233238241773764
 0.7822768603358103
 1.999999999839592
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0949317289864076
 3.545635514950707
 0.0
 0.0
 5.000000000675337
 2.9999999995531943
 2.0
 0.0
 0.0
 1.000000000212955
 2.0
 3.2353252883178905
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7688006169514556
 0.5946094855649826
 0.999999999996708
 0.0
 0.0
 0.08651096439892768
 0.2311993831462933
 0.0
 1.0
 0.0
 0.0
 0.37500000002171907
 0.0
 0.0
 0.0
 0.7639808578577244
 0.0
 0.3092668905019953
 0.0
 1.0
 0.2643150018610821
 0.27588187434697126
 0.0
 0.236019142217551
 0.0
 1.0
 0.29067402458654273
 0.5730302960056478
 0.0
 0.13724214895326706
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42696970403231516
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7356849981712679
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6907331095339745
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5720838264601902
 0.0
 0.0
 0.26260716128201894
 0.40539051447157654
 0.0
 1.0



=====Finished running Instance #147=====




*****Running Instance #148*****


objective value: -625.556126875
objective bound: -625.618688741
BARON solution time: 2418.41

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0842585275362524
 1.5848330882077286
 0.0
 0.9157414727021885
 1.3385159990213393
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003099945
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.94107080810278
 1.7646424843893842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.058929192722564
 1.2353575153029712
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0985765841686317
 0.6400357855675042
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12586359189296237
 0.3775907756555246
 0.0
 0.7500000001139103
 2.2500000002071188
 0.0
 0.4933259256332047
 1.4799777767959705
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.63081048265471
 1.8924314478435214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1078518357547458
 0.876052442429464
 1.0160957220857805
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.341471190932442
 2.0349280085206276
 0.0
 0.0
 0.0
 0.45156798404085646
 0.17203281748207191
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6844641987574106
 0.3422320993246239
 0.0
 0.0
 1.3155358015034169
 0.6577679006477273
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4995626723886777
 0.0
 0.0
 0.0
 0.29902641548164716
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.700973585487049
 1.0
 0.29902641471349223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4921056358009495
 0.7460528175273888
 0.0
 0.5078943645876521
 0.25394718216683265
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4283248843205851
 0.9574186139568414
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.7009735868458464
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5004373282751816
 1.376399199036722
 0.0
 0.0
 0.0
 1.5716751160854718
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25425747146305683
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6236008018158351
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2014109122961965
 0.0
 0.20696082642584437
 0.12394755825441243
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7457425289145888
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04258138635143126
 0.9014234161635517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9515924771558364
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7702319941890385
 0.0
 0.0
 0.0
 0.0
 0.12191617070985764
 0.0
 0.0
 2.060555191913884
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2381584535754278
 4.705713292443276
 1.3857434980807022
 0.0
 0.0
 0.5034543675422491
 0.761841546838593
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.3763991991978175
 0.0
 0.0
 0.0
 3.0
 1.0266962980820347
 1.973303702410721
 0.0
 0.6236008015025473
 0.0
 1.7985890884802989
 0.0
 2.669091615689984
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.254257471677759
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.9733037021511444
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7386123696477274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.523241930468659
 3.2942867079914753
 0.0
 5.700973587079854
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.7009735866594413
 0.0
 1.0
 0.42832488430546717
 0.9574186139237649
 0.0
 0.0
 2.0
 0.999999999597123
 0.0
 1.7009735853260246
 1.0
 0.29902641468499097
 1.499562672299062
 0.0
 0.0
 0.0
 0.2990264154637608
 0.0
 0.0
 2.0
 0.9999999999402585
 0.0
 0.0
 0.0
 5.793039174544712
 2.2069608258396047
 0.0
 0.0
 1.1078518356907199
 0.8760524423788341
 1.0160957220270572
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0985765841290913
 0.6400357855444663
 0.0
 0.0
 5.000000000644426
 2.999999999583798
 2.0
 0.0
 0.0
 1.000000000241871
 2.0
 2.9233490871100303
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.74605281782796
 0.5882141615447583
 1.0
 0.0
 0.0
 0.06293179594043286
 0.2539471822691411
 0.0
 1.0
 0.0
 0.0
 0.3750000000222963
 0.0
 0.0
 0.0
 0.9220498998873443
 0.0
 0.0
 0.0
 1.0
 0.3422320993450438
 0.24666296279001387
 0.0
 0.07795010018663537
 0.0
 1.0
 0.18772908544335215
 0.5421292637256154
 0.0
 0.14899707204793572
 0.0
 0.0
 0.0
 0.0
 0.0
 0.45787073631522873
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6577679006870497
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6632738425087121
 0.0
 0.0
 0.3154052412963494
 0.4117858384914193
 0.0
 1.0



=====Finished running Instance #148=====




