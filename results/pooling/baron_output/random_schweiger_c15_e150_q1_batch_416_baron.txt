===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -174.615
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -627.701
 Preprocessing found feasible solution with value -627.701
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            20.42     -639.839         -627.701       
         42+            6            50.33     -639.498         -627.701       
       1132             9            80.23     -639.498         -627.701       
       4681            11           110.13     -639.498         -627.701       
       8695             6           140.03     -639.498         -627.701       
      10593            10           169.92     -639.494         -627.701       
      14490             9           199.82     -639.494         -627.701       
      18168            14           229.71     -639.494         -627.701       
      22055            14           259.61     -639.494         -627.701       
      25668             9           289.50     -639.494         -627.701       
      29740            16           319.39     -639.494         -627.701       
      33284            10           349.28     -639.494         -627.701       
      37460            11           379.18     -639.494         -627.701       
      41490            11           409.08     -639.494         -627.701       
      45478             9           438.97     -639.494         -627.701       
      49182             9           468.87     -639.494         -627.701       
      52934            13           498.77     -639.494         -627.701       
      56955            14           528.66     -639.494         -627.701       
      58404+            6           558.60     -639.494         -627.701       
      58740             9           588.50     -639.494         -627.701       
      61901+            7           618.42     -639.494         -627.701       
      61950+            7           648.32     -639.494         -627.701       
      64462            14           678.22     -639.494         -627.701       
      67137            15           708.12     -639.494         -627.701       
      71352            11           738.02     -639.494         -627.701       
      75628            14           767.91     -639.494         -627.701       
      79435            13           797.81     -639.494         -627.701       
      83484            16           827.70     -639.494         -627.701       
      87216            13           857.60     -639.494         -627.701       
      89393+            7           887.49     -639.494         -627.701       
      90212            13           917.39     -639.494         -627.701       
      94222            18           947.28     -639.494         -627.701       
      98090            15           977.18     -639.494         -627.701       
     102263            14          1007.07     -639.494         -627.701       
     106309            16          1036.97     -639.494         -627.701       
     110714            18          1066.86     -639.494         -627.701       
     114790            13          1096.76     -639.494         -627.701       
     119058            11          1126.65     -639.494         -627.701       
     123046            11          1156.55     -639.494         -627.701       
     126979            10          1186.44     -639.494         -627.701       
     130850            16          1216.34     -639.494         -627.701       
     134887            13          1246.23     -639.494         -627.701       
     138896             9          1276.13     -639.494         -627.701       
     142608            15          1306.02     -639.494         -627.701       
     146621            13          1335.92     -639.494         -627.701       
     150104+           10          1365.81     -639.494         -627.701       
     150311+            8          1395.70     -639.494         -627.701       
     151087             8          1425.60     -639.494         -627.701       
     154809            13          1455.49     -639.494         -627.701       
     156813             8          1485.40     -639.494         -627.701       
     160593            20          1515.29     -639.494         -627.701       
     164827            12          1545.18     -639.494         -627.701       
     168510            14          1575.07     -639.494         -627.701       
     169767+            6          1604.99     -639.494         -627.701       
     169992+            7          1634.90     -639.494         -627.701       
     172180+            8          1664.79     -639.494         -627.701       
     174559             7          1695.46     -639.494         -627.701       
     178420            10          1725.35     -639.494         -627.701       
     180036             6          1755.25     -639.494         -627.701       
     180401+           10          1785.17     -639.494         -627.701       
     183599            13          1815.06     -639.494         -627.701       
     186563+            6          1844.95     -639.494         -627.701       
     186672+            7          1874.86     -639.494         -627.701       
     186961             7          1904.76     -639.494         -627.701       
     187116             4          1934.67     -639.494         -627.701       
     187242+            6          1964.58     -638.073         -627.701       
     190518            10          1994.47     -638.073         -627.701       
     191577+            6          2024.40     -638.073         -627.701       
     191823             7          2054.31     -638.073         -627.701       
     192023             9          2084.20     -638.073         -627.701       
     192345+            9          2114.10     -638.073         -627.701       
     192610             8          2143.99     -638.073         -627.701       
     194224            18          2173.89     -638.073         -627.701       
     197923            11          2203.78     -638.073         -627.701       
     201679            12          2233.67     -638.073         -627.701       
     203133             3          2263.58     -638.073         -627.701       
     206412            11          2293.47     -638.007         -627.701       
     206825             9          2323.37     -638.007         -627.701       
     207079+            8          2353.27     -638.007         -627.701       
     207435+           10          2383.17     -638.007         -627.701       
     207742             7          2413.08     -638.007         -627.701       
     210368            11          2442.97     -638.007         -627.701       
     212037+            5          2472.89     -638.007         -627.701       
     212051+            4          2502.80     -638.007         -627.701       
     212214+            5          2532.71     -638.007         -627.701       
     214511             8          2562.61     -637.890         -627.701       
     217926             9          2592.50     -637.890         -627.701       
     218663+           10          2622.41     -637.890         -627.701       
     218890+            9          2652.31     -637.890         -627.701       
     219192+           10          2682.21     -637.890         -627.701       
     219334+            5          2712.14     -637.890         -627.701       
     219363             5          2742.04     -637.890         -627.701       
     219557+            3          2771.95     -637.890         -627.701       
     219778             7          2801.88     -634.697         -627.701       
     219901             8          2831.79     -634.697         -627.701       
     219990+            5          2861.72     -634.697         -627.701       
     220106+            3          2891.63     -634.315         -627.701       
     220245+            5          2921.55     -633.917         -627.701       
     220420             8          2951.44     -633.917         -627.701       
     220600+            5          2981.35     -631.230         -627.701       
     221640            13          3011.24     -631.230         -627.701       
     225414             8          3041.13     -631.230         -627.701       
     229166             9          3071.03     -631.230         -627.701       
     232968            10          3100.92     -631.230         -627.701       
     236804             6          3130.82     -631.230         -627.701       
     237790            11          3160.71     -628.649         -627.701       
     241728             9          3190.61     -628.499         -627.701       
     244845             0          3216.79     -627.764         -627.701       

                         *** Normal completion ***            

 Wall clock time:                  3228.35
 Total CPU time used:              3216.79

 Total no. of BaR iterations:  244845
 Best solution found at node:   12639
 Max. no. of nodes in memory:      23
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -196.866
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -622.473
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            13.56     -641.338         -622.473       
*        16             3            25.99     -639.613         -622.670       
        175+            7            55.88     -639.573         -622.670       
        624+            8            85.78     -639.573         -622.670       
       1668            10           115.67     -635.942         -622.670       
       4308             5           145.56     -635.927         -622.670       
       7568             4           175.45     -635.718         -622.670       
      12576            12           207.76     -635.374         -622.670       
      14015+            7           237.66     -635.374         -622.670       
      14294+            3           267.55     -635.374         -622.670       
      14751            13           297.45     -635.374         -622.670       
      19246+            6           327.34     -635.374         -622.670       
      23277            13           357.23     -634.888         -622.670       
      28354            15           387.12     -634.888         -622.670       
      30452+            6           417.01     -634.888         -622.670       
      35253            11           446.90     -634.888         -622.670       
      41087             7           476.78     -634.888         -622.670       
      45309+            3           506.68     -634.888         -622.670       
      45593+            5           536.57     -633.669         -622.670       
      45782+            6           566.48     -633.669         -622.670       
      46195+            6           596.37     -631.530         -622.670       
      49978             8           626.26     -626.883         -622.670       
      50459+            1           656.17     -625.153         -622.670       
      50459             0           657.59     -622.733         -622.670       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   660.13
 Total CPU time used:               657.66

 Total no. of BaR iterations:   50459
 Best solution found at node:   25268
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================



*****Running Instance #831*****


objective value: -627.701377793
objective bound: -627.764154209
BARON solution time: 3228.35

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1109896881661383
 0.0
 0.0
 0.889010312016299
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9959925128269018
 0.0
 0.0
 1.0040074873922131
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8970981678028583
 0.5394102583116901
 0.0
 0.0
 0.0
 0.0
 4.098894345995894
 2.464597228381857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08520408998303859
 0.3103277236154735
 0.0
 0.0
 0.0
 0.0
 0.889247529106051
 3.2387900803761935
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7471168031207042
 2.2413504092586956
 0.0
 0.5725633517380148
 1.7176900551479615
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.68031984535906
 2.0409595359880273
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8830186911323841
 0.3164470290008478
 0.9783579316376039
 0.33335898561114335
 0.11946571646859373
 0.3693516467189862
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.511700409036775
 1.9733537873518334
 0.0
 0.0
 0.0
 0.37918589795765795
 0.13575990560655932
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40471881513652536
 0.1733141416908149
 0.0
 0.0
 0.0
 0.0
 0.4731643956727157
 0.2365821978077345
 0.0
 0.0
 1.5268356046183558
 0.7634178021996076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6582314950746786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3417685058840356
 1.0
 0.6582314944157146
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5748157299519148
 0.7874078643724798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4251842705149066
 0.21259213508823943
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6193516844753337
 0.8816731131342795
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.337761020370626
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4850541962569732
 0.0
 0.0
 0.0
 1.3806483157788718
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5149458045421755
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3417685040714667
 0.0
 0.10911369431692122
 0.5640872551276633
 1.5952811852377056
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.8266858586560157
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11832688691067565
 1.0255483812332002
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5116797178687649
 0.0
 0.0
 0.0040074877085960565
 0.0
 0.2719426061061026
 0.0
 0.0
 4.652290422928969
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3622235947861747
 1.4365084262010466
 1.5010247978122022
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.988467212472436
 0.0
 0.0
 0.0
 7.485054196876511
 0.0
 0.39553181365795986
 0.0
 3.0
 0.7097465934804502
 2.290253406986504
 0.0
 0.514945803986361
 0.0
 2.6582314967055356
 0.5780329568273402
 1.1109896882068628
 0.6377764058029215
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8890103120756286
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.290253406817963
 0.0
 2.1778236517708356
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.128037609482244
 0.0
 0.0
 6.563491574413434
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8221763487987233
 0.0
 0.0
 0.0
 2.7212793814430007
 0.0
 0.0
 5.337761020515208
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.337761020151948
 0.0
 0.9999999999934615
 0.6193516846059247
 0.8816731133232998
 0.0
 0.0
 2.0
 0.9999999993452934
 0.0
 1.3417685057695936
 1.0
 0.6582314943652825
 1.9999999999743172
 0.0
 0.0
 0.0
 0.6582314950048705
 0.0
 0.0
 2.0
 0.9999999999563205
 0.40471881514318425
 0.17331414169204012
 0.0
 5.890886306636078
 2.1091136929952286
 0.0
 0.0
 1.216377676592421
 0.43591274543137365
 1.3477095781911215
 2.0
 5.999999999953709
 0.0
 2.0
 0.9999999999677514
 0.0
 0.0
 0.9744516190456832
 3.549117803849445
 0.0
 0.0
 4.995992513517317
 3.0040074865170205
 1.9959925126576696
 0.0
 0.0
 1.0040074873454683
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7874078649131444
 0.17956355326462406
 0.9999999997855493
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.3735584015468488
 0.0
 0.0
 0.0
 0.9356317745982159
 0.0
 0.08743798903498877
 0.0
 1.0
 0.2365821978135722
 0.28628167586104303
 0.0
 0.06436822547602179
 0.0
 1.0
 0.9999999999787399
 0.5554948440787011
 0.2125921352481418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44450515600467166
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7634178022436937
 0.0
 0.725941217223335
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9125620110058713
 0.0
 0.0
 0.8204364467950023
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27405878291032915
 0.0
 0.0
 0.0
 0.34015992266814066
 0.0
 0.0
 1.0



=====Finished running Instance #831=====




*****Running Instance #832*****


objective value: -622.670327384
objective bound: -622.732600638
BARON solution time: 660.13

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.32478056022178
 0.0
 0.0
 0.675219439982884
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003067473
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5163316654217696
 0.29878460395940937
 0.0
 0.0
 0.0
 0.0
 4.483668335409385
 2.594555317048651
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0106379902061031
 0.10795577048188332
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2379117837106982
 0.7137353510889612
 0.0
 0.750000000110619
 2.250000000204335
 0.0
 0.5655076955311996
 1.6965230864860328
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4465805209424323
 1.3397415627348501
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7863220839552696
 0.8282057090968228
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.3219545350222295
 2.5882409258130967
 0.0
 0.0
 0.0
 1.1746203176442196
 0.9151842225312113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49197947902912115
 0.2459897394721068
 0.0
 0.0
 1.508020521232181
 0.7540102604859609
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6080622845367334
 0.0
 0.0
 0.0
 1.391937715116635
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6080622858426511
 1.0
 1.3919377143608884
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3953407192664125
 0.6976703592702533
 0.0
 0.6046592811226075
 0.3023296404040214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4619390923490263
 0.6309375331952314
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.714722365460846
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.3919377161734162
 1.5116452650367722
 0.0
 0.0
 0.0
 1.538060908055158
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2788532801848232
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.48835473582647615
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.503425148605042
 0.17179429166860935
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7211467202018113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3690624670918926
 0.9893620101197665
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2136779168939709
 0.0
 0.0
 6.0
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.093011078779339
 0.8151162693720998
 1.0928766253479956
 0.0
 0.0
 0.9516471347879166
 0.9069889216317896
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.910195460620748
 0.0
 0.0
 0.0
 3.0
 0.7379692185012279
 2.2620307819918373
 0.0
 2.0898045400995677
 0.0
 3.0
 0.0
 1.3247805601102676
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6752194399260482
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.262030781718142
 0.0
 2.6145277929627695
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1185937605995289
 0.0
 0.0
 7.07822365237919
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7863220836609879
 0.0
 0.0
 4.714722365694284
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 1.7147223653174084
 0.0
 1.0
 0.4619390923393785
 0.6309375331821166
 0.0
 0.0
 2.0
 0.9999999995780569
 0.0
 0.6080622857858036
 1.0
 1.3919377142310623
 1.608062284394026
 0.0
 0.0
 0.0
 1.3919377149929082
 0.0
 0.0
 2.0
 0.9999999999257404
 0.0
 0.0
 0.0
 4.496574852337158
 3.503425148087747
 0.0
 0.0
 1.786322083778997
 0.8282057090149249
 0.0
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0106379901729055
 0.10795577047833703
 0.0
 0.0
 5.000000000646871
 2.893339920901422
 2.0
 0.0
 0.0
 1.000000000238732
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6976703595646309
 0.10326633307099392
 1.0
 0.0
 0.0
 0.11895589184381927
 0.3023296405315869
 0.0
 1.0
 0.0
 0.0
 0.37500000002118294
 0.0
 0.0
 0.0
 0.7387744325651774
 0.0
 0.0
 0.0
 1.0
 0.24598973949037392
 0.28275384773700246
 0.0
 0.2612255675080538
 0.0
 1.0
 0.054908459658603165
 0.6623902800633151
 0.0
 0.1290536091658879
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3376097199671939
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7540102605419534
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.8967336669658628
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8160379311755089
 0.0
 0.0
 0.22329026044674694
 0.0
 0.0
 1.0



=====Finished running Instance #832=====




