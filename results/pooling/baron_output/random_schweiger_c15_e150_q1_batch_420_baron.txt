===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -624.733
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.733
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            14.35     -637.031         -624.733       
         24+            5            44.24     -634.436         -624.733       
        101+            4            74.13     -634.436         -624.733       
        134+            2           104.02     -634.436         -624.733       
        193+            1           133.90     -627.390         -624.733       
        193             0           134.89     -624.796         -624.733       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   135.52
 Total CPU time used:               134.95

 Total no. of BaR iterations:     193
 Best solution found at node:       1
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -170.283
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -540.113
 Preprocessing found feasible solution with value -607.220
 Preprocessing found feasible solution with value -607.220
 Preprocessing found feasible solution with value -607.220
 Preprocessing found feasible solution with value -607.220
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            14.54     -640.918         -627.805       
          1             1            15.40     -640.918         -627.805       
         13+            5            45.30     -636.639         -627.805       
         33+            3            75.20     -634.858         -627.805       
         48+            3           105.08     -634.858         -627.805       
        591            18           134.96     -633.129         -627.805       
       3235            18           164.88     -633.129         -627.805       
       6808            15           194.76     -633.129         -627.805       
       9779             9           224.65     -633.129         -627.805       
       9799+            6           254.54     -633.129         -627.805       
       9822+            4           284.42     -633.129         -627.805       
       9921+            8           314.34     -633.129         -627.805       
       9944+            4           344.25     -633.129         -627.805       
       9989+           10           374.16     -632.549         -627.805       
      10061+            4           404.05     -632.549         -627.805       
      10104+            3           433.94     -632.549         -627.805       
      10214+            6           463.84     -631.534         -627.805       
      10334+            4           493.74     -631.448         -627.805       
      10401+            4           523.64     -631.404         -627.805       
      10465+            2           553.53     -631.033         -627.805       
      10487             0           563.17     -627.867         -627.805       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   565.57
 Total CPU time used:               563.31

 Total no. of BaR iterations:   10487
 Best solution found at node:     176
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================



*****Running Instance #839*****


objective value: -624.733385981
objective bound: -624.795865563
BARON solution time: 135.51

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0806942370910853
 1.9193057632593267
 0.0
 0.8076972253989448
 1.4344648897634196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.926612569031515
 0.0
 0.0
 1.0733874313515932
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8613283049477856
 1.5062212486693816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0652842648456597
 1.0871786501653535
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1484641463628869
 1.528690528475516
 0.07338743149032784
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.821286400018806
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15021436207093836
 0.45064308618572524
 0.0
 0.750000000113286
 2.2500000002090865
 0.0
 0.49328629433029203
 1.4798588828894241
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.606499343780331
 1.819498031226268
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7800995440216802
 0.9827066330288914
 0.237193823230512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.245668159758267
 1.7334368416735955
 0.0
 0.015119211185273936
 0.0
 0.7543318412685978
 0.24926979074487704
 0.0
 0.002174156287092274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6845698822308863
 0.34228494106136037
 0.0
 0.0
 1.3154301180302481
 0.6577150589111563
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.889245931435292
 0.0
 0.0
 0.0
 0.5141663846168262
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4858336163595256
 0.9874958142516926
 0.5266705696862728
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4582769563444284
 0.647760398479198
 0.08137807957304197
 0.5417230440486678
 0.24063106349700267
 0.030230458482769697
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.705416723231929
 0.6952046260912826
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.568334216406867
 2.8799295329306958
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.11075406927005528
 1.4219434649579914
 0.0
 0.43166578400621197
 0.0
 1.2945832772128816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24216211488830477
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5780565358966737
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5965876841170066
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7578378854743054
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.30479537423667147
 0.8515358539819955
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1787136008561462
 0.0
 0.0
 0.0
 0.0
 1.8920151560761094
 0.0
 0.0
 0.0
 0.0
 0.11160853860384524
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21990045677540923
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01250418633784609
 2.409035524789523
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.187415434396668
 4.367549553570489
 1.4006213491255897
 0.0
 0.0
 0.6008574482490255
 0.8125845660284402
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.994224212438356
 0.0
 0.0
 0.0
 3.0
 1.0268548232922468
 1.9731451772006845
 0.0
 1.0057757882762175
 0.0
 2.4034123166702295
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2421621151199065
 0.0
 0.0
 0.0
 2.8212863999475215
 0.0
 0.0
 1.9731451769414043
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.7505421063287305
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4259973749781643
 3.1524629149773213
 0.0
 5.4482637493372605
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.5683342162922727
 2.8799295327200496
 0.0
 1.0
 0.7054167231812585
 0.6952046260413376
 0.0
 0.0
 2.0
 0.8883914618892726
 0.11160853804489675
 1.4858336162131185
 0.987495814154415
 0.5266705696344264
 1.8892459312965468
 0.0
 0.0
 0.0
 0.5141663845784493
 0.0
 0.0
 2.0
 0.9999999999402785
 0.0
 0.0
 0.0
 6.0
 1.9827066322705853
 0.0
 0.01729336747206151
 1.7800995439117495
 0.9827066329682007
 0.23719382321585908
 2.0
 6.0
 0.0
 1.821286399837027
 0.9999999999964027
 0.0
 0.0
 1.148464146310629
 1.5286905284059937
 0.07338743148687915
 0.0
 4.926612569610896
 2.5933998987386464
 1.9266125688987397
 0.0
 0.0
 1.0733874312775071
 1.8883914624204183
 3.3537706528986475
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7291384781002561
 0.580790201080044
 1.0
 0.0
 0.0
 0.07510718102829085
 0.27086152199759855
 0.0
 1.0
 0.0
 0.0
 0.3750000000222641
 0.0
 0.0
 0.0
 0.8742780265423992
 0.0
 0.0
 0.0
 1.0
 0.342284941081771
 0.24664314713864496
 0.0
 0.1257219735326761
 0.0
 1.0
 0.17523674674405204
 0.572282950117798
 0.0
 0.19941476507841913
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42771704991920756
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6577150589504686
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6253484881775289
 0.0
 0.0
 0.30324967186010454
 0.4192097989570093
 0.0
 1.0



=====Finished running Instance #839=====




*****Running Instance #840*****


objective value: -627.804663684
objective bound: -627.867450373
BARON solution time: 565.57

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1190013024661671
 1.6997089677516837
 0.0
 0.8809986976662532
 1.3381944987012124
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8274576618075071
 0.0
 0.6368526582586204
 0.5356896796424201
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0226707131788784
 3.4274185816688454
 0.5678081224450925
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6077663052540492
 2.0368917395296307
 0.33744453637526195
 0.31262763061771726
 0.8420732694307436
 0.04825670947370908
 0.0
 0.0
 0.0
 0.8051755317023462
 2.1687679720086326
 0.12428562896555563
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7718843798530557
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.013737165609116204
 0.04121149673150841
 0.0
 0.7500000000083951
 2.2500000001289227
 0.0
 0.5216289513967892
 1.5648868542349286
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7146338832023792
 2.143901649701175
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8665976475066932
 0.8341180100416428
 0.2992843424559687
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.4097155155351535
 1.8032385047027988
 0.0
 0.0
 0.0
 0.5902844852662813
 0.19676149506359875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01540773998743241
 0.0
 0.0
 0.0
 0.22197088883378785
 0.0
 0.6089894632511749
 0.30449473153059026
 0.0
 0.0
 1.3910105369604417
 0.6955052682594887
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.702265783257296
 0.0
 0.0
 0.0
 0.3085754572430793
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6914245436647988
 1.0
 0.30857545653358837
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5362064302164575
 0.7681032146391412
 0.0
 0.46379357012173467
 0.23189678492391644
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4136601451534482
 0.9021195646970148
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5849132713357184
 4.78617188610788
 0.0
 0.6873802298475298
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.2977342170453368
 0.15660385239241406
 0.0
 1.4150867290040086
 0.0
 1.586339854510397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21919319607034785
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999993451953
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2129591296954933
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9891587593815819
 0.0
 0.0
 0.1658819900057502
 1.7626213712131371
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7808068041615257
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09788043396329325
 0.8821968378071561
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2281156209258278
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31261977059095286
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1334023528669092
 0.0
 0.0
 2.0259595337717307
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3043096451109815
 5.017897417292816
 1.3157797096741126
 0.0
 0.0
 0.05494866233220294
 0.6956903551289747
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.212954020385067
 0.0
 1.2029576095221697
 0.0
 2.999999999805209
 0.913484194781765
 2.086515805634296
 0.0
 0.7870459803554976
 0.0
 2.0108412413215047
 0.015407739960851794
 2.8187102701807856
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2191931963324865
 0.0
 0.0
 0.0
 2.7718843800322404
 0.0
 0.0
 2.08651580521993
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.098229132676534
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22197088879699417
 0.0
 0.0
 2.8585355328973554
 2.9821025811589417
 0.0
 6.058465387368158
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5849132712730297
 4.7861718857603615
 0.0
 0.687380229777063
 0.4136601458318242
 0.9021195661854583
 0.0
 0.0
 2.0
 0.9999999994771283
 0.0
 1.6914245435090691
 1.0
 0.30857545649634516
 1.7022657832559498
 0.0
 0.0
 0.0
 0.3085754572229782
 0.0
 0.0
 2.0
 0.9999999997667791
 0.23737862911860144
 0.0
 0.0
 6.0
 1.999999999650013
 0.0
 0.0
 1.866597647569567
 0.83411801007276
 0.29928434246804636
 2.0
 6.0
 0.0
 1.7718843796869255
 0.9999999999893563
 0.0
 0.0
 1.1178031624043159
 3.0108412416761348
 0.17254233843046285
 1.6304370184164954
 5.464310321178997
 0.9052526588036097
 1.8274576619060026
 0.0
 0.6368526582394441
 0.5356896796206962
 2.0
 3.0379034663785114
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7681032150467928
 0.6272371772863845
 0.999999998350897
 0.0
 0.0
 0.006868582786098289
 0.23189678504369116
 0.0
 1.0
 0.0
 0.0
 0.37499999999990763
 0.0
 0.0
 0.0
 0.9016192525296159
 0.0
 0.27968039555729923
 0.0
 0.999999999913923
 0.30449473160140483
 0.2608144756903916
 0.0
 0.09838074753627908
 0.0
 1.0
 0.06490786489288002
 0.5595006512106294
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4404993488152534
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6955052684246598
 0.0
 0.9999999999781707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7203196043650406
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9350921338531254
 0.0
 0.0
 0.35731694159619093
 0.37276282271879896
 0.0
 1.0



=====Finished running Instance #840=====




