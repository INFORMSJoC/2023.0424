===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.37
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -176.836
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -630.907
 Preprocessing found feasible solution with value -630.907
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            14.57     -643.729         -631.405       
          1             1            15.78     -643.729         -631.405       
         15+            4            46.64     -640.034         -631.405       
       1148             8            77.06     -640.034         -631.405       
       4576             6           108.00     -639.468         -631.405       
       6235             7           137.89     -638.988         -631.405       
       9870            12           167.78     -638.988         -631.405       
      14592            13           197.67     -638.988         -631.405       
      16235+            9           227.57     -638.988         -631.405       
      17938            13           257.46     -638.988         -631.405       
      22615            12           287.34     -638.988         -631.405       
      23614+            8           317.23     -638.988         -631.405       
      26569+            7           347.13     -638.988         -631.405       
      26811+           10           377.02     -638.988         -631.405       
      27108+            9           406.91     -638.988         -631.405       
      27408+           10           436.81     -638.988         -631.405       
      27684+            9           466.70     -638.988         -631.405       
      28188             4           496.59     -638.988         -631.405       
      28523+            8           526.49     -638.988         -631.405       
      28879+           10           556.38     -638.988         -631.405       
      29272+            8           586.27     -638.988         -631.405       
      31720             5           616.16     -638.988         -631.405       
      36500            10           646.06     -636.598         -631.405       
      41489             9           675.94     -636.598         -631.405       
      46140            10           705.84     -636.598         -631.405       
      50993            13           735.73     -636.598         -631.405       
      55828            10           765.61     -636.598         -631.405       
      58590            11           795.51     -636.598         -631.405       
      62635            10           825.40     -636.598         -631.405       
      65875+            6           855.32     -636.598         -631.405       
      67624             9           885.21     -636.598         -631.405       
      71709             8           915.11     -636.598         -631.405       
      74019             9           945.00     -636.598         -631.405       
      78393             8           974.89     -636.598         -631.405       
      82258+            4          1004.79     -636.598         -631.405       
      82637+            5          1034.70     -636.598         -631.405       
      85704             9          1064.59     -636.598         -631.405       
      89542             7          1094.48     -636.598         -631.405       
      91716            12          1124.37     -636.598         -631.405       
      92665             9          1154.27     -636.598         -631.405       
      95627             7          1184.16     -636.598         -631.405       
      99791             9          1214.05     -636.598         -631.405       
     104082            11          1243.94     -636.598         -631.405       
     108706            12          1273.84     -636.598         -631.405       
     111641+            3          1303.75     -636.598         -631.405       
     111927             6          1333.64     -634.624         -631.405       
     114422             6          1363.54     -634.624         -631.405       
     118407             7          1393.44     -634.560         -631.405       
     121844+            4          1423.34     -634.560         -631.405       
     122113+            4          1453.23     -633.017         -631.405       
     122517             0          1480.63     -631.468         -631.405       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1486.25
 Total CPU time used:              1480.71

 Total no. of BaR iterations:  122517
 Best solution found at node:    6445
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -186.955
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -622.470
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            19.10     -630.775         -622.470       
         11             0            48.22     -622.533         -622.470       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    48.48
 Total CPU time used:                48.28

 Total no. of BaR iterations:      11
 Best solution found at node:       2
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #779*****


objective value: -631.404705759
objective bound: -631.46785254
BARON solution time: 1486.25

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.393850133799806
 0.0
 0.0
 0.6061498664187811
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002661216
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11109986148634769
 1.617858476399531
 0.859615223979066
 0.0
 0.0
 0.0
 0.2322548358697803
 3.382141524477777
 1.7970300780343995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1723765888420445
 0.6270628784446812
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.934585315637709
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.18114942899499226
 0.5434482869517657
 0.0
 0.7500000001131739
 2.250000000209305
 0.0
 0.4744633855780402
 1.423390156635692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5943871856086469
 1.7831615567130525
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6560837131234527
 0.8345308602680931
 0.5093854268993717
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4240226546299364
 2.583931513108112
 0.0
 0.0
 0.0
 1.1352966203991592
 0.8567492128616129
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7347643055697477
 0.3673821527281154
 0.0
 0.0
 1.265235694691334
 0.6326178472479261
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6555054960084263
 0.0
 0.0
 0.0
 0.23766750130893877
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7623324996638179
 1.0
 0.23766750053667096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4356158028098918
 0.7178079010416798
 0.0
 0.5643841975802293
 0.2821920986473038
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13034298834294206
 0.4923434408531632
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.02979158147149489
 0.11253148264133456
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.08427138218333
 3.105687198908212
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.3444945046520768
 1.335309286685911
 0.0
 0.915728618199191
 0.0
 1.8398654305737059
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26109296627031603
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3213360167459966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1068270028570373
 0.0
 1.4406807262678043
 0.16546914044054745
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7389070341143672
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39512507675927133
 0.8276234114940364
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06541468524909573
 0.0
 0.0
 0.0
 0.0
 0.8254293938568624
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21207960302598908
 0.0
 0.0
 0.0
 0.0
 0.13183668454041259
 0.0
 0.0
 5.4906145742816745
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1534237040919577
 2.5885735618649446
 0.6226864290342249
 0.0
 0.0
 0.7245977159377702
 0.8465762963220366
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.007954167526716
 0.0
 0.0
 0.14232306407584477
 3.0
 1.102146458297863
 1.8978535421959184
 0.0
 1.9920458331907303
 0.0
 1.893172997929996
 0.0
 1.3938501336769167
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6061498663653397
 0.0
 0.0
 0.0
 2.9345853155711974
 0.0
 0.0
 1.8978535419392601
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.799439467198267
 0.0
 0.0
 5.411426438381957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.377548742294168
 0.0
 0.0
 5.189958581125611
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.0842713820992245
 3.105687198663441
 0.0
 1.0
 0.16013456982070806
 0.6048749235181791
 0.0
 0.0
 2.0
 0.9999999995922672
 0.0
 1.7623324994954905
 1.0
 0.23766750051366436
 1.6555054959087587
 0.0
 0.0
 0.0
 0.23766750129462197
 0.0
 0.0
 2.0
 0.9999999999438278
 0.0
 0.0
 0.0
 4.559319274695585
 3.440680725718042
 0.0
 0.0
 1.6560837130151465
 0.8345308602135152
 0.5093854268660579
 2.0
 6.0
 0.0
 1.9345853154456238
 0.9999999999972741
 0.0
 0.0
 1.172376588798614
 0.6270628784214516
 0.0
 0.3433546973434604
 5.00000000069284
 2.6566453019154523
 2.0
 0.0
 0.0
 1.000000000197601
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7178079013343539
 0.3235716952350695
 0.8139590875903907
 0.0
 0.0
 0.09057471448872759
 0.2821920987623626
 0.0
 1.0
 0.0
 0.0
 0.3750000000222324
 0.0
 0.0
 0.0
 0.7509942709284275
 0.0
 0.0
 0.1860409123704626
 1.0
 0.36738215274874836
 0.23723169276325903
 0.0
 0.2490057291447212
 0.0
 1.0
 0.053403693730100225
 0.6969250668451709
 0.0
 0.11347493202555262
 0.0
 0.0
 0.0
 0.0
 0.0
 0.30307493318558887
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6326178472834652
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6764283048018241
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8331213742443471
 0.0
 0.0
 0.29719359277466617
 0.0
 0.0
 1.0



=====Finished running Instance #779=====




*****Running Instance #780*****


objective value: -622.470340016
objective bound: -622.532593272
BARON solution time: 48.47

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.6874036876671203
 0.0
 0.0
 0.3125963125611994
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.000000000326866
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5398453520621543
 0.3239072111281142
 0.0
 0.0
 0.0
 0.0
 4.4601546487481825
 2.676092788346886
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1905966587460959
 0.567148181316154
 0.0
 0.0
 0.0
 0.0
 0.7436657936372997
 2.212886128977387
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8628512263598274
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22921371489193598
 0.687641144634039
 0.0
 0.7500000001127185
 2.2500000002097877
 0.0
 0.45564184931219753
 1.3669255478426476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5651444359780695
 1.6954333078261121
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7275805516208351
 0.8086921606558637
 0.4637272880135836
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.378049536137657
 2.8009763376517784
 0.0
 0.0
 0.0
 0.5006619922951896
 0.3203121348913674
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7849550689433992
 0.3924775344123226
 0.0
 0.0
 1.215044931317641
 0.607522465566904
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.9013227815666611
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0986772194113232
 0.8977309315115996
 1.0035918493735998
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.407284259776287
 0.7036421295383649
 0.0
 0.592715740615364
 0.2963578701603634
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36926594591007456
 0.5776765379582837
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6520159123445965
 1.996408152624038
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.1790258733669532
 0.0
 0.34798408809628156
 0.0
 1.6307340544816924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27035750048452417
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8209741274851141
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09867721842605275
 0.0
 1.121288472889351
 0.19130783997162162
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7296424999017035
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4223234623129162
 1.0657375479349573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1371487745200747
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17153897407464866
 0.0
 0.0
 0.0
 0.0
 0.10088047499175941
 0.0
 0.1022690690695105
 5.536272713174473
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1109263895439194
 0.863752563181571
 0.9469424836710607
 0.0
 0.0
 0.9168548595147515
 0.8890736108722899
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.179025873542175
 0.0
 0.75774484004315
 0.0
 3.0
 1.1774326033557219
 1.822567397137999
 0.0
 0.8209741271597009
 0.0
 2.9013227823649284
 0.0
 1.687403687526059
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3125963125350674
 0.0
 0.0
 0.0
 2.8628512263652994
 0.0
 0.0
 1.8225673968845453
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.9565519225395174
 0.0
 0.0
 7.136247437023209
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.260577743779063
 0.0
 0.0
 4.648424064968352
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.6520159122022116
 1.9964081524516497
 0.0
 1.0
 0.3692659459128895
 0.577676537962691
 0.0
 0.0
 2.0
 0.99999999960105
 0.0
 1.098677219303308
 0.897730931423348
 1.0035918492749365
 2.0
 0.0
 0.0
 0.0
 0.901322781487162
 0.0
 0.0
 2.0
 0.9999999999470366
 0.0
 0.0
 0.0
 4.878711528073051
 3.1212884723129664
 0.0
 0.0
 1.727580551508965
 0.8086921606034964
 0.4637272879835546
 2.0
 6.0
 0.0
 1.8628512261741206
 0.9999999999972572
 0.0
 0.0
 0.9342624523563895
 2.7800343102140608
 0.0
 0.0
 5.000000000627926
 2.999999999365554
 2.0
 0.0
 0.0
 1.0000000002589824
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.703642129819083
 0.10796907039887156
 0.9999999999923591
 0.0
 0.0
 0.11460685743485656
 0.2963578702785952
 0.0
 1.0
 0.0
 0.0
 0.375000000022183
 0.0
 0.0
 0.0
 0.8973782341803795
 0.0
 0.20400761934208897
 0.0
 1.0
 0.39247753443310485
 0.22782092463132805
 0.0
 0.10262176589336648
 0.0
 1.0
 0.06101961443229588
 0.8437018437632597
 0.0
 0.10178464991277437
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15629815626757634
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.607522465599085
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7959923806864597
 0.0
 0.0
 0.8920309296376105
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8371957356549298
 0.0
 0.0
 0.2825722179604287
 0.0
 0.0
 1.0



=====Finished running Instance #780=====




