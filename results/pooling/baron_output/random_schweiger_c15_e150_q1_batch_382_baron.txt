===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -176.113
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -595.233
 Preprocessing found feasible solution with value -627.886
 Preprocessing found feasible solution with value -627.886
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            13.85     -641.987         -627.886       
          1             1            20.18     -640.128         -627.886       
         41+            4            51.71     -638.512         -627.886       
        145             7            81.63     -638.512         -627.886       
        292+           10           111.52     -638.512         -627.886       
        421+            8           141.41     -638.512         -627.886       
        676             7           171.32     -638.512         -627.886       
        822+            6           201.20     -638.512         -627.886       
        973             6           231.09     -638.512         -627.886       
       1065+            6           261.00     -638.512         -627.886       
       1229+            7           290.90     -638.512         -627.886       
       1365+            6           320.79     -638.512         -627.886       
       1413+            4           350.68     -638.512         -627.886       
       1556             6           380.58     -638.512         -627.886       
       1673+            6           410.46     -638.512         -627.886       
       1830+            7           440.35     -638.512         -627.886       
       1985+            8           470.24     -638.512         -627.886       
       2088+            4           500.12     -638.512         -627.886       
       4754            12           530.01     -637.988         -627.886       
       7372+           10           559.91     -637.988         -627.886       
       7510             9           589.81     -637.988         -627.886       
       9454             8           619.70     -637.988         -627.886       
      13176            12           649.58     -637.987         -627.886       
      17166            10           679.46     -637.987         -627.886       
      17541+            5           709.35     -637.987         -627.886       
      17650+            4           739.24     -637.987         -627.886       
      17733+            5           769.13     -636.954         -627.886       
      17851             5           799.03     -635.377         -627.886       
      18724             8           828.90     -632.047         -627.886       
      22765             3           858.78     -629.335         -627.886       
      22779             0           858.96     -627.949         -627.886       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   862.50
 Total CPU time used:               859.03

 Total no. of BaR iterations:   22779
 Best solution found at node:    1438
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -225.242
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -506.820
 Preprocessing found feasible solution with value -629.181
 Preprocessing found feasible solution with value -629.181
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            14.82     -640.066         -629.181       
*        17             6            44.79     -636.307         -629.201       
         56+            7            75.25     -636.307         -629.201       
        111+            8           105.14     -636.307         -629.201       
        252+            4           135.05     -633.812         -629.201       
        312+            6           164.94     -630.483         -629.201       
        331             0           179.25     -629.264         -629.201       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   181.48
 Total CPU time used:               180.76

 Total no. of BaR iterations:     331
 Best solution found at node:      17
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================



*****Running Instance #763*****


objective value: -627.886316136
objective bound: -627.949111046
BARON solution time: 862.5

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.4767578747449604
 0.4443159674383598
 0.0
 1.154136538564611
 1.0756010961802507
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002749092
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3911224949129626
 0.7298365749511565
 0.0
 0.0
 0.0
 0.0
 3.608877505972329
 1.8933564858658487
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1542318243945577
 0.8170486735170908
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8003174784994194
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5945631051420787
 1.783689315307547
 0.0
 0.5070291413181935
 1.5210874238479046
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.898407753855106
 2.6952232614071217
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.926286048595277
 0.07371395149825272
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.513569533661991
 2.5201287008971023
 0.0
 0.0
 0.0
 1.4812182615034493
 1.485083504998309
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6479222902652336
 0.3239611450813932
 0.0
 0.0
 1.3520777099960246
 0.6760388548910946
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4886123123029324
 0.0
 0.0
 0.0
 0.3336485660181939
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6663514349544504
 1.0
 0.3336485652452293
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4939469267059848
 0.6474675138614057
 0.09950594936898746
 0.506053073685444
 0.21932032500209683
 0.033706211799126
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49880895670784886
 0.589194292322419
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5968025330312798
 3.043158375392053
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5113876883526847
 1.5087441232906948
 0.0
 0.4031974673861115
 0.0
 1.501191043706717
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22973763445723874
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.235893425991273
 0.4912558774128743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1777391218415307
 0.0
 2.00521220607987
 0.07371395212928633
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7702623659170225
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4108057079733024
 0.8457681759411537
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1996825223744491
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1332121617117531
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.406368986024637
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.240920389936378
 2.1209590698834906
 1.088003248833037
 0.0
 0.0
 0.0
 0.759079610486667
 0.0
 3.0
 0.0
 0.0
 2.3782524204225393
 0.0
 0.0
 0.0
 5.0336982343662555
 0.0
 0.0
 0.0
 3.0
 0.9718834353466268
 2.0281165651459343
 0.0
 2.966301766408138
 0.0
 1.8222608789437091
 0.0
 0.9210738421555446
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.229737634676149
 0.0
 0.0
 0.0
 2.8003174784322415
 0.0
 0.0
 2.028116564887119
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9712804978232903
 0.0
 0.0
 5.5022339918885335
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.5936310152099464
 0.0
 0.0
 5.6399609084559446
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.5968025329124458
 3.0431583751608153
 0.0
 1.0
 0.4988089566876632
 0.5891942922988377
 0.0
 0.0
 2.0
 0.866787838778782
 0.13321216115511192
 1.666351434794904
 1.0
 0.33364856521296243
 1.4886123122093486
 0.0
 0.0
 0.0
 0.3336485659965076
 0.0
 0.0
 2.0
 0.9999999999401809
 0.0
 0.0
 0.0
 3.9947877948736448
 4.0052122056028585
 0.0
 0.0
 2.0
 0.9262860485408145
 0.07371395149396927
 2.0
 6.0
 0.0
 1.8003174783195266
 0.9999999999959448
 0.0
 0.0
 1.1542318243515235
 0.8170486734866249
 0.0
 0.0
 5.000000000692205
 2.6231930607159053
 2.0
 0.0
 0.0
 1.0000000001979592
 1.6308944132389607
 1.5199170635526598
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7469734632798525
 0.2782244989440663
 1.0
 0.0
 0.0
 0.0
 0.2530265368179116
 0.0
 1.0
 0.0
 0.0
 0.29728155254113
 0.0
 0.0
 0.0
 0.6292122792830473
 0.0
 0.0
 0.0
 1.0
 0.3239611451007567
 0.25351457063211713
 0.0
 0.3707877207895731
 0.0
 1.0
 0.2641500902462007
 0.2923290869563883
 0.0
 0.2227066579902427
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7076709130862447
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6760388549315487
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7217755010945339
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5131432517635566
 0.0
 0.0
 0.4492038768880218
 0.0
 0.0
 1.0



=====Finished running Instance #763=====




*****Running Instance #764*****


objective value: -629.200646173
objective bound: -629.263572528
BARON solution time: 181.47

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.6223155606020319
 0.0
 0.0
 0.3776844391359929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999879483803
 0.0
 0.0
 1.000000012063434
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.53463635004053
 0.920781815559599
 0.0
 0.0
 0.0
 0.0
 3.4653636386729434
 2.0792181957255353
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.257136133606788
 0.9651783434342003
 0.0
 0.0
 0.0
 0.0
 0.7680800211907937
 2.883041726099855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998112588
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1544278451939081
 0.46328353562217833
 0.0
 0.7500000000377752
 2.2500000000552354
 0.0
 0.5783766891811496
 1.73513006751419
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5171954656799996
 1.551586397020957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7974540816594635
 0.77844664716545
 0.3753540869171559
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.9394959059516585
 1.646498634305048
 0.0
 0.0
 0.0
 1.0605040935930883
 0.3535013642199086
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.156131084900714
 0.0
 0.0
 0.0
 0.21569838785964573
 0.0
 0.45766216251252595
 0.22883108119299733
 0.0
 0.0
 1.5423378377195167
 0.7711689186456135
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999998976114
 0.0
 0.0
 0.0
 0.8482200681229829
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1517799322229891
 0.8959736941857309
 0.9522463738891841
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4000071600345507
 0.7000035792971464
 0.0
 0.5999928401729518
 0.29999641976435365
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24764471436585223
 0.7267133078053307
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3675037399433995
 0.37627855613044786
 0.0
 0.1837518699611805
 0.0
 0.0
 0.0
 0.0
 1.6324962602517983
 1.671475059791458
 0.0
 0.8162481301054344
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4746082303475678
 0.0
 0.0
 0.0
 1.752355284740712
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29445782538676685
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995667506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5253917703086639
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15177993191877978
 0.0
 0.0
 0.2215533532199689
 0.6281705274246462
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7055421748367353
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27328668870123113
 0.9747838453820559
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.234045159439561e-8
 0.0
 0.20254591821757365
 0.0
 0.10402630634463902
 5.624645913657603
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.100010739785767
 2.455418165688312
 0.9743580223804204
 0.0
 0.0
 0.617711380900471
 0.8999892601884384
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.585994540955507
 0.0
 1.222314477091565
 0.0
 3.0
 0.6864932437055233
 2.3135067567523446
 0.0
 1.4140054582826342
 0.0
 2.8482200688183634
 1.1561310849330102
 1.622315561681146
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3776844394867587
 0.9275341661177497
 0.0
 0.0
 3.0
 0.0
 0.0
 2.3135067563651304
 0.0
 2.9512548157420695
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.6511217473097104
 0.0
 0.0
 5.54458183447117
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21569838788870616
 0.0
 0.0
 2.068781862761698
 0.0
 0.0
 4.1202194501718665
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.047753615907218
 0.0
 1.0
 0.2476447156157113
 0.7267133114674481
 0.0
 0.0
 2.0
 0.9999999990908562
 0.0
 1.15177993211771
 0.8959736941095882
 0.9522463738066095
 2.0
 0.0
 0.0
 0.0
 0.8482200686158714
 0.0
 0.0
 2.0
 0.9999999998156187
 1.3718294729255778
 0.0
 0.0
 6.0
 1.9999999989548298
 0.0
 0.0
 1.7974540815549056
 0.7784466471291773
 0.3753540869106847
 2.0
 6.0
 0.0
 2.0
 0.9999999998916436
 0.0
 0.0
 1.025216154857321
 3.8482200697525037
 0.0
 0.0
 4.999999988681105
 3.0000000113023653
 1.999999987975209
 0.0
 0.0
 1.0000000121242882
 1.9999999999396796
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7000035799677898
 0.30692727070257336
 0.9999999949654603
 0.0
 0.0
 0.07721392260135804
 0.29999642007030275
 0.0
 1.0
 0.0
 0.0
 0.3750000000053224
 0.0
 0.0
 0.0
 0.8232493176099426
 0.0
 0.25081162873743773
 0.0
 1.0
 0.22883108123662085
 0.2891883445822963
 0.0
 0.17675068226569948
 0.0
 0.9999999994198071
 0.8427658887044629
 0.8111577803269938
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1888422195752051
 0.18375186995659062
 0.0
 0.0
 0.9999999999943584
 0.0
 0.0
 0.7711689187968476
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7491883712060672
 0.0
 0.0
 0.6930727293033606
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15723411117566277
 0.0
 0.0
 0.2585977328335906
 0.0
 0.0
 0.8162481300533887



=====Finished running Instance #764=====




