===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -214.816
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -520.335
 Preprocessing found feasible solution with value -628.362
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            22.60     -642.519         -628.362       
         21+            6            52.51     -640.309         -628.362       
        178             7            82.83     -639.394         -628.362       
       2980            13           113.55     -639.394         -628.362       
       6727            10           143.45     -639.394         -628.362       
      10490+           10           173.36     -639.394         -628.362       
      10668+            8           203.27     -639.394         -628.362       
      10769+            6           233.18     -639.394         -628.362       
      10823+            8           263.09     -639.394         -628.362       
      11211             8           292.97     -639.394         -628.362       
      15153            13           322.87     -639.394         -628.362       
      19467            15           352.77     -639.394         -628.362       
      23436            11           382.67     -639.394         -628.362       
      27706            15           412.56     -639.394         -628.362       
      31523+           12           442.48     -639.394         -628.362       
      31565+            5           472.40     -639.394         -628.362       
      31750+            7           502.32     -639.394         -628.362       
      31895+            3           532.25     -639.394         -628.362       
      32032+            5           562.15     -639.394         -628.362       
      32314+            6           592.05     -636.528         -628.362       
      32823+            6           621.95     -636.528         -628.362       
      35825            14           651.85     -636.528         -628.362       
      38066+            5           681.76     -636.528         -628.362       
      38224+            4           711.67     -636.528         -628.362       
      38265+            4           741.57     -635.931         -628.362       
      38295+            2           771.49     -635.931         -628.362       
      38343+            3           801.40     -634.409         -628.362       
      38409+            5           831.31     -633.020         -628.362       
      38429             0           856.01     -628.425         -628.362       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   859.09
 Total CPU time used:               856.07

 Total no. of BaR iterations:   38429
 Best solution found at node:      26
 Max. no. of nodes in memory:      20
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -143.023
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -285.385
 Preprocessing found feasible solution with value -626.646
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            21.71     -634.550         -626.646       
         23+            4            51.77     -633.067         -626.646       
        325+            7            81.67     -633.067         -626.646       
        661+            7           111.57     -632.800         -626.646       
       3852             9           141.45     -632.800         -626.646       
       8054             7           171.33     -632.800         -626.646       
       8502+            3           201.22     -632.711         -626.646       
      11616            11           231.11     -629.323         -626.646       
      16439             6           261.00     -629.323         -626.646       
      17843             0           278.46     -626.709         -626.646       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   279.69
 Total CPU time used:               278.61

 Total no. of BaR iterations:   17843
 Best solution found at node:      -1
 Max. no. of nodes in memory:      16
 
 All done
===========================================================================



*****Running Instance #791*****


objective value: -628.362406142
objective bound: -628.425248666
BARON solution time: 859.09

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0517117547570787
 1.9482882455146506
 0.0
 0.783035361685637
 1.4505672149185134
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.288449047947489
 0.7115509522591064
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20934537638330172
 3.338057799837891
 0.6246141382666976
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12231825049692471
 1.95039124909798
 0.3649553190462953
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1362620121264129
 0.6147286886726471
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9548275657404741
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7500000001060187
 2.250000000189219
 0.0
 0.4429134568421634
 1.328740370436748
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.807086543362095
 2.421259629950502
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9942704022698574
 0.005729597845209031
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.755670952267675
 1.5806823031718171
 0.0
 0.0045413472330339275
 0.0
 1.2443290488192784
 0.41358809861253704
 0.0
 0.0011882508950174589
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8188974488585488
 0.4094487243714298
 0.0
 0.0
 1.181102551402589
 0.5905512756172193
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4490478402017017
 0.0
 0.0
 0.0
 0.4130370145772617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5869629864148032
 0.9729768863354344
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.538500321618883
 0.6421293530129517
 0.1271208076643639
 0.46149967877044207
 0.19261776288302052
 0.03813207646311415
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6690251415098131
 0.8998106903898542
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8311595445825097
 5.0104305442852874
 0.0
 0.6678151669119546
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5509521604899293
 1.184947373248145
 0.0
 1.1688404557692313
 0.0
 1.3309748589294457
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2336025763359106
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.48338900065538554
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1379151453751164
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7663974240348581
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10018930995600915
 0.863737988207498
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04517243514677009
 0.0
 0.0
 0.0
 0.0
 2.253085765181186
 0.0
 0.0
 0.0
 0.0
 0.16525288467902116
 0.0
 0.33218483361916135
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.027023114258421008
 2.3069658949137564
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3077504822961985
 4.17201731448789
 1.568835831701649
 0.0
 0.0
 0.0
 0.6922495181165769
 0.0
 2.5599398726679734
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.340894602495663
 0.0
 0.0
 0.0
 3.0
 1.2283461732299785
 1.7716538272621156
 0.0
 1.6591053982803006
 0.0
 1.8620848554055793
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2336025765595338
 0.0
 0.0
 0.0
 2.9548275656644942
 0.0
 0.0
 1.7716538270198081
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.750990700710807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.2283461732659378
 2.4376648186412
 0.0
 6.5094052556811
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8311595445285089
 5.010430543908433
 0.0
 0.667815166870152
 0.6690251414639012
 0.8998106903279933
 0.0
 0.0
 2.0
 0.8347471158146822
 0.16525288411083253
 1.586962986253047
 0.972976886235084
 0.0
 1.4490478400799383
 0.0
 0.0
 0.0
 0.41303701454110675
 0.0
 0.0
 2.0
 0.999999999956378
 0.0
 0.0
 0.0
 6.0
 1.9942704016265578
 0.0
 0.005729598134210632
 2.0
 0.9942704022065233
 0.005729597844730198
 2.0
 6.0
 0.0
 1.954827565546699
 0.9999999999970209
 0.0
 0.0
 1.1362620120851497
 0.6147286886503545
 0.0
 0.3316636268694255
 5.288449048687117
 0.9895694572713912
 2.0
 0.0
 0.28844904792227866
 0.7115509522028821
 1.8347471163716969
 3.398855460297146
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.769250160733842
 0.6311978746710226
 1.0
 0.0
 0.0
 0.0
 0.23074983936265137
 0.0
 1.0
 0.0
 0.0
 0.3750000000191399
 0.0
 0.0
 0.0
 0.7926118252996
 0.0
 0.0
 0.0
 1.0
 0.40944872438873975
 0.22145672839711242
 0.0
 0.2073881747828695
 0.0
 1.0
 0.2534742986917093
 0.5732189168599026
 0.0
 0.2515985236887052
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42678108318026037
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.5905512756434758
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49492717761958543
 0.0
 0.0
 0.4035432716454182
 0.36880212537579105
 0.0
 1.0



=====Finished running Instance #791=====




*****Running Instance #792*****


objective value: -626.646079974
objective bound: -626.708750849
BARON solution time: 279.68

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5554927308368185
 0.01207924592312556
 0.0
 0.4445072686788697
 0.0034518403760719282
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.9999999999999998
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0018386616946819024
 0.9888441127692782
 0.3631836578539254
 0.0
 0.0
 0.0
 0.00745836334161372
 4.011155887230721
 1.4732213586901997
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1372194759710567e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 1.012039500861923
 0.7127664929173448
 0.0
 3.1981186665241055e-8
 2.252394124864189e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8486175277726666
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.050928410350576415
 0.15278520631729814
 2.473443111051343e-8
 0.7500000000000001
 2.2499996357470575
 3.642529426146739e-7
 0.533426480809805
 1.6002791833598613
 2.5906955373808177e-7
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6656451088396185
 1.9969350032346023
 3.2328425284252783e-7
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3362128504745427
 0.7968039276955993
 0.8669832218298591
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0001627539442508301
 0.00011016470168228004
 0.0
 0.0
 2.738162566550937e-8
 4.170933485164821
 2.823216714355727
 0.0
 3.725290298461914e-8
 0.0
 0.5996716936431219
 0.4059050054674774
 0.0
 3.914968465553023e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2043954468055615e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07727780886378664
 0.0
 0.5775293845071866
 0.2887646922535933
 0.0
 0.0
 1.4224706154928133
 0.7112353077464066
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6690577291855847
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3309422526533405
 0.9721114430484825
 0.6969462764325642
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3452149629673742
 0.6726074814836871
 0.0
 0.6547850370326255
 0.32739251851631274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8590491509758196
 0.9322666921157751
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.725290298461914e-8
 1.9453333278398807e-7
 0.0
 4.390642439729077e-8
 0.0
 0.0
 0.0
 0.0
 1.1589218843057563
 3.466648509249464
 0.0
 0.8919825269152911
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4788405694530105
 0.0
 0.841078078441341
 0.0
 1.1409508490241804
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3006678297827288
 0.0
 0.0
 0.0
 0.0
 2.7865613027230093e-8
 0.0
 0.0
 0.0
 1.9999999588103325
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5118614341695138
 9.713411813303273e-7
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.725290298461914e-8
 0.0
 0.0
 0.0
 0.3309422335615126
 0.0
 1.2292319900853335
 0.2031959958992067
 1.9227221911362138
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6993321702172711
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06773330788422491
 0.9879604557846957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15138247222733336
 0.0
 0.0
 0.0
 0.0
 1.727059333241929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1080174291782845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4717418602178421
 0.0
 0.0
 0.0
 0.0
 0.1920452893076089
 0.0
 0.027888552431598736
 5.117485691740022
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.0178224444510113
 1.3538664323178855
 1.7913158430915948
 0.0
 0.0
 0.20371364140230566
 0.9821775555489383
 0.0
 2.999999972134387
 0.0
 0.0
 3.0
 1.3948767520184236e-8
 0.0002729186496080415
 0.0
 6.994150264155077
 0.0
 1.9381486018874395e-8
 0.0
 3.0
 0.8662940767607799
 2.13370592323922
 0.0
 1.005576742197049
 0.0
 2.669057729185585
 0.0
 1.567571976759944
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44795910905494163
 2.75692660165898e-7
 0.0
 0.0
 2.848617527772667
 0.0
 0.0
 2.13370592323922
 2.0196252444113627e-8
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7248059937792677
 5.4505127913882946e-8
 0.0
 5.491835609262535
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07727780886378664
 0.0
 0.0
 2.6625804353584734
 0.0
 0.0
 5.517552920470512
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.1589219215586593
 3.466648703782797
 0.0
 0.8919825708217156
 0.8590491509758196
 0.9322666921157751
 0.0
 0.0
 2.0
 1.0
 0.0
 1.330942258841675
 0.9721114475684013
 0.6969462796730781
 2.0
 0.0
 0.0
 0.0
 0.6690577291855847
 0.0
 0.0
 2.0
 1.0
 0.07727780886378655
 0.0
 3.131945932517123e-8
 4.770767944796151
 3.2292318926771864
 0.0
 7.640519436868616e-8
 1.336212850474542
 0.7968039276955989
 0.8669832218298589
 2.0
 5.999999028658819
 9.71341180305797e-7
 1.8486175277726666
 1.0
 0.0
 0.0
 1.0120395442153043
 0.7127665234505774
 0.0
 0.009297025036295623
 5.0
 1.8364050165441252
 2.0
 0.0
 0.0
 0.9999999999999998
 2.0
 0.015531086302958432
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6726074814836871
 0.19776882255385564
 1.0
 0.0
 0.0
 0.025464205175288208
 0.32739251851631274
 0.0
 0.999999995350411
 0.0
 0.0
 0.37500000000000006
 0.0
 3.411483143475384e-5
 0.0
 0.8742687830193844
 0.0
 1.1236907171776263e-8
 0.0
 1.0
 0.2887646922535933
 0.2667132404049025
 0.0
 0.12569709962464864
 0.0
 1.0
 0.0
 0.7777463654184092
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22225363433943485
 5.611567522596503e-8
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7112353077464066
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999571623643
 3.16007282996417e-8
 0.0
 0.8022311774461443
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.33282255441980924
 0.0
 0.0
 0.9999999438843247



=====Finished running Instance #792=====




