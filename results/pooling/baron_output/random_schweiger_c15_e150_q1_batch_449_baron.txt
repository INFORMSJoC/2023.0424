===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -168.610
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -623.687
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             8.59     -644.788         -625.297       
          1             1            16.84     -642.851         -625.297       
         40+            3            46.76     -642.591         -625.297       
*        55+            5            50.55     -642.591         -625.359       
*        60             4            50.78     -642.591         -625.421       
*        71+            7            52.65     -642.591         -625.483       
*        72+            7            52.79     -642.591         -625.546       
*        73             6            52.80     -642.591         -625.693       
*        74+            4            52.81     -642.591         -625.756       
       1869             8            82.71     -639.435         -625.756       
       4950+            3           112.60     -629.395         -625.756       
       4970             0           118.02     -625.818         -625.756       

                         *** Normal completion ***            

 Wall clock time:                   118.48
 Total CPU time used:               118.02

 Total no. of BaR iterations:    4970
 Best solution found at node:      74
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -207.420
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.393
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            13.54     -636.713         -631.393       
         15+            3            43.43     -635.533         -631.393       
         70+            3            73.34     -634.424         -631.393       
        134             2           103.24     -633.785         -631.393       
        195             0           120.91     -631.456         -631.393       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   121.51
 Total CPU time used:               121.01

 Total no. of BaR iterations:     195
 Best solution found at node:      26
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================



*****Running Instance #897*****


objective value: -625.755679513
objective bound: -625.818261339
BARON solution time: 118.47

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.9111410051289414
 0.9649177665220006
 0.0
 1.0888589948710585
 1.1531249098372942
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.007562401078621888
 0.9924375989213781
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2297380634089932
 3.5479914247786852
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0114194449464167
 0.6127793218843947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4788935897630469
 1.4366807692891408
 0.0
 0.46740175317281835
 1.4022052595184553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0537046570641346
 3.161113971192404
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8733701392866484
 0.12662986071335158
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4792323345498612
 2.0845476089651287
 0.0
 0.0
 0.0
 1.5234562978144321
 0.9127637586705779
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0907104609858082
 0.0
 0.7535953248724843
 0.37679766243624213
 0.0
 0.0
 1.2464046751275162
 0.6232023375637579
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7216899518373177
 0.0
 0.0
 0.0
 0.5133209762282093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4866790237717908
 0.9625836901052707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4813960640046946
 0.740698032002347
 0.0
 0.5186039359953054
 0.2593019679976526
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4195383484543036
 0.6210164114350857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8274197537734144
 5.033728355717652
 0.0
 0.7786520470677262
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.27831004816268234
 0.0
 0.0
 1.1725802462265855
 0.0
 1.5804616515456964
 0.0
 0.0
 0.9662716442823475
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24743055234270087
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7702619365910066
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7649890719344732
 0.0
 0.9973113676357064
 0.12662986071335164
 1.9092895390141917
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7525694476572992
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3789835885649143
 0.9885805550535836
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.459570976299937
 0.0
 0.0
 1.6249202385454253
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22134795293227383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03741630989472937
 3.7477650618487317
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2220940960070417
 4.777729488187679
 1.0405547598893894
 0.0
 0.0
 0.0
 0.777905903992958
 0.0
 2.4492627138770615
 0.0
 0.0
 1.9155743590521876
 0.0
 0.0
 0.0
 5.56377994351499
 0.0
 0.0
 0.0
 3.0
 1.1303929873087264
 1.8696070126912736
 0.0
 2.43622005648501
 0.0
 2.235010928065527
 0.0
 1.8760587716509418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.241983904708353
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.869607012691274
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6241987668308113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0907104609858082
 0.0
 0.0
 4.2148186282565385
 0.0
 0.0
 6.639800156558792
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8274197537734144
 5.033728355717652
 0.0
 0.7786520470677262
 0.4195383484543036
 0.6210164114350857
 0.0
 0.0
 2.0
 0.9999999999999997
 0.0
 1.4866790237717908
 0.9625836901052707
 0.0
 1.7216899518373177
 0.0
 0.0
 0.0
 0.5133209762282093
 0.0
 0.0
 2.0
 1.0
 0.0907104609858082
 0.0
 0.0
 5.002688632364293
 2.9973113676357066
 0.0
 0.0
 2.0
 0.8733701392866484
 0.12662986071335158
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0114194449464167
 0.6127793218843947
 0.0
 1.2297380634089932
 3.5479914247786852
 0.0
 2.0
 0.0
 0.007562401078621888
 0.9924375989213781
 1.9999999999999998
 2.1180426763592948
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7406980320023473
 1.0
 1.0
 0.0
 0.0
 0.0
 0.2593019679976527
 0.0
 1.0
 0.0
 0.0
 0.23944679488152346
 0.0
 0.0
 0.0
 0.6954724929393736
 0.0
 0.0
 0.0
 0.9999999999999999
 0.37679766243624213
 0.23370087658640917
 0.0
 0.30452750706062626
 0.0
 1.0
 0.0
 0.45557050256447074
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5444294974355293
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6232023375637579
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.5268523285320674
 0.0
 0.0
 0.9999999999999999



=====Finished running Instance #897=====




*****Running Instance #898*****


objective value: -631.392530179
objective bound: -631.455675677
BARON solution time: 121.5

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2786907732596846
 0.0
 0.0
 0.7213092270064794
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8400495347184265
 0.0
 0.10392590949663888
 1.0560245561905603
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3533096775746394
 0.8055375186025279
 0.0
 0.0
 0.0
 0.0
 3.5906657674248237
 2.1372905554147725
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3521369550930192
 0.8959577908757999
 0.05594089900851644
 0.0
 0.0
 0.0
 0.6547197632297088
 1.6658327512135775
 0.1040095667997225
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9219232111787636
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17901409653241016
 0.5370422895686137
 0.0
 0.7500000000830933
 2.2500000002658194
 0.0
 0.5441891584754943
 1.6325674754239476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5267967452025302
 1.5803902356034805
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9571786714675077
 0.8735966888655285
 0.16922463996726686
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.050925426300397
 1.949074574711279
 0.0
 0.0
 0.0
 1.8305552556700209
 1.1694447447594227
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4763865959578823
 0.0
 0.0
 0.0
 0.3841169652978655
 0.0
 0.5488289111162281
 0.27441445552242794
 0.0
 0.0
 1.451171089157528
 0.7255855444762462
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9713761384694624
 0.0
 0.0
 0.0
 0.7089337218830801
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2910662791112046
 0.8768577610648173
 0.8320759601254063
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4728771534831895
 0.7364385764087712
 0.0
 0.5271228469537512
 0.26356142335926
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37435619333319337
 0.6633672462114542
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.2250959673488198
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.028623862296516936
 1.5060291780083723
 0.0
 0.0
 0.0
 1.6256438070741583
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22746057447192078
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49397082272384996
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3196901398085458
 0.0
 1.1185193194870564
 0.1264033118445223
 1.1394964391698896
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7725394259116192
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3366327540855163
 0.9931432820116675
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07807678971595186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04282132916278779
 0.0
 0.12314223951231115
 5.726849451609403
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.209315730118492
 2.1588471961780784
 1.0377234393470893
 0.0
 0.0
 0.7160563860980178
 0.7906842703965565
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.0000000007531185
 0.0
 1.3040356449773356
 0.0
 3.0
 0.823243366638656
 2.1767566338556077
 0.0
 3.0
 0.0
 2.6803098609800355
 0.4763865959028858
 1.2786907731557071
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7213092269490802
 0.0
 0.0
 0.0
 2.9219232111016056
 0.0
 0.0
 2.1767566336337745
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4245620812430086
 0.0
 0.0
 5.727956322859512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38411696525334577
 0.0
 0.0
 2.107186980764227
 0.0
 0.0
 5.225095967547528
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.2250959671535377
 0.0
 1.0
 0.37435619331997705
 0.6633672461920396
 0.0
 0.0
 2.0
 0.9999999996556717
 0.0
 1.2910662789836134
 0.8768577609805001
 0.8320759600457379
 1.971376138271717
 0.0
 0.0
 0.0
 0.7089337218074742
 0.0
 0.0
 2.0
 0.9999999999654167
 0.8605035612226933
 0.0
 0.0
 4.881480681484072
 3.1185193191690748
 0.0
 0.0
 1.957178671335521
 0.8735966888128673
 0.16922463996537876
 2.0
 6.0
 0.0
 1.9219232109783972
 0.9999999999995438
 0.0
 0.0
 1.0068567182779216
 2.561790541979072
 0.1599504657990409
 0.0
 4.943975444766992
 2.942828073887197
 1.840049534590439
 0.0
 0.10392590950240044
 1.0560245561232684
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7364385766740533
 0.27372904511612317
 1.0
 0.0
 0.0
 0.08950704825307516
 0.26356142344956424
 0.0
 1.0
 0.0
 0.0
 0.37500000001902933
 0.0
 0.0
 0.0
 0.625000000079707
 0.0
 0.34973889402514496
 0.0
 1.0
 0.2744144555289887
 0.2720945792179139
 0.0
 0.3750000000231144
 0.0
 1.0
 0.5536137413309073
 0.639345386575267
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36065461347175287
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7255855445121185
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6502611060179422
 0.0
 0.0
 0.7262709549304892
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4463862587056053
 0.0
 0.0
 0.26339837258166793
 0.0
 0.0
 1.0



=====Finished running Instance #898=====




