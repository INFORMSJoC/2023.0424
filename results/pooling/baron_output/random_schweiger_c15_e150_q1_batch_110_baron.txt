===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -190.899
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -371.507
 Preprocessing found feasible solution with value -622.054
 Preprocessing found feasible solution with value -622.054
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            11.50     -646.431         -622.458       
          1             1            13.90     -646.415         -622.458       
         22+            5            43.80     -645.998         -622.458       
       1421            12            73.71     -645.998         -622.458       
       4513            17           103.61     -645.998         -622.458       
       8000            12           133.51     -645.998         -622.458       
      11548            15           163.40     -645.998         -622.458       
      14755            13           193.30     -645.998         -622.458       
      15976            15           223.20     -645.998         -622.458       
      16200+           10           253.10     -645.998         -622.458       
      17642            14           282.99     -645.998         -622.458       
      18547+            8           312.89     -645.998         -622.458       
      18709+            6           342.79     -645.998         -622.458       
      18822+            5           372.70     -645.998         -622.458       
      21548+            6           402.59     -645.998         -622.458       
      21867+            6           432.49     -645.538         -622.458       
      24039            14           462.39     -645.538         -622.458       
      27599            17           492.28     -645.538         -622.458       
      31488            13           522.18     -645.538         -622.458       
*     34471            22           544.25     -645.538         -622.521       
*     34626            16           545.03     -645.538         -622.583       
*     34916            14           546.87     -645.538         -622.646       
*     35087             8           548.71     -645.538         -624.582       
*     38046+           14           574.47     -645.538         -624.947       
*     38051+           13           575.08     -645.538         -625.010       
*     38051+           13           575.08     -645.538         -625.072       
*     38051+           13           575.26     -645.538         -625.135       
*     38051+           13           575.27     -645.538         -625.198       
*     38051+           13           575.28     -645.538         -625.260       
*     38051+           12           575.29     -645.538         -625.323       
*     38056+           11           576.74     -645.538         -625.385       
*     38056+           11           576.84     -645.538         -625.448       
*     38056+           11           576.85     -645.538         -625.510       
*     38060+           10           580.47     -645.538         -625.573       
*     38060+           10           580.66     -645.538         -625.635       
*     38064+           11           581.52     -645.538         -625.698       
*     38064+           11           581.53     -645.538         -625.760       
*     38064+           11           581.55     -645.538         -625.823       
*     38064+           10           581.59     -645.538         -625.886       
      38101+            2           611.48     -645.538         -625.886       
      40195+            4           641.37     -633.633         -625.886       
      40209             0           654.40     -625.948         -625.886       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   656.93
 Total CPU time used:               654.57

 Total no. of BaR iterations:   40209
 Best solution found at node:   38064
 Max. no. of nodes in memory:      50
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -631.286
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.286
 Preprocessing found feasible solution with value -631.286
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.16     -640.282         -631.286       
         21             0            42.71     -631.349         -631.286       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    43.01
 Total CPU time used:                42.83

 Total no. of BaR iterations:      21
 Best solution found at node:       1
 Max. no. of nodes in memory:       4
 
 All done
===========================================================================



*****Running Instance #219*****


objective value: -625.885638949
objective bound: -625.948233772
BARON solution time: 656.93

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2792431478963862
 1.320352597870685
 0.0
 0.7207568521036138
 0.7439189208658427
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1084681520712196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0715187423927264
 0.0
 0.25093586329428375
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8753019411840297
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6939117129474522
 2.081735138842357
 0.0
 0.5283190304223776
 1.5849570912671331
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.77776925663017
 2.3333077698905096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9663629939232528
 0.8098956583866934
 0.1889106659321203
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.380943475301658
 2.0542512934639063
 0.0
 0.0
 0.0
 0.4087566120787196
 0.15604861915571622
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5911492522069927
 0.29557462610349633
 0.0
 0.0
 1.4088507477930072
 0.7044253738965036
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7350483598576036
 0.0
 0.0
 0.0
 0.20422229952297943
 0.41986996470031657
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7957777004770206
 1.0
 0.20422229952297943
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.487531637985585
 0.7437658189927925
 0.0
 0.5124683618515885
 0.2562341810072076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4161820227658505
 0.5146112119733922
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.958389739876662
 4.687309548313778
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.26495164014239636
 1.4351947687609066
 0.0
 0.041610260123338
 0.0
 1.583817976908855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2348030361983617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5648052312344355
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6408593759191006
 0.0
 0.21029991261962255
 0.19010434161330658
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7651969638016383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4853887872449918
 0.9284812576072737
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12469805881597018
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06941912663170467
 0.0
 1.7490641367057163
 0.0
 0.033637006076747224
 0.0
 0.0
 3.7468178153313527
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2312974569783774
 0.0
 0.9307932347392427
 0.0
 0.0
 0.0
 0.7687025428587961
 0.0
 3.0
 0.0
 0.0
 2.775646851789809
 0.0
 0.0
 0.0
 7.435194768765564
 0.0
 0.0
 0.0
 3.0
 0.8867238783104889
 2.113276121689511
 0.0
 0.5648052312344358
 0.0
 2.3591406240809
 0.0
 2.599595745767071
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4646757729694566
 0.0
 0.0
 0.0
 2.8753019411840297
 0.0
 0.0
 2.113276121689511
 0.0
 2.9651693182420664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3224546056870101
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.1110770265206797
 1.1084681520712196
 0.0
 7.645699288190441
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.958389739876662
 4.687309548313778
 0.0
 1.0
 0.41618202309114505
 0.5146112127550082
 0.0
 0.0
 2.0
 1.0
 0.0
 1.7957777004770206
 1.0
 0.20422229952297943
 1.7350483598576036
 0.0
 0.0
 0.0
 0.20422229952297943
 0.41986996470031657
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 5.7897000873803774
 2.2102999126196226
 0.0
 0.0
 1.9663629939232528
 0.8098956583866934
 0.1889106659321203
 2.0
 6.0
 0.0
 1.8753019411840297
 1.0
 0.0
 0.0
 1.0715187423927262
 0.0
 0.25093586329428375
 0.0
 0.0
 1.1084681521632425
 0.0
 0.0
 0.0
 3.0
 2.0
 2.0642715187365277
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7437658189927925
 0.0
 0.9999999992183839
 0.0
 0.0
 0.0
 0.2562341810072076
 0.0
 1.0
 0.0
 0.0
 0.3469558564737261
 0.0
 0.0
 0.0
 0.9293993460956957
 0.0
 0.0
 0.0
 1.0
 0.29557462610349633
 0.26415951521118886
 0.0
 0.07060065390430426
 0.0
 1.0
 0.0
 0.6396215739481931
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3603784260518069
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7044253738965036
 0.0
 0.9999999999999999
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.388884628315085
 0.999999999916982
 0.0
 1.0



=====Finished running Instance #219=====




*****Running Instance #220*****


objective value: -631.28620808
objective bound: -631.349343001
BARON solution time: 43.0

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.182408075133616
 1.8175919250759465
 0.0
 0.8175919251197682
 1.256798318919933
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003386138
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.828661484450554
 0.7951642874719592
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1713385163868684
 0.6103844004428178
 0.10900148894846273
 0.3604900829246601
 0.0
 0.0
 0.0
 0.0
 0.8929767633640456
 2.9532556901998404
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7535198524109015
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16222993600835484
 0.48668980799354483
 0.0
 0.7500000000696946
 2.250000000254717
 0.0
 0.5139203807951398
 1.5417611423989006
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5738496834083989
 1.7215490502466078
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9972685934172907
 0.0027314064344087013
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.596690360099715
 1.530137547500061
 0.0
 0.002092572206344982
 0.0
 1.4033096409778814
 0.46713104521818094
 0.0
 0.000638835023067738
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1517997451595937
 0.0
 0.6295456515905296
 0.31477282574120274
 0.0
 0.0
 1.3704543486698038
 0.685227174215003
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.3110143647102717
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.688985636246493
 1.0
 0.3110143639661765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.556879163179035
 0.7784395812423304
 0.0
 0.44312083723519663
 0.22156041852032946
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6603575518239216
 0.7854823727747142
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9640571718810291
 4.283436949621034
 0.0
 0.747732692104434
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.6513084014336918
 0.0
 1.035942828484528
 0.0
 1.3396424484612552
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2073282818744048
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3486915993738716
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.688985635251057
 0.0
 0.0
 0.0
 1.8482002550787178
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7926717184894752
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2145176273555761
 0.9980217479762425
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24648014844605903
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25226730842406536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.9228783507495697
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.335318744640232
 3.623825771882902
 1.4458399244042581
 0.0
 0.0
 0.6489197440051738
 0.6646812558182592
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.128920479642839
 0.0
 0.4694915718624801
 0.0
 3.0
 0.9443184773317324
 2.0556815231522223
 0.0
 1.8710795211825206
 0.0
 2.3110143655234734
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0743902439939665
 0.0
 0.0
 0.0
 2.7535198524911233
 0.0
 0.0
 2.055681522884807
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.846232453491966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15179974507013716
 0.0
 0.0
 2.295398733605516
 2.7817229167972313
 0.0
 5.995226813574058
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.9640571718108853
 4.283436949284665
 0.0
 0.7477326920517352
 0.6603575519229343
 0.7854823728928307
 0.0
 0.0
 2.0
 0.9999999996540851
 0.0
 1.6889856360915194
 1.0
 0.3110143639402397
 2.0
 0.0
 0.0
 0.0
 0.31101436468340615
 0.0
 0.0
 2.0
 0.9999999999242046
 0.15179974530327875
 0.0
 0.0
 6.0
 1.9972685925576883
 0.0
 0.0027314072357975437
 2.0
 0.9972685934089334
 0.0027314064375060713
 2.0
 6.0
 0.0
 1.7535198522305542
 0.9999999999952052
 0.0
 0.0
 1.0019782523044884
 3.313745773104107
 0.0
 0.0
 5.000000000609049
 1.4055486878540544
 1.999999999995609
 0.0
 0.0
 1.0000000002606764
 2.0
 3.0743902438625472
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7784395815183772
 0.5657322968212491
 0.9999999998481126
 0.0
 0.0
 0.08111496799027812
 0.2215604185946296
 0.0
 1.0
 0.0
 0.0
 0.3750000000151192
 0.0
 0.0
 0.0
 0.7661150599425987
 0.0
 0.108786282234049
 0.0
 1.0
 0.31477282576444304
 0.2569601903798921
 0.0
 0.23388494013799707
 0.0
 1.0
 0.0
 0.5912040375175139
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40879596252588446
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6852271742707565
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8912137177721837
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999990526341
 0.0
 0.0
 0.2869248416859432
 0.4342677032245256
 0.0
 1.0



=====Finished running Instance #220=====




