===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.32
 Total CPU time used:                 0.30

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -207.646
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -617.930
 Preprocessing found feasible solution with value -628.465
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            24.42     -639.005         -628.465       
*         5             2            33.78     -631.557         -628.480       
         33+            3            63.67     -631.413         -628.480       
        156+            7            93.57     -630.849         -628.480       
        236+            4           123.46     -629.601         -628.480       
        243             0           125.15     -628.543         -628.480       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   125.82
 Total CPU time used:               125.22

 Total no. of BaR iterations:     243
 Best solution found at node:      10
 Max. no. of nodes in memory:      13
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -206.717
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -546.706
 Preprocessing found feasible solution with value -621.009
 Preprocessing found feasible solution with value -621.009
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            10.64     -646.870         -626.321       
*         1             1            13.22     -644.675         -626.621       
          1             1            20.99     -644.133         -626.621       
         21             3            51.36     -643.784         -626.621       
       1331             9            81.25     -643.784         -626.621       
       4097            10           111.14     -643.784         -626.621       
       8070             9           141.04     -643.784         -626.621       
      10703            14           170.92     -643.784         -626.621       
      14780            12           200.81     -643.784         -626.621       
      19076            13           230.70     -643.784         -626.621       
      23112            10           260.57     -643.784         -626.621       
      27520             9           290.46     -643.784         -626.621       
      31242            12           320.35     -643.784         -626.621       
      31799+            6           350.23     -643.087         -626.621       
      31866+            5           380.12     -643.087         -626.621       
      31906+            6           410.02     -643.087         -626.621       
      31943+            9           439.92     -639.537         -626.621       
      32047+            6           469.81     -639.537         -626.621       
      35178             8           499.70     -639.537         -626.621       
      38999            13           529.59     -639.537         -626.621       
      39197+            6           559.49     -639.537         -626.621       
      39228             5           589.37     -639.537         -626.621       
      39311+            6           619.28     -639.537         -626.621       
      39348+            4           649.17     -639.537         -626.621       
      41990            10           679.05     -636.727         -626.621       
      45557            10           708.93     -636.727         -626.621       
      49350             9           738.82     -636.727         -626.621       
      52625            11           768.71     -635.384         -626.621       
      56161+            6           798.59     -635.384         -626.621       
      56399+            6           828.49     -635.384         -626.621       
      58964            12           858.37     -635.384         -626.621       
      63477            13           888.26     -635.384         -626.621       
      68152            15           918.14     -635.384         -626.621       
      68420+            8           948.02     -635.384         -626.621       
      69480            13           977.91     -635.384         -626.621       
      73314            10          1007.79     -635.384         -626.621       
      73456+            7          1037.71     -635.384         -626.621       
      73600+            6          1067.61     -635.384         -626.621       
      76854            14          1097.49     -635.384         -626.621       
      80847             8          1127.38     -635.384         -626.621       
      84858             8          1157.27     -635.384         -626.621       
      88554            16          1187.15     -635.384         -626.621       
      92404            16          1217.04     -635.384         -626.621       
      96204            10          1246.93     -635.384         -626.621       
      99545             5          1276.82     -635.384         -626.621       
     103325            12          1306.70     -635.384         -626.621       
     106875             9          1336.58     -635.384         -626.621       
     110931            10          1366.47     -635.384         -626.621       
     112521+            4          1396.36     -635.384         -626.621       
     114702             9          1426.25     -635.095         -626.621       
     117908+            5          1456.15     -635.095         -626.621       
     117990+            4          1486.04     -633.455         -626.621       
     121238            12          1515.94     -633.455         -626.621       
     121279+            7          1545.84     -633.455         -626.621       
     121363+            6          1575.73     -633.455         -626.621       
     121389+            3          1605.64     -633.455         -626.621       
     121447+            4          1635.52     -632.710         -626.621       
     121547+            6          1665.41     -632.237         -626.621       
     121695             8          1695.31     -632.237         -626.621       
     121812+            3          1725.20     -632.237         -626.621       
     121899+            3          1755.10     -629.366         -626.621       
     121977+            3          1785.00     -628.948         -626.621       
     121993             0          1794.53     -626.683         -626.621       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1801.75
 Total CPU time used:              1794.60

 Total no. of BaR iterations:  121993
 Best solution found at node:       2
 Max. no. of nodes in memory:      20
 
 All done
===========================================================================



*****Running Instance #385*****


objective value: -628.480070955
objective bound: -628.542925243
BARON solution time: 125.81

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5977748795578153
 0.0
 0.0
 0.40222512067178157
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9653552764532516
 0.0
 0.0
 1.034644724038536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6265178420627174
 0.18955544827488713
 0.0
 0.0
 0.0
 0.0
 4.338837435082461
 1.3127324072550075
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0252695239809406
 0.0
 0.0346447240625682
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8519852970227253
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2109209472560409
 0.6327628417300065
 0.0
 0.7500000001124971
 2.25000000021047
 0.0
 0.5458918657953299
 1.6376755972809558
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4931871871310075
 1.4795615612940847
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9727487486843691
 0.8363083166843998
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.311322147506302
 2.252211025476295
 0.0
 0.0
 0.0
 1.4501444169509483
 0.9863224110797286
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.544288358324318
 0.27214417911622035
 0.0
 0.0
 1.4557116419368736
 0.7278558208455729
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.3291313477501844
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6708686532251327
 1.0
 0.3291313469746825
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5346012591111116
 0.7673006291724712
 0.0
 0.4653987412815186
 0.23269937052458148
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25601485830255427
 0.6404024012313639
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6307910796385845
 4.168580798989962
 0.0
 0.7973540178114267
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4912383674241183
 0.0
 1.3692089207038285
 0.0
 1.7439851419763723
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22639206758736385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5087616334352303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6708686522643413
 0.0
 1.2385334368551366
 0.16369168407578158
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7736079328008533
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3595975987570009
 0.9747304763461198
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1480147038562261
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2026459827357729
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.027251252152615472
 0.0
 0.0
 6.0
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3019018885324396
 0.8160732903266734
 0.8964172593364911
 0.0
 0.0
 0.8436837889756187
 0.6980981118815711
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.563533172784329
 0.0
 0.0
 0.0
 3.0
 0.8164325374405383
 2.1835674630524875
 0.0
 2.4364668279450994
 0.0
 2.3291313485271203
 0.0
 1.5977748794559172
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40222512064613064
 0.0
 0.0
 0.0
 2.8519852970280217
 0.0
 0.0
 2.1835674627824466
 0.0
 2.8090570652795455
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.059914247975078
 0.0
 0.0
 5.651569842262071
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.972748748405616
 0.0
 0.0
 5.596725896376838
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6307910795936474
 4.168580798687841
 0.0
 0.7973540177544054
 0.2560148584180306
 0.6404024015202343
 0.0
 0.0
 2.0
 0.9999999995993463
 0.0
 1.6708686530637311
 1.0
 0.3291313469427452
 2.0
 0.0
 0.0
 0.0
 0.32913134772735947
 0.0
 0.0
 2.0
 0.9999999999295232
 0.0
 0.0
 0.0
 4.761466564109178
 3.2385334363192286
 0.0
 0.0
 1.9727487484886694
 0.8363083166010791
 0.0
 2.0
 6.0
 0.0
 1.851985296838212
 0.9999999999975185
 0.0
 0.0
 1.025269523946542
 0.0
 0.03464472406140582
 0.0
 4.965355276919994
 1.5022878554619186
 1.9653552763192081
 0.0
 0.0
 1.0346447239678604
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7673006294798927
 0.126177847731236
 0.9999999995489073
 0.0
 0.0
 0.10546047361780478
 0.232699370617813
 0.0
 1.0
 0.0
 0.0
 0.3750000000221617
 0.0
 0.0
 0.0
 0.6954416465856096
 0.0
 0.0
 0.0
 1.0
 0.2721441791354002
 0.27294593286969776
 0.0
 0.30455835348746857
 0.0
 1.0
 0.06783754078813695
 0.7988874397117804
 0.0
 0.1406035491383861
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20111256031899205
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.72785582089687
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.8738221523141081
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.791558910073477
 0.0
 0.0
 0.2465935935392214
 0.0
 0.0
 1.0



=====Finished running Instance #385=====




*****Running Instance #386*****


objective value: -626.620822627
objective bound: -626.683490974
BARON solution time: 1801.74

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.8848357184063448
 1.1712774548323295
 0.0
 1.001185679570905
 1.3252925827795623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002902871
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4016487383879317
 1.4609435002525955
 0.4749173614803462
 0.0
 0.0
 0.0
 0.9729723143329351
 3.539056500601818
 1.1504615853420683
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20211346595889876
 0.5433000690941033
 0.0
 0.0
 0.0
 0.0
 0.7123440512465621
 1.9148480306615283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7033873624265611
 2.110162087169644
 0.0
 0.5296914240427073
 1.5890742720358644
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.766921213836863
 2.300763641394158
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9860465418216546
 0.013953458292676973
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.858825682419221
 2.807859644833141
 0.0
 0.0
 0.0
 0.21124095066909224
 0.12207372305339995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5874895363202076
 0.29374476811264016
 0.0
 0.0
 1.4125104639410382
 0.7062552318564292
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9153804821935692
 0.0
 0.0
 0.0
 0.4727009843797965
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.527299016609663
 1.0
 0.47270098358672447
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3347032802609153
 0.5912878326556682
 0.07606380737122205
 0.6652967201270809
 0.2947335647816881
 0.037914795230593976
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1164711242970788
 0.6236607206309929
 0.0
 0.0
 0.07028285938404893
 0.3763392771880186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3993961847273212
 3.9019200711525968
 0.0
 0.8303351803312107
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0846195185656766
 0.29206427402449453
 0.0
 1.6006038155993425
 0.0
 1.8132460166584472
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3264782620616402
 0.0
 0.36991491557311323
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3333146740649455
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6119185335988538
 0.0
 0.9299333682503474
 0.013953458902174082
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6735217382974755
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0855424831148863
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11397860314126267
 0.0
 0.16966482023082674
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.119561589597795
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.7401318448064621
 0.0
 2.0020549202878057
 2.3375096001208733
 0.4466221364995612
 0.0
 0.0
 0.0
 0.9979450801393629
 0.0
 3.0
 0.0
 0.0
 2.8135494495595963
 0.0
 0.0
 0.0
 7.666685326981633
 0.0
 0.7454135350326714
 0.0
 3.0
 0.8812343044328477
 2.118765696056229
 0.0
 0.333314673712043
 0.0
 2.388081467191053
 0.0
 2.0561131731915756
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.3264782622972837
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1187656957974674
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.627192081834772
 0.0
 0.0
 5.6624904002768215
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.067684855189131
 0.0
 0.0
 5.131651436144723
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.3993961846975327
 3.9019200707836537
 0.0
 0.8303351802601557
 0.18675398373311278
 0.9999999981070798
 0.0
 0.0
 2.0
 0.8860213973521301
 0.11397860259050152
 1.527299016460683
 1.0
 0.47270098354065104
 1.9153804820135336
 0.0
 0.0
 0.0
 0.47270098433290214
 0.0
 0.0
 2.0
 0.999999999936787
 0.0
 0.0
 0.0
 5.070066632715155
 2.9299333676706567
 0.0
 0.0
 2.0
 0.9860465417600254
 0.013953458291693506
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9144575171763162
 2.4581480996794145
 0.0
 1.3746210526722922
 5.000000000677173
 1.625378946764957
 2.0
 0.0
 0.0
 1.0000000002125087
 1.8860213978938924
 2.496570037501008
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.6236607218105475
 0.0
 0.6673516400648666
 0.2921887000109332
 0.3763392778994137
 0.0
 0.0
 0.0
 0.3326483600308424
 0.0
 1.0
 0.0
 0.0
 0.35169368118250044
 0.0
 0.0
 0.0
 0.9583356658603223
 0.0
 0.22102007164041823
 0.0
 1.0
 0.29374476813123335
 0.26484571199556234
 0.0
 0.04166433421331992
 0.0
 1.0
 0.40064567424103636
 0.4691546550822822
 0.0
 0.18055434396634285
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5308453449623055
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7062552319010769
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7789799283904241
 0.0
 0.0
 0.7078113000244948
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41879998179262085
 0.0
 0.0
 0.3834606068858547
 0.0
 0.0
 1.0



=====Finished running Instance #386=====




