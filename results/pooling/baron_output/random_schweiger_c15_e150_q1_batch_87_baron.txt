===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.32
 Total CPU time used:                 0.30

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -160.408
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.829
 Preprocessing found feasible solution with value -631.829
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.13     -645.337         -631.829       
         29+            4            46.04     -642.036         -631.829       
        104+            6            75.94     -642.036         -631.829       
        186             6           105.85     -642.036         -631.829       
        276             7           135.76     -641.621         -631.829       
        443             4           165.65     -638.685         -631.829       
        487             0           195.62     -631.893         -631.829       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   196.46
 Total CPU time used:               195.74

 Total no. of BaR iterations:     487
 Best solution found at node:      36
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -620.332
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -620.899
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            13.09     -645.228         -626.566       
          1             1            23.89     -641.559         -626.566       
         21+            5            54.42     -639.208         -626.566       
       1343            12            84.32     -639.208         -626.566       
       1886+           10           114.24     -639.208         -626.566       
       2015+            9           144.13     -639.208         -626.566       
       2347+           10           174.03     -639.208         -626.566       
       2433+            6           203.94     -639.208         -626.566       
       2572+           10           233.85     -639.208         -626.566       
       4510            11           263.74     -639.208         -626.566       
       8339            14           293.64     -639.208         -626.566       
      12667             9           323.53     -639.208         -626.566       
      13537+            6           353.43     -639.208         -626.566       
      13822            11           383.33     -639.208         -626.566       
      17719            10           413.22     -639.208         -626.566       
      21639             6           443.13     -639.208         -626.566       
      21846+            6           473.02     -639.208         -626.566       
      22114+            9           502.92     -639.208         -626.566       
      22234+            5           532.84     -639.208         -626.566       
      22389+            5           562.73     -638.791         -626.566       
      22673+            9           592.63     -638.791         -626.566       
      25237            12           622.53     -638.791         -626.566       
      28783            10           652.42     -638.791         -626.566       
      28891+            5           682.33     -638.791         -626.566       
      29078+            4           712.23     -638.791         -626.566       
      29203             6           742.14     -638.791         -626.566       
      32466            11           772.03     -638.791         -626.566       
      33952            19           801.92     -638.791         -626.566       
      35255+           12           831.83     -638.791         -626.566       
      35426+            4           861.73     -638.791         -626.566       
      35568+            4           891.63     -638.791         -626.566       
      35721+            4           921.53     -637.513         -626.566       
      35884+           11           951.43     -637.513         -626.566       
      36090+            5           981.34     -637.513         -626.566       
      36225             8          1011.24     -637.513         -626.566       
      36445+            7          1041.14     -637.513         -626.566       
      36701             9          1071.03     -637.513         -626.566       
      38378+            7          1100.92     -637.513         -626.566       
      38589+            6          1130.82     -637.513         -626.566       
      38827+            4          1160.71     -637.513         -626.566       
      39052             9          1190.62     -636.576         -626.566       
      39223+           10          1220.53     -636.576         -626.566       
      39333+            6          1250.42     -636.576         -626.566       
      40344            14          1280.32     -636.576         -626.566       
      41584+            7          1310.21     -636.576         -626.566       
      42044+           13          1340.11     -636.576         -626.566       
      42154+            8          1370.00     -636.576         -626.566       
      42471+           10          1399.90     -636.576         -626.566       
      42831             7          1429.81     -636.576         -626.566       
      43041+            4          1459.70     -636.410         -626.566       
      46181             8          1489.59     -636.410         -626.566       
      47893+            7          1519.49     -636.410         -626.566       
      50280             4          1549.38     -636.410         -626.566       
      54027             7          1579.27     -635.827         -626.566       
      57470            10          1609.16     -635.827         -626.566       
      60991             7          1639.05     -635.827         -626.566       
      64599             8          1668.94     -635.827         -626.566       
      67590+           10          1698.85     -635.827         -626.566       
      69528            11          1728.74     -635.827         -626.566       
      73014            11          1758.64     -635.827         -626.566       
      76618            11          1788.53     -635.827         -626.566       
      79806+            6          1818.44     -635.827         -626.566       
      79879+            4          1848.33     -631.548         -626.566       
      80053             0          1857.09     -626.629         -626.566       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1864.02
 Total CPU time used:              1857.22

 Total no. of BaR iterations:   80053
 Best solution found at node:   36292
 Max. no. of nodes in memory:      23
 
 All done
===========================================================================



*****Running Instance #173*****


objective value: -631.829388579
objective bound: -631.892577825
BARON solution time: 196.46

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.164012832728451
 1.8359871674978672
 0.0
 0.8359871675367815
 1.3185951809419951
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003124743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4559566068264664
 1.47357396369111
 0.0
 0.0
 0.0
 0.0
 1.1562794605792035
 0.6937676761573678
 0.0
 0.0
 0.0
 0.0
 1.3877639333820462
 0.8326583598005237
 0.2303483824636806
 0.8508650584648022
 0.0
 0.0
 0.0
 0.0
 0.7335614099913008
 2.7096425220152436
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6848249307158925
 2.0544747921857707
 0.0
 0.5213835259159273
 1.5641505777607623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7937915436470947
 2.3813746309959196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8669014165666762
 0.7589938799681252
 0.3741047037399869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.176423393981705
 1.224383864450887
 0.0
 0.1677572667206408
 0.0
 1.8235766071317867
 0.5346100150278028
 0.0
 0.07324885397833018
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23874862296017405
 0.0
 0.609643931256515
 0.3048219655882747
 0.0
 0.0
 1.390356069009229
 0.6951780344059978
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.3195014588515391
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.680498542089628
 1.0
 0.3195014581385069
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5496135243099312
 0.7748067618290884
 0.0
 0.4503864761190998
 0.2251932379682222
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20744733535907567
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7925526639411725
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.6804985435771047
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.4962293039059709
 0.0
 0.0
 0.0
 1.9766389081232394
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2215527488536943
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.023361092133377857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5037706968831638
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6804985411386898
 0.0
 0.0
 0.0
 1.7612513773209622
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7784472515145542
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0360902078525014
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13309858425751414
 0.0
 0.0
 2.4713129490392474
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3244202863523666
 3.9295305705175765
 0.20744733536926194
 0.0
 0.0
 0.0
 0.6755797141525949
 0.0
 3.0
 0.0
 0.0
 2.739299722901663
 0.0
 0.0
 0.0
 5.568564525153233
 0.0
 1.0812134409284828
 0.7925526637903892
 3.0
 0.9144658968447896
 2.0855341036766895
 0.0
 2.4314354761379198
 0.0
 2.319501459725715
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1545823484787765
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0855341034152266
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4432039320065444
 0.0
 0.0
 1.8500471367365714
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23874862296017405
 0.0
 0.0
 3.175166174643014
 2.22042229318257
 0.0
 5.680498543577105
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.680498543391059
 0.0
 1.0
 0.0
 1.0
 0.0
 0.0
 2.0
 0.9999999996842732
 0.0
 1.6804985419537795
 1.0
 0.3195014581239217
 2.0
 0.0
 0.0
 0.0
 0.3195014588191365
 0.0
 0.0
 2.0
 0.9999999999619551
 0.23874862306310035
 0.0
 0.0
 6.0
 1.758993879345454
 0.0
 0.24100612071523492
 1.866901416416133
 0.7589938799115431
 0.3741047037160639
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9639097924289511
 3.560507580388857
 0.0
 0.0
 5.000000000632693
 2.999999999561661
 2.0
 0.0
 0.0
 1.000000000243349
 2.0
 3.1545823482973057
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7748067620868944
 0.49119132130440407
 0.2074473353398613
 0.0
 0.0
 0.0
 0.2251932380355776
 0.0
 1.0
 0.0
 0.0
 0.34241246533897474
 0.0
 0.0
 0.0
 0.6960705656037002
 0.0
 0.23897296642532945
 0.7925526638759269
 1.0
 0.30482196559754476
 0.26069176294002594
 0.0
 0.3039294344934459
 0.0
 1.0
 0.0
 0.5820064163134097
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4179935837318999
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.695178034442411
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7610270336006161
 0.0
 0.0
 0.23125589208684347
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999995573357
 0.0
 0.0
 0.3968957718038366
 0.27755278664189414
 0.0
 1.0



=====Finished running Instance #173=====




*****Running Instance #174*****


objective value: -626.566283189
objective bound: -626.628946077
BARON solution time: 1864.02

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.296079306366989
 0.0
 0.0
 0.7039206938738621
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002921043
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2149993349507138
 0.5031583560546457
 0.0
 0.0
 0.0
 0.0
 3.7850006659579924
 1.5674532964550743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14182878820663783
 0.4122785056131543
 0.0
 0.0
 0.0
 0.0
 0.8756777167758858
 2.5454853350731277
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7430043741894237
 2.2290131224934933
 0.0
 0.5780606334118343
 1.7341819001690002
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6789349926961941
 2.0368049780167796
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.176537724680205
 0.3305245416705394
 1.364764780179498
 0.05251023579948449
 0.014751691558272611
 0.060911026407895835
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.293016527184743
 1.4310055087438691
 0.0
 0.0
 0.0
 1.706983473917474
 0.5689944911823845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0491969264990317
 0.0
 0.0
 0.0
 0.47690406158956666
 0.0
 0.458504977984724
 0.22925248895244002
 0.0
 0.0
 1.5414950222753074
 0.7707475110038107
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.727698739551137
 0.0
 0.0
 0.0
 0.2300650999716395
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.769934901011553
 1.0
 0.2300650991891033
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5314365008687907
 0.7657182500522203
 0.0
 0.46856349953331144
 0.2342817496483668
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3064282124413792
 0.7427973944400573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8290481407090218
 3.6993232498479256
 0.0
 0.97020292800313
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.2723012611751468
 1.6201350923683195
 0.0
 1.1709518596567472
 0.0
 1.6935717879107137
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2020299485298167
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37986490846221266
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.042236160628822
 0.0
 0.0
 0.6547237673031933
 0.47389901237431586
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7979700518540322
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25720260573851766
 0.9824934953487819
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.029797072565250327
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6237900051079337
 0.0
 0.0
 0.0
 0.0
 0.14716203507959028
 0.0
 0.0
 4.574324194660784
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.297154751167192
 1.7181576909883665
 1.0492256066852006
 0.0
 0.0
 0.0
 0.702845249255654
 0.0
 3.0
 0.0
 0.0
 2.9720174966393023
 0.0
 0.0
 0.0
 5.724022035797018
 0.0
 0.5541072938068865
 0.0
 3.0
 0.6877574669371641
 2.312242533550613
 0.0
 2.275977965073459
 0.0
 1.9577638401589608
 1.0491969264345091
 1.2960793062538234
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.703920693813552
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.312242533279118
 0.0
 2.8718270465302425
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4211630517679996
 0.0
 0.0
 5.352453962367021
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1281729537656529
 0.4769040615602749
 0.0
 0.0
 2.715739970674337
 0.0
 0.0
 5.498574318492731
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8290481406412591
 3.699323249505106
 0.0
 0.9702029279219755
 0.30642821248274205
 0.7427973945432749
 0.0
 0.0
 2.0
 0.9999999996011844
 0.0
 1.7699349008413077
 1.0
 0.23006509916693232
 1.7276987394044088
 0.0
 0.0
 0.0
 0.23006509994916058
 0.0
 0.0
 2.0
 0.9999999999238944
 1.5261009880185323
 0.0
 0.0
 6.0
 1.999999999761822
 0.0
 0.0
 1.229047960399789
 0.34527623320564754
 1.4256758064949775
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0175065049431202
 2.957763840571981
 0.0
 0.0
 5.000000000675742
 2.0706116524210696
 2.0
 0.0
 0.0
 1.000000000213618
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7657182503583518
 0.24299986695703074
 0.9999999998585559
 0.0
 0.0
 0.0
 0.23428174974335791
 0.0
 1.0
 0.0
 0.0
 0.3715021870670423
 0.0
 0.0
 0.0
 0.715502754461792
 0.0
 0.13938858131871767
 0.0
 1.0
 0.22925248897018877
 0.28903031668188156
 0.0
 0.2844972456236076
 0.0
 1.0
 0.6875016363506185
 0.6480396531280713
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35196034690664896
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.770747511061708
 0.0
 0.9572756821444784
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8606114187199105
 0.0
 0.0
 0.7570001330890201
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04272431791996812
 0.31249836369529954
 0.0
 0.0
 0.3394674963217792
 0.0
 0.0
 1.0



=====Finished running Instance #174=====




