===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -185.524
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -346.784
 Preprocessing found feasible solution with value -625.292
 Preprocessing found feasible solution with value -626.384
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            26.29     -635.906         -626.384       
         16+            4            56.19     -634.637         -626.384       
         82+            7            86.11     -634.637         -626.384       
        123+            3           116.02     -633.307         -626.384       
        309+            6           145.93     -629.427         -626.384       
        373             0           159.08     -626.447         -626.384       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   159.82
 Total CPU time used:               159.22

 Total no. of BaR iterations:     373
 Best solution found at node:      30
 Max. no. of nodes in memory:      12
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -155.609
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -605.490
 Preprocessing found feasible solution with value -605.490
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             9.03     -636.193         -615.606       
          1             1            21.35     -623.045         -615.606       
         21+            3            51.26     -621.189         -615.606       
        168+            5            81.15     -621.151         -615.606       
        287             6           111.04     -619.972         -615.606       
        375             0           134.20     -615.667         -615.606       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   134.78
 Total CPU time used:               134.28

 Total no. of BaR iterations:     375
 Best solution found at node:       1
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================



*****Running Instance #889*****


objective value: -626.384026927
objective bound: -626.446671527
BARON solution time: 159.81

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1555943631283634
 1.1957393840883277
 0.0
 0.8444056367273387
 0.8737400494474723
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8812966702143274
 0.0
 0.0
 1.1187033298263422
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7596587845413971
 0.2225352859477081
 0.0
 0.0
 0.0
 0.0
 4.1216378852211495
 1.2073971682949647
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2685448730450257
 0.81823734366982
 0.030663888179415188
 0.0
 0.0
 0.0
 0.7710222714650926
 2.3492506416614916
 0.08803944171580382
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999996579974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4788769619563316
 1.4366308857902412
 0.0
 0.5310573516647612
 1.593172054911576
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9900656862516662
 2.970197058632586
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999994539184
 0.9956979918578502
 0.004302006755517838
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.895958264581155
 2.4173968311207465
 0.0
 0.0
 0.0
 0.45967749980530787
 0.22696740274011598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.015803672293568296
 0.0
 0.5838470625373565
 0.29192353107650615
 0.0
 0.0
 1.4161529375534074
 0.7080764683102843
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999990595267
 0.0
 0.0
 0.0
 0.811852219786366
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.188147780512587
 0.8864813071174941
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4826312474001102
 0.7413156227415916
 0.0
 0.5173687526570263
 0.25868437598967703
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9183417229233727
 0.969201369851893
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0739084651120516
 4.570067546636578
 0.0
 0.758582422715184
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3133550953867366
 0.0
 0.9260915352320432
 0.0
 1.0816582754197026
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24343101840546474
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999979259917
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6866449041907546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.18814777996027027
 0.0
 0.6443642355347985
 0.004302007936417334
 1.9841963176756465
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7565689817222548
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.030798628050279168
 0.9604328553311428
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24141757771844372
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11351869333949823
 3.9262185605453443
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2239468705400887
 0.9821940706738866
 1.8875430928605674
 0.0
 0.0
 0.0
 0.77605312884234
 0.0
 2.0746290877943103
 0.0
 0.0
 1.9155078478833591
 0.0
 0.0
 0.0
 7.313355096546802
 0.0
 1.1174461048942608
 0.0
 3.0
 0.8757705936138626
 2.124229406714817
 0.0
 0.6866449027620449
 0.0
 2.8118522206678076
 0.0
 2.3513337472431606
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7181456861879791
 0.0
 0.0
 0.0
 2.9999999999107088
 0.0
 0.0
 2.124229405863692
 0.0
 2.9999999980672656
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.2083123548423877
 0.0
 0.0
 5.329035054117991
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.015803672340767513
 0.0
 0.0
 3.9602627450328294
 0.0
 0.0
 6.402558434553313
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.0739084650294366
 4.57006754646387
 0.0
 0.7585824226013608
 0.9183417248541479
 0.9692013718895633
 0.0
 0.0
 2.0
 0.9999999987892263
 0.0
 1.188147780466034
 0.8864813070764622
 0.0
 2.0
 0.0
 0.0
 0.0
 0.8118522201758053
 0.0
 0.0
 2.0
 0.9999999993984974
 0.015803682578949436
 0.0
 0.0
 5.3556357650274
 2.644364234250005
 0.0
 0.0
 2.0
 0.9956979922291651
 0.004302006607229806
 2.0
 5.999999999990679
 0.0
 2.0
 0.9999999997065245
 0.0
 0.0
 1.039567144781983
 3.167487986167872
 0.1187033298565321
 0.0
 4.881296670801276
 1.4299324545261871
 1.881296670263129
 0.0
 0.0
 1.118703329884373
 1.9999999999251687
 2.0694794336080893
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7413156236600129
 0.15562643202848706
 0.9999999979036236
 0.0
 0.0
 0.0
 0.25868437632276364
 0.0
 1.0
 0.0
 0.0
 0.2394384809722135
 0.0
 0.0
 0.0
 0.9141693870578029
 0.0
 0.2583237402145134
 0.0
 1.0
 0.29192353125449017
 0.2655286758260907
 0.0
 0.0858306128328287
 0.0
 0.999999999535197
 6.078533948405013e-7
 0.5777971815865447
 0.0
 4.296031661166345e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4222028183802107
 0.0
 0.0
 0.0
 0.9999999999915162
 0.0
 0.0
 0.708076468740502
 0.0
 0.9999999996539859
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7416762595223894
 0.0
 0.0
 0.8443735677619674
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.99999934918635
 0.0
 0.0
 0.49503284311534274
 0.0
 0.0
 1.0



=====Finished running Instance #889=====




*****Running Instance #890*****


objective value: -615.605618035
objective bound: -615.667184746
BARON solution time: 134.78

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.4806878284437783
 0.0
 0.0
 0.5193121717808604
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8257336878991952
 0.16817923158380332
 0.4265240728611076
 0.06175044360258677
 0.0
 0.0
 0.0
 0.7830975094679964
 1.9860355885828522
 0.2875302624362475
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8272715090924465
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32974749728251523
 0.9892424917885444
 0.0
 0.7500000001113094
 2.250000000212318
 0.0
 0.47200549396124114
 1.416016481790444
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4482470089418621
 1.3447410267351385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4293843004287463
 0.807974001112968
 0.7626416987459623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.250178152531613
 3.02641238018484
 0.0
 0.0
 0.0
 0.42253567842123696
 0.3008737898391691
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7413186832219915
 0.3706593415398267
 0.0
 0.0
 1.2586813170388929
 0.6293406583986088
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7398458301300964
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2601541708499113
 0.9407291400186873
 0.7991166894275058
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.337143873356893
 0.6685719363332641
 0.0
 0.6628561270340709
 0.33142806334591995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4108610823685912
 0.9381909467351096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.910693505955424
 4.375149624162769
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.2765905323396636
 0.0
 1.0893064944000364
 0.0
 1.5891389180426947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.30539259252233436
 0.0
 0.1330048235417662
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7234094685324228
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26015416977425465
 0.0
 1.3272861703579566
 0.19202599955785818
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.694607407863665
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06180905358680896
 1.0487232592615783
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17272849178406358
 0.0
 0.22326188132288283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35296175919344264
 0.0
 0.0
 1.650719294057676
 0.0
 0.21765394102717117
 0.0
 0.059270860567175516
 5.104353475939797
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.0057158099103005
 0.0
 1.3490520289059844
 0.0
 0.0
 1.3189899890551162
 0.994284190489122
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.276590532464201
 0.0
 0.6564537480474977
 0.0
 3.0
 1.1119780247618183
 1.8880219757331778
 0.0
 0.7234094682368457
 0.0
 2.7398458310162432
 0.0
 1.4806878304706028
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5193121724917158
 0.0
 0.0
 0.0
 2.827271509098118
 0.0
 0.0
 1.8880219754375016
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.056663360487096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7929880356603585
 0.8257336877301098
 0.0
 6.285843130117804
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.9106935058979356
 4.375149623886578
 0.0
 1.0
 0.41086108235122143
 0.9381909466963929
 0.0
 0.0
 2.0
 0.9999999995821963
 0.0
 1.260154170725498
 0.9407291399258221
 0.7991166893486267
 2.0
 0.0
 0.0
 0.0
 0.7398458300663684
 0.0
 0.0
 2.0
 0.9999999999063137
 0.0
 0.0
 0.0
 4.672713830607934
 3.327286169778412
 0.0
 0.0
 1.4293843003375077
 0.8079740010613943
 0.7626416986972822
 2.0
 6.0
 0.0
 1.8272715089099585
 0.999999999997061
 0.0
 0.0
 0.9512767410299717
 2.412559661389483
 0.34928070603045464
 0.0
 0.0
 0.825733687858545
 0.0
 0.0
 0.0
 3.0
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6685719366125962
 0.0
 1.0
 0.0
 0.0
 0.16487374862500037
 0.3314280634843916
 0.0
 1.0
 0.0
 0.0
 0.37500000002190914
 0.0
 0.0
 0.0
 0.9095738165456309
 0.0
 0.1767931710403316
 0.0
 1.0
 0.37065934157455227
 0.2360027469551723
 0.0
 0.09042618352818256
 0.0
 1.0
 0.05029730001822726
 0.7403439141617868
 0.0
 0.12506967276315523
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2596560858693509
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6293406584575695
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8232068289821891
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8246330272186175
 0.0
 0.0
 0.22412350444629445
 1.0
 0.0
 1.0



=====Finished running Instance #890=====




