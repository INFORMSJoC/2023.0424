===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -208.825
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -585.718
 Preprocessing found feasible solution with value -619.337
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            12.95     -646.026         -630.535       
          1             1            25.84     -642.967         -630.535       
         18+            3            55.75     -640.006         -630.535       
        405             8            85.75     -636.609         -630.535       
       2150+            8           115.67     -636.609         -630.535       
       2411+           13           145.58     -636.609         -630.535       
       4985             9           175.48     -636.609         -630.535       
       6394+            9           205.38     -636.609         -630.535       
       6729+            7           235.29     -636.609         -630.535       
       7096             9           265.18     -636.366         -630.535       
      10902            13           295.07     -636.366         -630.535       
      14766            11           324.96     -636.366         -630.535       
      16204+            4           354.89     -636.366         -630.535       
      16300+            6           384.79     -634.737         -630.535       
      17061            14           414.69     -634.737         -630.535       
      20440            13           444.59     -634.737         -630.535       
      22660+            3           474.49     -634.737         -630.535       
      22978+            7           504.40     -634.299         -630.535       
      23006+            3           534.33     -634.299         -630.535       
      23175+            3           564.25     -634.299         -630.535       
      23241             0           577.88     -630.598         -630.535       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   580.16
 Total CPU time used:               578.09

 Total no. of BaR iterations:   23241
 Best solution found at node:    6930
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -226.766
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -627.774
 Preprocessing found feasible solution with value -627.955
 Preprocessing found feasible solution with value -627.955
 Preprocessing found feasible solution with value -627.955
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            25.33     -642.670         -627.955       
         16+            5            55.23     -640.653         -627.955       
         34+            4            85.12     -640.653         -627.955       
         83+            4           115.02     -640.653         -627.955       
        105+            3           144.93     -640.653         -627.955       
        171+            4           174.82     -639.287         -627.955       
        205+            3           204.75     -639.064         -627.955       
        251+            4           234.65     -633.619         -627.955       
        265+            2           264.53     -633.619         -627.955       
        303             1           294.45     -628.526         -627.955       
        305             0           294.65     -628.018         -627.955       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   295.83
 Total CPU time used:               294.72

 Total no. of BaR iterations:     305
 Best solution found at node:      87
 Max. no. of nodes in memory:      12
 
 All done
===========================================================================



*****Running Instance #953*****


objective value: -630.534700966
objective bound: -630.597760729
BARON solution time: 580.16

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1466255523723643
 1.8533744457846282
 0.0
 0.8533744440481925
 1.3793713074089573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9287700214510801
 0.0
 0.0
 1.0712299767905915
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0434570847431204
 2.9468980771407307
 0.7928228913781911
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7017542750622154
 1.9818719466737127
 0.5331957217274924
 0.08262022316147945
 0.2831064484308915
 0.005764557443274073
 0.0
 0.0
 0.0
 0.9382797860748626
 3.2151094212296583
 0.06546542138792832
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999996950182
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11515540135125357
 0.3454662041913922
 0.0
 0.7499999995935457
 2.2499999997261164
 0.0
 0.5454371779441872
 1.6363115345181616
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5894074203604611
 1.7682222618228236
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6079763039748687
 0.7982425363951157
 0.5937811584136342
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.8716571893378235
 1.7597772867115116
 0.0
 0.19744177607941554
 0.0
 0.12834281074340423
 0.03846525026839902
 0.0
 0.004315686648671307
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15521459836740978
 0.0
 0.5455008584978365
 0.2727504290975115
 0.0
 0.0
 1.454499141601455
 0.7272495704036277
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995919417
 0.0
 0.0
 0.0
 0.2964584067736698
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7035415939253695
 1.0
 0.29645840623208475
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4980513122954464
 0.7490256529094612
 0.0
 0.5019486878519908
 0.2509743428365076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1823501145916772
 0.6008225604123208
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6191351227382873e-8
 5.334814831068186e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5435874465771716
 4.377522981791435
 0.0
 0.791404868229915
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.083664891163183
 0.0
 1.4564125537035817
 0.0
 1.8176498687660911
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2327457509060011
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999980036969
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1711237485902386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.70354159281261
 0.0
 0.0
 0.0
 1.8447853998266182
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7672542489938757
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39917738361361665
 0.9790999906430373
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20859513213120467
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3296109541812788
 0.0
 0.0
 0.0
 0.0
 0.06241274156982505
 0.0
 0.0
 2.173473086768
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2470769680677614
 4.783178053262042
 0.7831726748938612
 0.0
 0.0
 0.4606216056304413
 0.7529230316520847
 0.0
 3.0
 0.0
 0.0
 2.999999999612654
 0.0
 0.0
 0.0
 7.828876252209183
 0.0
 0.371491229035645
 6.953524920878206e-8
 3.0
 0.8182512875953479
 2.181748712688637
 0.0
 0.17112374772865493
 0.0
 2.2964584078171675
 0.0
 2.9999999981678096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.23274575147466
 0.0
 0.0
 0.0
 2.9999999998678604
 0.0
 0.0
 2.1817487120050827
 0.0
 2.999999998783628
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.218854628692449
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15521459848390534
 0.0
 0.0
 2.357629682423907
 3.21682194346342
 0.0
 5.712515296729625
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5435874465508043
 4.3775229815956544
 0.0
 0.7914048681945098
 0.18235013153412732
 0.6008226162362199
 0.0
 0.0
 2.0
 0.9999999957492725
 0.0
 1.703541593818642
 0.999999999988495
 0.2964584062284105
 2.0
 0.0
 0.0
 0.0
 0.2964584068181581
 0.0
 0.0
 2.0
 0.9999999995173172
 0.15521460043611005
 0.0
 0.0
 6.0
 1.798242537025045
 0.0
 0.2017574627238989
 1.607976304646058
 0.7982425367378928
 0.5937811586735006
 1.999999999234393
 6.0
 0.0
 2.0
 0.9999999996765117
 0.0
 0.0
 1.0209000095127623
 3.498215870608709
 0.07122997884987978
 1.7452113598650019
 4.928770023958405
 1.3260186131542864
 1.9287700213725216
 0.0
 0.0
 1.071229976752923
 1.9999999964876856
 3.232745753303439
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7490256561057028
 0.5978972568846108
 0.9999999070875398
 0.0
 0.0
 0.05757770069553114
 0.25097434391432166
 0.0
 1.0
 0.0
 0.0
 0.37499999994190714
 0.0
 0.0
 0.0
 0.978609531516308
 0.0
 0.08092881025710262
 8.879183071022485e-8
 1.0
 0.27275042923445064
 0.27271858907698304
 0.0
 0.0213904684559629
 0.0
 0.9999999997878395
 0.0
 0.5733127771927565
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42668722277317306
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7272495707598924
 0.0
 0.9999999995875894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9190711894718484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.999999986671994
 0.0
 0.0
 0.2947037102937655
 0.4021027430858147
 0.0
 1.0



=====Finished running Instance #953=====




*****Running Instance #954*****


objective value: -627.955051285
objective bound: -628.017853069
BARON solution time: 295.83

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1285572333821234
 1.7688293266696
 0.0
 0.8714427665196509
 1.3658443509460232
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9378938671814208
 0.0
 0.0
 1.062106133285116
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1737527571707802
 3.0226684957346563
 1.7006762980489263
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11009334615432062
 1.915225372126865
 1.0775837311946213
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1512211118603646
 1.3435786597726065
 0.06210613334825518
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04486028707690601
 0.13458086122563925
 0.0
 0.7500000001063658
 2.250000000214612
 0.0
 0.5171242109075945
 1.5513726326371204
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.688015502180719
 2.064046506442546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3476017194636596
 0.7974943138404359
 0.8549039669742251
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.540070631779653
 1.7544551931971581
 0.0
 0.09223501695776372
 0.0
 0.4599293692628205
 0.14565256005477442
 0.0
 0.007657229661656169
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6210021046773163
 0.3105010522889913
 0.0
 0.0
 1.3789978955839228
 0.6894989476816715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.693866756443119
 0.0
 0.0
 0.0
 0.42860802274848014
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5713919782263597
 0.9980222722231066
 0.4305857498484174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.475031836318128
 0.7375159175417221
 0.0
 0.5249681640746633
 0.2624840818176198
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3672036306611433
 0.5382142060777364
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7990004474629375
 2.7911542223399084
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.3061332442486541
 1.1029147381748168
 0.0
 0.20099955296322342
 0.0
 1.6327963697329801
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23728711720988926
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6132391592776568
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8775252209851826
 0.0
 0.0
 0.10261344013920853
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7627128831694673
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46178579419849247
 0.8487788884811012
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.878788367052136
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5197628232927977
 0.0
 0.0
 0.0
 0.0
 0.13263545791509496
 0.0
 0.001977728366246963
 2.010422356619737
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2125477543499827
 4.897097550954363
 0.9054178365423119
 0.0
 0.0
 0.1794411482998539
 0.7874522460667261
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.386760841747742
 0.0
 0.0
 0.0
 3.0
 0.9315031569663077
 2.0684968435251374
 0.0
 0.6132391589639323
 0.0
 2.1224747798032357
 0.0
 2.897386559995094
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2372871174216757
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0684968432655944
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.556905904981226
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.75206200858994
 3.102902449475807
 0.0
 5.59015466980266
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.7990004473353067
 2.791154222141762
 0.0
 1.0
 0.3672036306613299
 0.5382142060780358
 0.0
 0.0
 2.0
 0.9999999992615722
 0.0
 1.5713919780724572
 0.9980222721253621
 0.43058574980624975
 1.69386675632735
 0.0
 0.0
 0.0
 0.4286080227186084
 0.0
 0.0
 2.0
 0.9999999999383693
 0.0
 0.0
 0.0
 6.0
 1.9001077531095272
 0.0
 0.09989224661331671
 1.3476017193818945
 0.7974943137920482
 0.8549039669223542
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.151221111811535
 1.3435786597156263
 0.06210613334556882
 0.28384610331469895
 4.937893867680649
 2.7782600291417845
 1.9378938670426393
 0.0
 0.0
 1.062106133208409
 1.9999999998243547
 3.134673677492734
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7375159180863207
 0.6121371938588158
 0.9999999999993198
 0.0
 0.0
 0.022430143536780654
 0.2624840820114416
 0.0
 1.0
 0.0
 0.0
 0.37500000002255895
 0.0
 0.0
 0.0
 0.9233451052060874
 0.0
 0.0
 0.0
 1.0
 0.3105010523081283
 0.2585621054292329
 0.0
 0.07665489486960363
 0.0
 1.0
 0.14240904865289686
 0.5642786167409134
 0.0
 0.22926481230854429
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43572138329838683
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6894989477241655
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6283261390385588
 0.0
 0.0
 0.3440077510613146
 0.3878628061778091
 0.0
 1.0



=====Finished running Instance #954=====




