===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -210.210
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.581
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.07     -637.562         -624.581       
         24+            4            47.97     -635.256         -624.581       
        214+            5            77.89     -635.256         -624.581       
        275+            2           107.79     -635.256         -624.581       
       1923            12           138.22     -632.861         -624.581       
       6542            10           168.11     -632.861         -624.581       
      10879            13           198.00     -632.861         -624.581       
      15634             8           227.89     -632.861         -624.581       
      20386            11           257.79     -632.861         -624.581       
      25124            10           287.68     -632.861         -624.581       
      30024            10           317.57     -632.861         -624.581       
      34887            10           347.46     -632.861         -624.581       
      39441             7           377.36     -632.861         -624.581       
      43859            11           407.25     -632.861         -624.581       
      48429            18           437.15     -632.861         -624.581       
      53106            16           467.04     -632.861         -624.581       
      55338+           10           496.94     -632.861         -624.581       
      55576+            7           526.87     -632.861         -624.581       
      55946+            7           556.79     -632.861         -624.581       
      57958+            8           586.71     -632.861         -624.581       
      58107+            8           616.61     -632.861         -624.581       
      58162             6           646.51     -629.373         -624.581       
      59058             7           676.41     -628.590         -624.581       
      62675             8           706.30     -628.590         -624.581       
      66102            13           736.20     -628.590         -624.581       
      69611             8           766.10     -628.590         -624.581       
      69859+            7           796.00     -628.590         -624.581       
      73608            10           825.89     -628.590         -624.581       
      77402            13           855.79     -628.590         -624.581       
      81214            10           885.68     -628.590         -624.581       
      84673             8           915.58     -628.590         -624.581       
      87077             4           945.49     -628.590         -624.581       
      87656            11           975.38     -627.976         -624.581       
      90921             8          1005.29     -627.976         -624.581       
      90986+            3          1035.21     -625.928         -624.581       
      90997             0          1045.44     -624.643         -624.581       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1050.66
 Total CPU time used:              1046.87

 Total no. of BaR iterations:   90997
 Best solution found at node:      24
 Max. no. of nodes in memory:      25
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -388.937
 Preprocessing found feasible solution with value -604.958
 Preprocessing found feasible solution with value -624.598
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            15.29     -639.391         -624.802       
*         1             1            16.92     -637.910         -624.806       
          1             1            21.03     -636.890         -624.806       
         18+            2            50.93     -630.395         -624.806       
        125             8            80.84     -629.051         -624.806       
        301+            6           110.76     -629.051         -624.806       
        419+            3           140.67     -629.051         -624.806       
        596+            8           170.57     -628.757         -624.806       
        766+            4           200.47     -628.616         -624.806       
        955+            5           230.38     -628.616         -624.806       
       1090+            6           260.28     -628.562         -624.806       
       1223+            2           290.19     -628.108         -624.806       
       1424+            5           320.09     -627.376         -624.806       
       1557+            2           350.00     -625.910         -624.806       
       1561             0           352.60     -624.868         -624.806       

                         *** Normal completion ***            

 Wall clock time:                   353.85
 Total CPU time used:               352.60

 Total no. of BaR iterations:    1561
 Best solution found at node:       2
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================



*****Running Instance #633*****


objective value: -624.580507646
objective bound: -624.642971934
BARON solution time: 1050.65

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1449650471756776
 0.0
 0.0
 0.8550349530835428
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8603317544652667
 0.0
 0.0
 1.1396682460337224
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4164829786422557
 0.9150170919073105
 0.0
 0.0
 0.0
 0.0
 3.4438487765190535
 2.2246511535728444
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2853268332141153
 0.9838033320599564
 0.03784976803500513
 0.0
 0.0
 0.0
 0.7675487963975388
 2.6464985956947458
 0.10181847803035839
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07512702571731517
 0.22538107712302288
 0.0
 0.7500000000847519
 2.250000000248398
 0.0
 0.5585064761666251
 1.6755194284817507
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.616366498324904
 1.8490994949601107
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.95214332095749
 0.4656675534282633
 0.5821891259164891
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.814167201996078
 1.7737484758558248
 0.0
 0.0
 0.0
 1.0318908693160482
 0.38019345401423627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1667605755892472
 0.0
 0.0
 0.0
 0.8332394246408041
 0.0
 0.5106493972792467
 0.25532469860650264
 0.0
 0.0
 1.4893506029906378
 0.74467530139116
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7842438563340346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2157561446416416
 0.9311335478611966
 0.8531103078092691
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4359407586340935
 0.7179703789923206
 0.0
 0.5640592415609206
 0.2820296206539611
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46525547654175103
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5347445235679629
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43109866659855867
 0.43265524485623486
 0.0
 0.21554933329652207
 0.0
 0.0
 0.0
 0.0
 1.568901333739181
 1.574566203277701
 0.0
 0.7844506668642202
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5862359402325052
 0.0
 0.0
 0.0
 1.9742996651843583
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2511532543359014
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.025700335057820503
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4137640606122782
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2157561436489664
 0.0
 0.15394193017040536
 0.5343324472409495
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7488467460334093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9471243707114664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04785667983877696
 0.0
 0.06886645271419367
 5.417810875250806
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.153911137851041
 2.3315000705495663
 0.4652554765703351
 0.0
 0.0
 0.3005081028430572
 0.8460888623036065
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.587915677851903
 0.0
 1.3069799333090768
 0.534744523478239
 3.0
 0.7659740958857494
 2.2340259046483757
 0.0
 1.4120843233302844
 0.0
 2.78424385721834
 1.1667605755892472
 1.1449650471756776
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8550349530835428
 1.0793032447513156
 0.0
 0.0
 3.0
 0.0
 0.0
 2.234025904381798
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.515865870122643
 0.0
 0.0
 5.6684999300918975
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8332394246408041
 0.0
 0.0
 2.4654659932850147
 0.0
 0.0
 3.9279182038811022
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.0072214479927735
 0.0
 1.0
 0.0
 1.0
 0.0
 0.0
 2.0
 0.9999999996491344
 0.0
 1.2157561445260812
 0.9311335477745831
 0.8531103077305564
 2.0
 0.0
 0.0
 0.0
 0.7842438562573916
 0.0
 0.0
 2.0
 0.9999999999637652
 2.0
 0.0
 0.0
 5.846058070794493
 2.153941929685266
 0.0
 0.0
 1.95214332081785
 0.4656675534026561
 0.5821891258819856
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0528756295728026
 3.6303019276235524
 0.13966824605974887
 0.0
 4.8603317549354115
 3.1396682453411158
 1.8603317543122695
 0.0
 0.0
 1.1396682459432808
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.717970379252039
 0.2914375088075733
 0.465255476499181
 0.0
 0.0
 0.03756351284961583
 0.2820296207532506
 0.0
 1.0
 0.0
 0.0
 0.37500000001813444
 0.0
 0.0
 0.0
 0.8234894596853366
 0.0
 0.27099766126189767
 0.5347445235194129
 1.0
 0.2553246986131177
 0.2792532380619534
 0.0
 0.17651054040334607
 0.0
 1.0
 0.5833802877488387
 0.5724825235401917
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4275174765058125
 0.215549333278083
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7446753014266875
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7290023387745511
 0.0
 0.0
 0.7085624912397827
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41661971228779326
 0.0
 0.0
 0.3081832491401761
 0.0
 0.0
 0.7844506667923198



=====Finished running Instance #633=====




*****Running Instance #634*****


objective value: -624.805933688
objective bound: -624.86842053
BARON solution time: 353.84

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5490581948952964
 0.034011152762959435
 0.0
 0.4509418050790644
 0.00990088735244076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9747490023232752
 0.0
 0.09830373598168715
 0.9269472619557056
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.052575406271439
 0.9695096405107505
 0.0
 0.0
 0.0
 0.0
 0.02047733278156276
 0.003929277658142156
 0.40082309769392926
 1.0982796370278542
 0.009512991553579849
 0.0
 0.0
 0.0
 0.6631096627591239
 1.816960758791214
 0.015738006719672536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8628183335310595
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2664908580893721
 0.799472574146167
 0.0
 0.7500000003098166
 2.2500000007098717
 0.0
 0.44911377377495426
 1.3473413211665994
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5343953681851624
 1.6031861043799696
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999992817659
 0.9802276938339374
 0.019772306767099512
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.989977333278183
 1.7483254968949689
 0.0
 0.0
 0.0
 1.5726113989017094
 0.6890857705636484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9597470773345722
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8023632707175142
 0.40118163473344404
 0.0
 0.0
 1.1976367295085144
 0.5988183638210313
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.3526516619424085
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6473483390186803
 1.0
 0.3526516612771923
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4761216739926972
 0.7380608362758725
 0.0
 0.5238783264192847
 0.2619391629539707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3411250548323717
 0.9261353462541723
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5150300439809304
 4.673909422193213
 0.0
 0.7578409108937806
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.6128472382268058
 0.0
 1.4849699564296175
 0.0
 1.6588749448334426
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2505968104999188
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999993550304
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3871527623942981
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6473483373242295
 0.0
 0.4374112688831167
 0.01977230642305494
 1.0402529220183732
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7494031896703599
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07386465211547037
 0.9360672397140986
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13718166729327036
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24215908967999333
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.838011918296755
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2141825107921056
 0.0
 1.2672604012874598
 0.0
 0.0
 1.065963432307807
 0.7858174896230333
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.738302830781643
 0.0
 1.5086157262753634
 0.0
 3.0
 1.2035449054509582
 1.7964550950052534
 0.0
 2.2616971699367188
 0.0
 2.3526516635493944
 0.9597470774837208
 1.5830693476670357
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46084269247304926
 0.0
 0.0
 0.0
 2.8628183340770885
 0.0
 0.0
 1.7964550933295458
 0.0
 2.9999999998819664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4958084282700104
 0.0
 0.0
 6.02208504695951
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.137581472624949
 0.024406610439704917
 0.0
 5.946780377314085
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5150300438478951
 4.673909421787991
 0.0
 0.7578409107458435
 0.34112505548574296
 0.9261353480418307
 0.0
 0.0
 2.0
 0.9999999990988745
 0.0
 1.647348338840586
 0.9999999999936
 0.35265166119788627
 1.9999999998949098
 0.0
 0.0
 0.0
 0.3526516618912237
 0.0
 0.0
 2.0
 0.9999999985227153
 0.9597470783199966
 0.0
 0.0
 5.562588731877542
 2.4374112673968247
 0.0
 0.0
 1.9999999994261024
 0.9802276939134165
 0.019772306705976912
 2.0
 6.0
 0.0
 1.8628183333608261
 1.0
 0.0
 0.0
 1.0639327604850533
 2.9152403959239326
 0.025250998151872872
 0.0
 5.073052738816372
 0.9734389180772762
 1.9747490021551612
 0.0
 0.09830373583871052
 0.9269472619066639
 1.9999999998600866
 0.0439120399848814
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.738060836957347
 0.0
 0.9999999980720178
 0.0
 0.0
 0.13324542902672354
 0.261939163204684
 0.0
 1.0
 0.0
 0.0
 0.37500000012150814
 0.0
 0.0
 0.0
 0.7172878538387782
 0.0
 0.3767372456024736
 0.0
 1.0
 0.401181635329003
 0.2245568868638239
 0.0
 0.2827121462250601
 0.0
 1.0
 0.9999999989732988
 0.7745290975024459
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2254709025559195
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.5988183647086076
 0.0
 0.9999999999399397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6232627543626481
 0.0
 0.0
 0.9959635088397617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2671976840661965
 0.0040364912105406
 0.0
 1.0



=====Finished running Instance #634=====




