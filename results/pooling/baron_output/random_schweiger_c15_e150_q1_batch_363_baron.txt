===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -204.555
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -625.771
 Preprocessing found feasible solution with value -625.880
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1+            1            38.77     -642.955         -625.880       
          1             1            45.65     -641.151         -625.880       
         23+            3            75.54     -639.317         -625.880       
        762             6           105.61     -637.977         -625.880       
       4251             5           135.51     -637.977         -625.880       
       8264            12           165.40     -636.870         -625.880       
       9727             4           195.28     -636.870         -625.880       
       9805+            5           225.18     -636.870         -625.880       
       9874+            5           255.08     -636.870         -625.880       
       9959+            5           284.97     -634.055         -625.880       
      10165+            6           314.86     -634.055         -625.880       
      10273+            4           344.77     -629.845         -625.880       
      10283             0           356.61     -625.942         -625.880       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   358.06
 Total CPU time used:               356.68

 Total no. of BaR iterations:   10283
 Best solution found at node:    3702
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -198.357
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -620.674
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             7.79     -642.660         -621.312       
          1             1            17.96     -641.691         -621.312       
         20+            4            47.85     -630.712         -621.312       
         31             0            59.28     -621.374         -621.312       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    59.62
 Total CPU time used:                59.35

 Total no. of BaR iterations:      31
 Best solution found at node:      16
 Max. no. of nodes in memory:       5
 
 All done
===========================================================================



*****Running Instance #725*****


objective value: -625.879502177
objective bound: -625.94209637
BARON solution time: 358.05

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.452418420819715
 1.3148962374320003
 0.0
 0.5475815794729589
 0.4957338382762742
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.000000000274689
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2124579278375136
 0.48507838910883627
 0.0
 0.0
 0.0
 0.0
 3.7875420730479767
 1.5153142763088698
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1237936457102047
 1.0162828007793694
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5168832996980209
 1.5506498989757735
 0.0
 0.0
 0.0
 0.0
 0.5485586638452034
 1.6456759914115122
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9345580366074913
 2.803674109641306
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9504241858531476
 0.049575814085004395
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.580165847603875
 1.7189602832867812
 0.0
 0.0
 0.0
 1.236724626394967
 0.46414924368896726
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5371768968695884
 0.2685884483893172
 0.0
 0.0
 1.4628231033915662
 0.7314115515719416
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5559646888312983
 0.0
 0.0
 0.0
 0.5746238306455007
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4253761703227357
 0.8780262569749144
 0.6965975730000751
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5608013723323628
 0.7804006858006969
 0.0
 0.4391986280614511
 0.21959931392787974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29537356116080654
 0.5909053164934492
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.33298875030516034
 0.05044942105956568
 0.0
 0.16649437515352886
 0.0
 0.0
 0.0
 0.0
 1.6670112500475474
 0.2525603414068001
 0.0
 0.8335056250232422
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.44403531185263045
 1.500701580121241
 0.0
 0.0
 0.0
 1.7046264392007382
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2274775303180857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49929842071306085
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8694114806913051
 0.0
 0.1831095273848264
 0.04957581481583562
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7725224700695454
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40909468371725877
 0.8762063546271075
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9311961926148569
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.12197374360405992
 4.139794111374846
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.341202058360446
 1.6975363169324984
 0.8862788774576097
 0.0
 0.0
 2.067533198654218
 0.6587979420533147
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 6.299126130683604
 0.0
 0.0
 0.0
 3.0
 0.8057653452589056
 2.1942346552352125
 0.0
 1.7008738700279251
 0.0
 2.1305885200948125
 0.0
 2.76731465818143
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0433154177231465
 0.5499325465044557
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1942346549635077
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1400764464011273
 0.0
 0.0
 5.3028563493135765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.7382321461970056
 0.0
 0.0
 2.7530772163979447
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 0.3030097624384432
 0.0
 1.0
 0.29537356119375796
 0.5909053165593764
 0.0
 0.0
 2.0
 0.9999999996305167
 0.0
 1.4253761701842824
 0.8780262568896018
 0.6965975729323769
 1.5559646887277452
 0.0
 0.0
 0.0
 0.5746238306070467
 0.0
 0.0
 2.0
 0.9999999999290048
 0.0
 0.0
 0.0
 5.816890473572988
 2.1831095268160725
 0.0
 0.0
 2.0
 0.9504241858396842
 0.04957581408430267
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.1237936456655226
 1.0162828007389617
 0.0
 0.0
 5.000000000676043
 2.00039266533391
 2.0
 0.0
 0.0
 1.0000000002049398
 2.0
 1.8106300756195606
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7804006860890429
 0.24249158553471578
 0.9999999998884185
 0.0
 0.0
 0.25844164982103857
 0.2195993140090193
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7873907663230448
 0.0
 0.0
 0.0
 1.0
 0.26858844840838575
 0.274279331893281
 0.0
 0.21260923375015836
 0.0
 1.0
 0.10240105192668186
 0.7262092103389917
 0.0
 0.10237918895377328
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2737907897096836
 0.16649437513556523
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7314115516238683
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7575084145071738
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7952197591195449
 0.0
 0.0
 0.46727901826141655
 0.0
 0.0
 0.8335056249407378



=====Finished running Instance #725=====




*****Running Instance #726*****


objective value: -621.312337896
objective bound: -621.374475343
BARON solution time: 59.61

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.514472775326239
 0.40065790715263105
 0.0
 0.48552722494015454
 0.12844755282486386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0534714227374076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0601360376050009
 0.0
 0.18175569574700678
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3913514411243879
 1.1740543233033356
 0.0
 0.7500000001079284
 2.250000000227162
 0.0
 0.47089261711840735
 1.4126778512786724
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38775594194723095
 1.1632678257722184
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.918649141440823
 0.9031602566404161
 0.17819060219579708
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.389030008807418
 2.6166458194014055
 0.0
 0.0
 0.0
 0.6229404185759361
 0.3713837542080841
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7442863548219001
 0.3721431772980012
 0.0
 0.0
 1.2557136454375875
 0.6278568225282336
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4052432033050601
 0.0
 0.0
 0.0
 0.505321943056812
 0.579468865455403
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4946780579328254
 0.8971991287308786
 0.6081228136318502
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4998784411887593
 0.7499392202412134
 0.0
 0.5001215592031021
 0.25006077948375816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5175162146662635
 0.5339589376530613
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4685822467665586
 4.3384057650844285
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5947567973987838
 1.5315898096328742
 0.0
 0.5314177536177018
 0.0
 1.4824837857553255
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24371246449903602
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46841019123947636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5099659881757397
 0.0
 0.9880295739067818
 0.0968397440671209
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.756287535887503
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4660410626452894
 0.9398639627265531
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2829704570540532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08135085936180211
 0.0
 0.0
 1.818244304359839
 0.0
 0.0
 0.0
 0.10280087184977145
 5.292703938933139
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2498176616536663
 0.0
 1.0514751521229053
 0.0
 0.0
 1.5654057644131363
 0.7501823387614309
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.005675827955301
 0.0
 0.0
 0.0
 3.0
 1.1164295321199014
 1.8835704683756027
 0.0
 0.9943241727506487
 0.0
 2.4900340125285854
 0.0
 1.9151306824057333
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6139747777418154
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.883570467965821
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.241891733360739
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5510237677051488
 1.0534714225465085
 0.0
 6.806988011850438
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.4685822466808212
 4.338405764831145
 0.0
 1.0
 0.5175162146392694
 0.5339589376252385
 0.0
 0.0
 2.0
 0.9999999996274691
 0.0
 1.4946780577857455
 0.8971991286426573
 0.6081228135721062
 1.4052432031718751
 0.0
 0.0
 0.0
 0.5053219430070817
 0.579468865398797
 0.0
 2.0
 0.9999999997943899
 0.0
 0.0
 0.0
 5.01197042701368
 2.9880295733891438
 0.0
 0.0
 1.918649141325044
 0.9031602565859266
 0.17819060218505614
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0601360375660969
 0.0
 0.1817556957403367
 0.0
 0.0
 1.0534714226832569
 0.0
 0.0
 0.0
 3.0
 2.0
 0.5291054599569269
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7499392205206263
 0.0
 1.0
 0.0
 0.0
 0.19567572054060248
 0.2500607795769479
 0.0
 1.0
 0.0
 0.0
 0.37500000002241846
 0.0
 0.0
 0.0
 0.8757094784820112
 0.0
 0.0
 0.0
 1.0
 0.3721431773745178
 0.2354463085352098
 0.0
 0.12429052159173719
 0.0
 1.0
 0.1246664871084737
 0.7572363875904554
 0.0
 0.1877459682110194
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24276361244667385
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6278568226573276
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6875875446805069
 0.0
 0.0
 0.193877970952145
 1.0
 0.0
 1.0



=====Finished running Instance #726=====




