===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -218.064
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -586.477
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             8.82     -647.534         -628.418       
          1             1            16.24     -642.841         -628.418       
         45+            7            46.15     -642.370         -628.418       
        852            11            77.45     -642.370         -628.418       
       4396            17           107.35     -642.370         -628.418       
       8308            15           137.24     -642.370         -628.418       
      12736            10           167.13     -642.370         -628.418       
      13908+            5           197.04     -642.370         -628.418       
      14101+            5           226.93     -642.370         -628.418       
      17317            15           256.82     -642.370         -628.418       
      21180             8           286.71     -642.370         -628.418       
      23187+            6           316.62     -642.370         -628.418       
      23294+            4           346.53     -642.370         -628.418       
      23402+            5           376.43     -642.370         -628.418       
      24124             8           406.32     -642.370         -628.418       
      28348             7           436.22     -641.161         -628.418       
      31115             8           466.11     -641.161         -628.418       
      31634             9           495.99     -640.920         -628.418       
      32555            13           525.89     -640.920         -628.418       
      36609             8           555.78     -640.920         -628.418       
      39507+            5           585.68     -640.487         -628.418       
      40679            14           615.58     -640.487         -628.418       
      44320            10           645.47     -640.487         -628.418       
      48177            10           675.36     -640.487         -628.418       
      51843            12           705.25     -640.487         -628.418       
      55730             7           735.14     -640.487         -628.418       
      60266            10           765.03     -640.487         -628.418       
      63254             6           794.92     -640.487         -628.418       
      67141             9           824.82     -640.315         -628.418       
      70943             9           854.97     -640.315         -628.418       
      74315             7           884.86     -640.315         -628.418       
      78266             7           914.75     -640.315         -628.418       
      82477             8           944.64     -640.315         -628.418       
      86304            18           974.53     -638.005         -628.418       
      90430            14          1004.42     -638.005         -628.418       
      94628            11          1034.80     -638.005         -628.418       
      98911            12          1064.69     -638.005         -628.418       
     100037             0          1094.94     -628.481         -628.418       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1100.66
 Total CPU time used:              1096.55

 Total no. of BaR iterations:  100037
 Best solution found at node:   23094
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -114.228
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -614.021
 Preprocessing found feasible solution with value -634.212
 Preprocessing found feasible solution with value -634.452
 Preprocessing found feasible solution with value -635.320
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            25.37     -640.604         -635.320       
         13             0            52.54     -635.384         -635.320       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    54.19
 Total CPU time used:                53.97

 Total no. of BaR iterations:      13
 Best solution found at node:       6
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #193*****


objective value: -628.418281203
objective bound: -628.481129197
BARON solution time: 1100.65

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.7552497807443467
 0.714990444882667
 0.0
 1.1180147139803567
 1.058417834886816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9854876741716718
 0.0
 0.0
 1.0145123245587715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8308943987666284
 1.7117214204025062
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1545932751870764
 1.3027908999348352
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5565821189596443
 3.143954245025382
 0.01451232541550978
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998707214
 0.9999999988524432
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6201418525915786
 1.8604255577626514
 0.0
 0.5270637823232425
 1.5811913469613
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8527943640833687
 2.558383092230039
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.934357882426862
 0.7394544902282252
 0.32618762021217207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.040679689853087
 2.221297274063351
 0.0
 0.0
 0.0
 0.5122761652860977
 0.22574686738483893
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05791833489352625
 0.1764325462364419
 0.0
 0.0
 0.0
 0.0
 0.5944965805400565
 0.2972482898799597
 0.0
 0.0
 1.4055034192403073
 0.7027517087001921
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999998837014
 0.0
 0.0
 0.0
 0.590998387334614
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4090016127981033
 0.9999999997828136
 0.5909983873313551
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6081205037572537
 0.702157269410549
 0.10190298179760103
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3918794955807676
 0.17110722480692214
 0.024832522828807834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5488977814822693
 0.6299785018367425
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.394489291881709
 0.0
 0.9999999998042266
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.2619769625848511
 0.0
 0.0
 0.0
 1.451102214201926
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.999999998543227
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999946266331
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.738023034216799
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40900161090048937
 0.0
 0.4470441444126904
 0.26054550559520395
 1.9420816647322245
 0.0
 0.0
 0.0
 0.0
 5.999999999489175
 0.0
 0.0
 0.0
 0.0
 0.8235674513087633
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37002149210966584
 0.4434178799182337
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1267355057530444
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06564211310104692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.900404099271103
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.4121807549654037
 4.54261582014529
 1.1788762833410378
 0.0
 0.0
 0.0
 0.0
 0.0
 2.999999999912272
 0.0
 0.0
 2.4805674107842757
 0.0
 0.0
 0.0
 7.261976966066202
 0.0
 0.0
 0.0
 2.999999999955349
 0.8917448704200162
 2.10825512965687
 0.0
 0.7380230329673094
 0.0
 2.5909983894961752
 0.23435088112996813
 1.470240225661191
 0.5878192432164976
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.176432548909793
 0.0
 0.0
 0.0
 2.999999999056893
 0.0
 0.0
 2.1082551279404993
 0.0
 2.9999999928672536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.715048689400536
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.4111774568873163
 3.4573841758767054
 0.0
 5.394489291902578
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.3944892919843532
 0.0
 0.9999999998469628
 0.5488977859658367
 0.6299785069828063
 0.0
 0.0
 1.99999999995015
 0.8732644944917786
 0.1267355046452059
 1.4090016128229819
 0.9999999998020775
 0.5909983873405262
 1.9999999996702713
 0.0
 0.0
 0.0
 0.590998387577269
 0.0
 0.0
 1.9999999999619085
 0.999999998674451
 0.057918335361791015
 0.17643254766418126
 0.0
 5.552955855869831
 2.4470441417820794
 0.0
 0.0
 1.9343578869555966
 0.739454491963574
 0.3261876209749302
 1.9999999997106288
 5.999999999044318
 0.0
 2.0
 0.9999999989528868
 0.0
 0.0
 1.5565821200751249
 3.1439542472790367
 0.014512325365913308
 0.0
 4.985487675684904
 3.014512321394131
 1.985487674257399
 0.0
 0.0
 1.0145123246194303
 1.8732644953402382
 1.7734082803521571
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.80406025190234
 0.5678269776042617
 0.9999999918297946
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999999872975
 0.0
 0.0
 0.3100709263427551
 0.0
 0.0
 0.0
 0.9077471207538101
 0.0
 0.0
 0.0
 0.9999999999643534
 0.2972482902764753
 0.2635318912017489
 0.0
 0.09225287911133324
 0.0
 0.9999999995793023
 0.9999999919074279
 0.4031730610509093
 0.19593974779688533
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5968269386204628
 0.0
 0.0
 0.0
 0.9999999999169311
 0.0
 0.0
 0.7027517096344251
 0.0
 0.9999999976628021
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999992832339
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4263971821060317
 0.4321730220487947
 0.0
 0.9999999999572144



=====Finished running Instance #193=====




*****Running Instance #194*****


objective value: -635.320199719
objective bound: -635.383738059
BARON solution time: 54.18

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2366533858948026
 0.0
 0.060844255771114075
 0.7633466073983295
 0.0
 0.03755721430335684
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8589443464349216
 0.0
 0.0
 1.1410556533588385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2416510237874632
 0.6507649012966658
 0.0
 0.0
 0.0
 0.0
 3.617293323591667
 1.8958688775100834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14841723353535702
 0.506523970657304
 0.019946586658390473
 0.0
 0.0
 0.0
 0.9011402808091966
 3.07544577058235
 0.1211090671167484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8434074251197443
 0.9999999999529552
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1954702615376894
 0.5864107846248495
 0.0
 0.7500000000292618
 2.250000000003273
 0.0
 0.5594322714801134
 1.6782968143898715
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49509746705393676
 1.485292401123027
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9015985297946671
 0.8655643670437532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.465502413283764
 1.8218341369815623
 0.0
 0.0
 0.0
 0.5344975865245772
 0.17816586201879517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2651836567200085
 0.0
 0.0
 0.0
 0.7348163427236725
 0.0
 0.5081806097334665
 0.25409030478295774
 0.0
 0.0
 1.4918193904855754
 0.7459096950013318
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999994535216
 0.0
 0.0
 0.0
 0.5819697399849024
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.418030260674211
 0.9803898686113548
 0.601579870995627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.447216839185874
 0.7236084141391294
 0.0
 0.35086111591861135
 0.17543055663165652
 0.0
 0.0
 0.0
 0.0
 0.2019220451268876
 0.10096102179689453
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8729683758934331
 0.9429238609320042
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.637968818538983
 2.8517863510264454
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3945039920927655
 0.0
 0.3620311817385138
 0.0
 1.127031623658937
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2767952028725418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999994606736
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6054960077372141
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41803026006014254
 0.0
 0.0
 0.13443563350186838
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7232047973038551
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0570761383794304
 0.9504424858444538
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15659257535839777
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01961013192576556
 6.0
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1708252584608663
 1.892415925377755
 1.815892237028921
 0.0
 0.0
 0.7818810462407346
 0.5262916738080078
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.287336550619202
 0.0
 0.6748877908510514
 0.0
 2.9999999999436477
 0.7622709145164241
 2.237729085930129
 0.0
 0.7126634488644741
 0.0
 2.5819697406608797
 1.2651836567750543
 1.2974976419155944
 0.3028830676557553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8009038218746903
 0.0
 0.0
 0.0
 2.843407425451088
 0.0
 0.0
 2.237729085486907
 0.0
 2.7671628969348765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.0976951185082955
 0.0
 0.0
 5.513162201767322
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.734816342766845
 0.0
 0.0
 1.9803898682402592
 0.0
 0.0
 5.489755169673058
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.6379688185500054
 2.8517863510435997
 0.0
 1.0
 0.8729683766861912
 0.9429238617881996
 0.0
 0.0
 2.0
 0.9999999925491041
 0.0
 1.4180302605503792
 0.9803898685329222
 0.6015798709559966
 2.0
 0.0
 0.0
 0.0
 0.5819697401877023
 0.0
 0.0
 2.0
 0.9999999997670025
 1.999999999561018
 0.0
 0.0
 6.0
 1.999999999336707
 0.0
 0.0
 1.9015985297567073
 0.8655643670498383
 0.0
 2.0
 6.0
 0.0
 1.843407425291985
 1.0
 0.0
 0.0
 1.0495575143907316
 3.581969741405581
 0.14105565376802748
 0.0
 4.858944347366166
 2.5466337788078564
 1.8589443465507023
 0.0
 0.0
 1.1410556534610683
 1.9999999933640658
 0.0
 0.09840147003373317
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7236084195435578
 0.25553925606715355
 0.9999999990937691
 0.0
 0.0
 0.09773513076903895
 0.17543055794990062
 0.0
 1.0
 0.0
 0.0
 0.3749999999985402
 0.0
 0.0
 0.0
 0.9109170688172938
 0.0
 0.141409338220441
 0.0
 0.9999999999552328
 0.25409030484638434
 0.2797161357298004
 0.0
 0.08908293108966177
 0.0
 0.9999999996558031
 0.6325918284990243
 0.6183266949993742
 0.10096102255890473
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3816733049659295
 0.0
 0.0
 0.0
 0.9999999999082502
 0.0
 0.0
 0.7459096951818797
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8585906617335173
 0.0
 0.0
 0.7444607439397078
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36740817144265087
 0.0
 0.0
 0.24754873351872986
 0.0
 0.0
 0.9999999999880236



=====Finished running Instance #194=====




