===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.37
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -175.363
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -620.806
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.71     -640.647         -620.806       
         34+            9            45.62     -640.362         -620.806       
        399+            4            75.52     -640.362         -620.806       
        532+            3           105.42     -640.362         -620.806       
       1431             8           135.31     -632.802         -620.806       
       4649            11           165.21     -632.802         -620.806       
       8297            10           195.10     -632.802         -620.806       
      12005             9           224.99     -632.802         -620.806       
      15524            10           254.88     -632.802         -620.806       
      19024+            6           284.78     -632.802         -620.806       
      19433+           10           314.68     -632.802         -620.806       
      21843            12           344.57     -632.802         -620.806       
      25782            12           374.46     -632.802         -620.806       
      29315            13           404.35     -632.802         -620.806       
      32290            10           434.23     -632.802         -620.806       
      36114            12           464.87     -632.802         -620.806       
      40132             8           494.77     -632.802         -620.806       
      43548            10           524.65     -632.802         -620.806       
      47387            10           554.55     -632.802         -620.806       
      51338            15           584.44     -632.802         -620.806       
      55227            12           614.33     -632.802         -620.806       
      59412             9           644.22     -632.802         -620.806       
      63298            11           674.11     -632.802         -620.806       
      67036             7           704.00     -632.802         -620.806       
      70305             7           733.89     -632.802         -620.806       
      73816             7           763.78     -632.802         -620.806       
      74820+            5           793.67     -632.195         -620.806       
      76901             7           823.57     -629.455         -620.806       
      80887             9           853.46     -629.213         -620.806       
      83369+            3           883.35     -629.213         -620.806       
      86816+            5           913.25     -627.592         -620.806       
      90393+           11           943.14     -627.592         -620.806       
      90784+            4           973.03     -626.852         -620.806       
      91191             8          1002.93     -626.852         -620.806       
      91686            10          1032.82     -626.852         -620.806       
      91890+            3          1062.73     -626.852         -620.806       
      91897             0          1066.67     -620.868         -620.806       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1071.03
 Total CPU time used:              1067.02

 Total no. of BaR iterations:   91897
 Best solution found at node:       1
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -150.890
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -308.382
 Preprocessing found feasible solution with value -636.444
 Preprocessing found feasible solution with value -636.444
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.73     -638.866         -636.444       
          3             0            22.17     -636.508         -636.444       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    22.30
 Total CPU time used:                22.20

 Total no. of BaR iterations:       3
 Best solution found at node:       1
 Max. no. of nodes in memory:       2
 
 All done
===========================================================================



*****Running Instance #63*****


objective value: -620.805637533
objective bound: -620.867724196
BARON solution time: 1071.02

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.472061830526024
 0.0
 0.0
 0.5279381655996449
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.907864316295316
 0.0
 0.0
 1.0921356833915514
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4730310007995282
 0.18893055136560313
 0.0
 0.0
 0.0
 0.0
 4.434833316245633
 1.7712908927369024
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0228863984704277
 1.1703903519363694
 0.09213568351027933
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999996706567
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0619380479281244
 0.18581414383381448
 0.0
 0.749999999962418
 2.249999999770943
 0.0
 0.5066249769688257
 1.519874930850366
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6814369751707203
 2.0443109254129883
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2186049643281045
 0.8242904158863787
 0.9571046186718957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.154479902882086
 2.9964395941364614
 0.0
 0.0
 0.0
 0.49329151002909444
 0.355788990791096
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14220603878677876
 0.0
 0.6490000618154542
 0.32450003065423905
 0.0
 0.0
 1.3509999383008997
 0.6754999686268102
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.99999999856234
 0.0
 0.0
 0.0
 0.6887827686132938
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.311217231620796
 0.9606377333668432
 0.7281450350986439
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4161469970553278
 0.7080734952251156
 0.0
 0.5838530029803962
 0.29192650011580495
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2775681245565149
 0.5916365810387917
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8456630419553366
 3.3116335217805353
 0.0
 0.8975308255334239
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.1509194966539142
 0.0
 1.154336958301712
 0.0
 1.7224318737625288
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27709232216853436
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999984865315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8490805031166346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3112172316794835
 0.0
 1.352228586006565
 0.17570958295072103
 1.8577939603557991
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7229076779890667
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4083634146443361
 0.9771136010518112
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1661638259686455
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1024691748337643
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5894005840797447
 0.0
 0.0
 0.0
 0.0
 0.19199445142897667
 0.0
 0.039362267128953764
 5.042895381305732
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.12422049515691
 0.6619615523011388
 0.8692047058187927
 0.0
 0.0
 0.24775219185642203
 0.8757795043409445
 0.0
 3.0
 0.0
 0.0
 2.999999999864542
 0.0
 0.0
 0.0
 7.150919497727239
 0.0
 0.0
 0.0
 3.0
 0.9735000924696933
 2.0264999079358734
 0.0
 0.8490805012954732
 0.0
 2.6887827689924975
 0.0
 1.4720618308603186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5279381658028803
 0.0
 0.0
 0.0
 2.9999999998919553
 0.0
 0.0
 2.02649990692771
 0.0
 2.999999998886351
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2854124339170765
 0.0
 0.0
 6.206124209427407
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14220603882798033
 0.0
 0.0
 2.7257479007107457
 0.0
 0.0
 5.05482738938847
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8456630419629125
 3.3116335217280333
 0.0
 0.8975308255393599
 0.2775681265512337
 0.5916365852899084
 0.0
 0.0
 2.0
 0.9999999954138297
 0.0
 1.3112172315215018
 0.9606377332988789
 0.7281450350504072
 1.9999999998493256
 0.0
 0.0
 0.0
 0.6887827690564619
 0.0
 0.0
 2.0
 0.9999999992948704
 0.14220603992875916
 0.0
 0.0
 4.647771413722298
 3.3522285855838865
 0.0
 0.0
 1.218604964812131
 0.8242904162208794
 0.9571046190566932
 2.0
 5.99999999981131
 0.0
 2.0
 0.9999999997793179
 0.0
 0.0
 1.022886399133156
 1.1703903526948132
 0.09213568356135703
 0.0
 4.907864317235096
 1.9602214442013826
 1.9078643163743094
 0.0
 0.0
 1.0921356834750418
 1.9999999964491222
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7080734985038435
 0.0963822490238822
 0.9999999928160397
 0.0
 0.0
 0.03096902397129279
 0.2919265014858047
 0.0
 1.0
 0.0
 0.0
 0.37499999997378225
 0.0
 0.0
 0.0
 0.8938649372074852
 0.0
 0.0
 0.0
 0.9999999999818636
 0.3245000308885454
 0.2533124884825635
 0.0
 0.10613506263895782
 0.0
 0.9999999993564973
 0.0
 0.736030916570283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26396908326897645
 0.0
 0.0
 0.0
 0.9999999999554906
 0.0
 0.0
 0.6754999691088786
 0.0
 0.9999999996149397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999993518229
 0.0
 0.0
 0.9036177509372753
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999919694232
 0.0
 0.0
 0.3407184875795495
 0.0
 0.0
 1.0



=====Finished running Instance #63=====




*****Running Instance #64*****


objective value: -636.444247777
objective bound: -636.507898465
BARON solution time: 22.27

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2643285469608427
 0.0
 0.0
 0.7356714530391574
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8825122097748168
 0.0
 0.1303444977763976
 0.9871432924487855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5174650508047792
 1.4023290378976039
 0.29960331417749375
 0.0
 0.0
 0.0
 1.3322992204528459
 3.6105276696536115
 0.771378204775327
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1912605247420212
 1.0673192660835484
 0.11748779022518312
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20537594165076656
 0.6161278249522997
 0.0
 0.7499999999999999
 2.2499999999999996
 0.0
 0.513703107269525
 1.541109321808575
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5309209510797083
 1.592762853239127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9445850587807328
 0.05541494121926766
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.554885783928731
 3.2948784873288948
 0.0
 0.0
 0.0
 0.08717543119000919
 0.0630602975523647
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3223177269386303
 0.0
 0.0
 0.0
 0.31799367690244357
 0.0
 0.6301250472812666
 0.3150625236406333
 0.0
 0.0
 1.3698749527187333
 0.6849374763593671
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7502345226502567
 0.0
 0.0
 0.0
 0.5333093581899025
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4666906418100973
 0.9379243653231699
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4284991968417182
 0.7142495984208608
 0.0
 0.5715008031582813
 0.2857504015791412
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7374176494842524
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8100197065940863
 4.92901848104718
 0.0
 0.7569202409881135
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.24976547734974341
 0.0
 0.0
 1.1899802934059138
 0.0
 1.2625823505157476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26900186337457105
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15023572874237498
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7164561191598403
 0.0
 1.3579387848812605
 0.05541494121926723
 1.3596885961589262
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.730998136625429
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.808739475257978
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8582858298753506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24307975901188525
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.062075634676830124
 5.814240561004335
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1427487952625786
 2.219397402879877
 1.7374176494842524
 0.0
 0.0
 0.8215037666030662
 0.8572512047374226
 0.0
 2.404615007133267
 0.0
 0.0
 2.9999999999999996
 0.0
 0.0
 0.0
 7.8497642712576265
 0.0
 0.0
 0.0
 3.0
 0.9451875709219
 2.0548124290781
 0.0
 0.1502357287423739
 0.0
 2.2835438808401594
 0.3223177269386303
 1.2643285469608427
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7356714530391574
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0548124290781002
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.3760675810507528
 0.0
 0.0
 5.714205094881784
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31799367690244357
 0.0
 0.0
 2.1236838043188353
 0.0
 0.0
 6.495958428629379
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.8100197065940863
 4.92901848104718
 0.0
 0.7569202409881147
 0.7374176494842524
 1.0
 0.0
 0.0
 2.0
 1.0
 0.0
 1.4666906418100973
 0.9379243653231699
 0.0
 1.7502345226502567
 0.0
 0.0
 0.0
 0.5333093581899025
 0.0
 0.0
 2.0
 1.0
 0.640311403841074
 0.0
 0.0
 4.64206121511874
 3.3579387848812603
 0.0
 0.0
 2.0
 0.9445850587807327
 0.0554149412192674
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.191260524742022
 1.0673192660835493
 0.11748779022518321
 1.849764271257625
 5.012856707551215
 1.0709815189528207
 1.8825122097748168
 0.0
 0.1303444977763976
 0.9871432924487855
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7142495984208594
 0.2797464838332957
 1.0
 0.0
 0.0
 0.10268797082538328
 0.28575040157914067
 0.0
 1.0
 0.0
 0.0
 0.37499999999999994
 0.0
 0.0
 0.0
 0.9812205339072034
 0.0
 0.0
 0.0
 1.0
 0.3150625236406333
 0.2568515536347625
 0.0
 0.018779466092796734
 0.0
 1.0
 0.5033765211819184
 0.6321642734804214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3678357265195786
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6849374763593667
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7202535161667043
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4966234788180814
 0.0
 0.0
 0.26546047553985413
 0.0
 0.0
 1.0



=====Finished running Instance #64=====




