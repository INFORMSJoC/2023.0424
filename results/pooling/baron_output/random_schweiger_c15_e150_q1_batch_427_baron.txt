===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -178.510
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.325
 Preprocessing found feasible solution with value -624.325
 Preprocessing found feasible solution with value -624.325
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            12.20     -639.603         -624.462       
          1             1            21.79     -636.356         -624.462       
         26             5            53.65     -635.366         -624.462       
       1250            14            83.54     -635.066         -624.462       
*      3550+            8           109.82     -635.066         -624.524       
       3707            10           139.70     -635.066         -624.524       
*      7178             4           164.12     -635.066         -624.569       
      11571            12           194.01     -635.066         -624.569       
      13206+            2           223.91     -635.066         -624.569       
      13379             9           253.82     -633.821         -624.569       
      13685+            5           283.72     -633.821         -624.569       
      17130             7           313.63     -633.821         -624.569       
      17516             9           343.52     -633.821         -624.569       
      21984            15           373.41     -633.821         -624.569       
      26906            12           403.29     -633.821         -624.569       
      31242            11           433.18     -633.821         -624.569       
      36103            12           463.06     -633.821         -624.569       
      40659            17           492.95     -633.821         -624.569       
      45488            12           522.83     -633.821         -624.569       
      50147            14           552.73     -633.821         -624.569       
      52757             4           582.63     -633.821         -624.569       
      52954             8           612.52     -631.432         -624.569       
      55584+            7           642.42     -631.432         -624.569       
      57685            14           672.30     -631.432         -624.569       
      58417+            7           702.19     -631.432         -624.569       
      61771            11           732.08     -631.432         -624.569       
      65037             9           761.97     -631.432         -624.569       
      68696            12           791.86     -631.432         -624.569       
      73425             9           821.75     -631.432         -624.569       
      77753             7           851.63     -631.432         -624.569       
      80412            11           881.52     -631.432         -624.569       
      83367            14           911.40     -631.432         -624.569       
      84501             9           941.29     -631.432         -624.569       
      89087            10           971.18     -631.432         -624.569       
      93393+            9          1001.09     -631.432         -624.569       
      93533             8          1031.00     -631.432         -624.569       
      96748             7          1060.88     -631.432         -624.569       
     101413            10          1090.77     -629.913         -624.569       
     105691             6          1120.66     -628.507         -624.569       
     110244            12          1150.55     -628.507         -624.569       
     111058             0          1166.52     -624.632         -624.569       

                         *** Normal completion ***            

 Wall clock time:                  1171.02
 Total CPU time used:              1166.52

 Total no. of BaR iterations:  111058
 Best solution found at node:    7178
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -199.549
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -632.059
 Preprocessing found feasible solution with value -632.059
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.30     -635.350         -632.059       
          3             0            24.10     -632.123         -632.059       

                         *** Normal completion ***            

 Wall clock time:                    24.22
 Total CPU time used:                24.10

 Total no. of BaR iterations:       3
 Best solution found at node:       1
 Max. no. of nodes in memory:       2
 
 All done
===========================================================================



*****Running Instance #853*****


objective value: -624.569444166
objective bound: -624.631907356
BARON solution time: 1171.01

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.5503217852206204
 0.3917360358361013
 0.0
 1.2899650878181967
 0.9182369723311734
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9080706783129067
 0.0
 0.0
 1.0919293216870933
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9235184155078192
 0.581787397774019
 0.0
 0.0
 0.0
 0.0
 3.9845522628050873
 2.51014192391307
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.28986897675243e-5
 1.722746345589332e-5
 0.0
 0.0
 0.0
 0.0
 1.0248121598569369
 0.31370930516328666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6067287338560542
 1.8201862015681627
 0.0
 0.5718920683710995
 1.7156762051132985
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8213791977728463
 2.4641375933185383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9695789231793634
 0.03042107682063655
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.664146603622795
 2.3358533963772024
 0.0
 0.0
 0.0
 1.5984879621736772
 1.4015120378263228
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08543905931225386
 0.14140477752424396
 0.0
 0.0
 0.0
 0.0
 0.4749544843437348
 0.2374772421718674
 0.0
 0.0
 1.5250455156562652
 0.7625227578281328
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.747091385819698
 0.0
 0.0
 0.0
 0.20384685346180786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7961531465381921
 1.0
 0.20384685346180786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5650467762545885
 0.6575441308892247
 0.12497925723806953
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4349532237454118
 0.18274274214959235
 0.03473386972311336
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4477761094557259
 0.5243790342658898
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.7042238248511032
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.2529086141803021
 1.6458442528953343
 0.0
 0.0
 0.0
 1.5522238905442742
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06679728262512619
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3541557471046657
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0490617607184942
 0.0
 1.148247429668028
 0.030421076820636606
 1.9145609406877462
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.5891180045354998
 0.0
 0.0
 0.7917979398506299
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47562096573411017
 0.9751549414532954
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8998462724512354
 0.0
 0.0
 0.0
 0.0
 0.1597131269611829
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09192932168709333
 0.0
 0.0
 0.0
 0.0
 4.659605915012089
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.347570164381883
 1.5053058132818382
 0.9721551437216157
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.4269149354242168
 0.0
 0.0
 0.0
 4.999999999999997
 0.0
 5.0126153223417624e-5
 0.0
 3.0
 0.7124317265156022
 2.287568273484398
 0.0
 3.0
 0.0
 1.9509382392815058
 0.22684383683649784
 0.9420578210567216
 0.6524298356181174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.20820206014937
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.287568273484398
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3385214650202235
 0.0
 0.0
 6.494694186718157
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.2855167910913847
 0.0
 0.0
 5.704223824851104
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.7042238248511032
 0.0
 1.0
 0.4477761094557259
 0.5243790342658898
 0.0
 0.0
 2.0
 0.8402868730388171
 0.1597131269611829
 1.7961531465381921
 1.0
 0.20384685346180786
 1.747091385819698
 0.0
 0.0
 0.0
 0.20384685346180786
 0.0
 0.0
 2.0
 1.0000000000000002
 0.08543905931225386
 0.14140477752424396
 0.0
 4.262634565796472
 3.737365434203528
 0.0
 0.0
 2.0
 0.9695789231793634
 0.03042107682063655
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0248450585467046
 0.31372653262674255
 0.0
 0.0
 4.908070678312907
 3.091929321687089
 1.9080706783129067
 0.0
 0.0
 1.0919293216870933
 1.840286873038817
 1.3099730081672747
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7825233881272943
 0.18816322666022978
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.30336436692802715
 0.0
 0.0
 0.0
 0.6249999999999997
 0.0
 3.210113518448132e-5
 0.0
 1.0
 0.2374772421718674
 0.28594603418554976
 0.0
 0.375
 0.0
 1.0
 1.0
 0.29904130344194024
 0.21747661187270584
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7009586965580598
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7625227578281326
 0.0
 0.9999999999999999
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999678988648155
 0.0
 0.0
 0.8118367733397702
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4106895988864231
 0.0
 0.0
 1.0



=====Finished running Instance #853=====




*****Running Instance #854*****


objective value: -632.059319655
objective bound: -632.122531908
BARON solution time: 24.21

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.696591877671783
 0.0
 0.0
 0.30340812269586
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8726650719738482
 0.0
 0.0
 1.1273349281820997
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1663788371214907
 0.5730768186111076
 0.0
 0.0
 0.0
 0.0
 3.7062862359076223
 1.8210093130378873
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15815764177274336
 0.5412720056036627
 0.018534139150586697
 0.0
 0.0
 0.0
 0.9284313735191989
 3.177424157169609
 0.1088007893637903
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999999919015
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.193233205271483
 0.5796996158157833
 0.0
 0.7500000002606567
 2.2500000006555054
 0.0
 0.5045001786665627
 1.5135005359297478
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5522666160421019
 1.6567998480453685
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8951457375684344
 0.7970954369069764
 0.30775882582112535
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.783469250371046
 1.2253032606777086
 0.0
 0.03585315539886094
 0.0
 2.2165307505784586
 0.7178391513695086
 0.0
 0.02100443171901243
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1573611445784284
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6546661905961421
 0.32733309524438364
 0.0
 0.0
 1.3453338096999885
 0.6726669047444959
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6618385727368453
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3381614282385865
 1.0
 0.6618385720588565
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.45949196834391
 0.7297459837453145
 0.0
 0.5405080321651815
 0.2702540159122299
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38359453145900074
 0.6253282297751289
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.254641737281516
 2.9440752978775677
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5485108386277042
 0.0
 0.7453582631416127
 0.0
 1.6164054688904173
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2461443777978226
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4514891622067793
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3381614263077383
 0.0
 0.0
 0.14604697679206283
 0.8426388556697756
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7538556225767296
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37467177042860944
 0.9134109850491872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.00616189979240288
 0.0
 0.0
 0.0
 0.0
 0.09869236210915466
 0.0
 0.0
 5.692241175272504
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1892379524175003
 1.739455655817849
 1.0089227614358753
 0.0
 0.0
 0.7729328211641088
 0.8107620482636972
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.044625666753032
 0.0
 0.7179637865269928
 0.0
 3.0
 0.9819992858405258
 2.0180007146523344
 0.0
 2.9553743339660756
 0.0
 2.6618385743884145
 1.1573611445924827
 1.6965918787374152
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3034081229959049
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0180007144444843
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.214656320052598
 0.0
 0.0
 5.527295548998659
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2090664641403293
 0.0
 0.0
 5.1987170352840275
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.2546417371563012
 2.9440752975847206
 0.0
 0.999999999997301
 0.38359453150259065
 0.6253282298462417
 0.0
 0.0
 2.0
 0.9999999995431273
 0.0
 1.3381614281180545
 1.0
 0.6618385720081356
 2.0
 0.0
 0.0
 0.0
 0.661838572673497
 0.0
 0.0
 2.0
 0.9999999999479896
 1.1573611447217202
 0.0
 0.0
 6.0
 1.9431424120542136
 0.0
 0.056857586901313394
 1.8951457374483316
 0.7970954368690162
 0.3077588258197405
 2.0
 6.0
 0.0
 2.0
 0.9999999999488368
 0.0
 0.0
 1.0865890152408997
 3.718696162597526
 0.12733492850895337
 0.0
 4.872665072733559
 2.3940861314978417
 1.8726650718779352
 0.0
 0.0
 1.1273349281552565
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7297459841099276
 0.23937184676367754
 0.9999999998863783
 0.0
 0.0
 0.09661660263406527
 0.27025401606452704
 0.0
 1.0
 0.0
 0.0
 0.37500000010679396
 0.0
 0.0
 0.0
 0.630578208333488
 0.0
 0.14555424319089483
 0.0
 1.0
 0.32733309526751037
 0.2522500893194283
 0.0
 0.36942179173112216
 0.0
 1.0
 0.9999999998762243
 0.8482959387604823
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15170406133446135
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.672666904785615
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8544457568564217
 0.0
 0.0
 0.7606281532968181
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2761333080053144
 0.0
 0.0
 1.0



=====Finished running Instance #854=====




