===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -201.098
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -541.648
 Preprocessing found feasible solution with value -622.268
 Preprocessing found feasible solution with value -622.418
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            23.24     -639.430         -622.418       
*        37+           17            44.98     -639.208         -623.462       
*        38            16            45.05     -639.208         -623.533       
*        39+           17            45.10     -639.208         -623.638       
*        41            15            45.18     -639.208         -623.708       
*        45             4            46.05     -639.208         -626.873       
        395             7            75.95     -631.881         -626.873       
       2550+            9           105.85     -630.729         -626.873       
       6327             9           135.74     -630.729         -626.873       
*      6346            10           137.77     -630.729         -626.879       
       7895+            4           167.67     -630.729         -626.879       
       8288+            8           197.57     -630.729         -626.879       
       8623             7           227.49     -629.733         -626.879       
      10519            13           257.38     -629.372         -626.879       
      15774            16           287.28     -629.372         -626.879       
      20899            18           317.16     -629.372         -626.879       
      26366            12           347.05     -629.372         -626.879       
      31484             9           376.95     -629.372         -626.879       
      36362            14           406.84     -629.372         -626.879       
      41001            13           436.74     -629.372         -626.879       
      46042            14           466.62     -629.372         -626.879       
      51056            17           496.51     -629.372         -626.879       
      55972            21           526.42     -629.372         -626.879       
      61223            18           556.30     -629.372         -626.879       
      65909            20           586.20     -629.372         -626.879       
      71039            14           616.09     -629.372         -626.879       
      73828            14           645.98     -629.372         -626.879       
      78606            16           675.87     -629.372         -626.879       
      83577            15           705.77     -629.372         -626.879       
      88214            15           735.66     -629.372         -626.879       
      93271            14           765.55     -629.372         -626.879       
      98445            13           795.44     -629.372         -626.879       
     104032            13           825.33     -629.372         -626.879       
     108648            13           855.22     -629.372         -626.879       
     114023            14           885.11     -629.372         -626.879       
     119466            13           915.00     -629.372         -626.879       
     124712            13           944.89     -629.372         -626.879       
     130400            15           974.78     -629.372         -626.879       
     136093            14          1004.67     -629.372         -626.879       
     140839             9          1034.56     -629.372         -626.879       
     146517            11          1064.45     -629.372         -626.879       
     150211            10          1094.34     -629.372         -626.879       
     156120            18          1124.23     -629.372         -626.879       
     162157            11          1154.12     -629.372         -626.879       
     167985            10          1184.49     -629.372         -626.879       
     173866            12          1214.38     -629.372         -626.879       
     177216+            6          1244.29     -629.372         -626.879       
     177864+            4          1274.19     -629.372         -626.879       
     180987+            6          1304.09     -629.372         -626.879       
     181471+            7          1333.98     -629.372         -626.879       
     181819             4          1363.89     -629.372         -626.879       
     182089             0          1391.82     -626.942         -626.879       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1397.11
 Total CPU time used:              1391.94

 Total no. of BaR iterations:  182089
 Best solution found at node:    6346
 Max. no. of nodes in memory:      25
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -188.326
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -359.792
 Preprocessing found feasible solution with value -620.561
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            13.94     -644.341         -625.376       
          1             1            21.86     -643.231         -625.376       
         19+            4            51.75     -639.519         -625.376       
         48+            5            81.64     -637.142         -625.376       
         77+            2           111.54     -637.142         -625.376       
        130+            6           141.47     -634.151         -625.376       
        156+            4           171.37     -634.151         -625.376       
        205+            5           201.28     -631.736         -625.376       
        272+            3           231.17     -631.736         -625.376       
        415+            4           261.09     -631.379         -625.376       
        533+            5           290.98     -631.005         -625.376       
        551             0           317.01     -625.439         -625.376       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   318.29
 Total CPU time used:               317.09

 Total no. of BaR iterations:     551
 Best solution found at node:     174
 Max. no. of nodes in memory:      13
 
 All done
===========================================================================



*****Running Instance #689*****


objective value: -626.879083399
objective bound: -626.941777479
BARON solution time: 1397.11

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5836197292252931
 0.0
 0.0
 0.4163802709679334
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002825409
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2486776769244208
 3.047358506055735
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5234491930666593
 1.581642841978599
 0.0
 0.0
 0.0
 0.0
 0.5647025660930344
 1.706293148099691
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22010877876415472
 0.6603263362695857
 0.0
 0.7500000000739555
 2.2500000002301555
 0.0
 0.5355414947640967
 1.6066244842860282
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4943497266756454
 1.4830491800181034
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.788758314330031
 0.7840929644370875
 0.24826133288077648
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.304959994189841
 1.6950400062725828
 0.0
 0.0
 0.0
 1.9829759965693357
 1.0170240037947755
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4884092243795138
 0.0
 0.0
 0.0
 0.13468499174002985
 0.0
 0.571889347683153
 0.28594467378755595
 0.0
 0.0
 1.4281106525706284
 0.7140553261455377
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5839166566013754
 0.0
 0.0
 0.0
 0.49543736564133956
 0.9206459769381028
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5045626353354746
 0.9403792603794293
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4460562152954495
 0.723028107257649
 0.0
 0.5539437850949293
 0.27697189239818126
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26599319857629294
 0.479525801194289
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7353830115189057
 5.113124557128776
 0.0
 0.8083980849657527
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.41608334406492925
 0.0
 0.0
 1.2646169888181669
 0.0
 1.7340068015146926
 0.0
 0.0
 0.8868754443650964
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26184372911740456
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999713636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7513223240199991
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7120640102393347
 0.21590703623842047
 1.3769057842118864
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7381562712168434
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5204741984985922
 0.9118482411108686
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0319955177866185
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19160191554595968
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21124168599884288
 0.0
 0.05962074020083996
 5.751738668135723
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.16908432280748
 4.296036182980156
 0.745518999770582
 0.0
 0.0
 0.8804351150337404
 0.8309156775914422
 0.0
 2.444941895714904
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.000000000462424
 0.0
 2.105092035045258
 0.0
 3.0
 0.857834021470709
 2.142165979050125
 0.0
 3.0
 0.0
 3.0
 0.4884092243795138
 1.5836197295720695
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41638027106136805
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.142165978716166
 0.0
 2.821112611647895
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2709957141927255
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13468499174002985
 0.0
 0.0
 1.9773989066937487
 0.0
 0.0
 6.656905653613435
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.7353830114751263
 5.113124556788148
 0.0
 0.8083980849170297
 0.2659931988676201
 0.47952580172305365
 0.0
 0.0
 2.0
 0.9999999995566782
 0.0
 1.5045626351812698
 0.9403792602834378
 0.0
 1.583916656470694
 0.0
 0.0
 0.0
 0.49543736559896095
 0.9206459768613774
 0.0
 2.0
 0.9999999999039343
 0.6230942161659068
 0.0
 0.0
 5.287935990563411
 2.7120640099768414
 0.0
 0.0
 1.7887583141857688
 0.7840929643720737
 0.24826133286230567
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.088151759146431
 3.287935990036212
 0.0
 1.248677676832303
 3.047358505826533
 0.0
 2.0
 0.0
 0.0
 1.0000000002094291
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7230281075850594
 1.0
 0.9999999988905454
 0.0
 0.0
 0.11005438936955352
 0.27697189252188725
 0.0
 1.0
 0.0
 0.0
 0.3750000000144331
 0.0
 0.0
 0.0
 0.6250000000189024
 0.0
 0.48104429245946584
 0.0
 1.0
 0.28594467381321387
 0.26777074736307516
 0.0
 0.37500000002043365
 0.0
 1.0
 0.7838449013122963
 0.7918098645647984
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20819013547057116
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7140553262204514
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5189557075535653
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21615509861109392
 0.0
 0.0
 0.24717486331959143
 0.0
 0.0
 1.0



=====Finished running Instance #689=====




*****Running Instance #690*****


objective value: -625.376176422
objective bound: -625.438720289
BARON solution time: 318.28

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1385857380407038
 1.861414262285429
 0.0
 0.8614142621736515
 1.408281115575663
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.000000000283857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6478995763166671
 3.1705298134936735
 1.2544183111598992
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37385327658472356
 1.8294701873744665
 0.72382883548256
 0.2049763735621504
 0.7263216133021128
 0.0
 0.0
 0.0
 0.0
 0.8271804504509245
 2.9310648286998404
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.97973349574733
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0068862035606147435
 0.020658610697725517
 0.0
 0.7499999999737682
 2.250000000346676
 0.0
 0.48282873774868634
 1.4484862135069017
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7602850586446674
 2.280855176365722
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8409035339525706
 0.8415354828475317
 0.31756098347088346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.989108585996727
 1.531270080535695
 0.0
 0.13176611441318556
 0.0
 1.0108914150801198
 0.3102654015019562
 0.0
 0.02669840344268337
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7124566995380112
 0.3562283497161377
 0.0
 0.0
 1.2875433007231103
 0.6437716502655696
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.49892192278897174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.501078078190004
 1.0
 0.4989219220096596
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4239460563036264
 0.7119730277802706
 0.0
 0.576053944085315
 0.2880269718925503
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15791216665608737
 0.5578654632040073
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.658682701640213
 3.5228309328788323
 0.0
 0.9279369744062486
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.6955739434873818
 0.0
 1.3413172987119195
 0.0
 1.8420878335684159
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26969537748665284
 0.0
 1.8662237067764487
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2826732044210323
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5010780771911527
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7303046228877684
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4421345364720069
 0.9678431763090988
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.020266505126940403
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07206302616547022
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1590964668403552
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5465199330040986
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1359190843322264
 5.0728477009702395
 0.715777629663011
 0.0
 0.0
 0.027544814254232622
 0.864080916078471
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.65214478077038
 0.0
 0.9312979868449164
 0.0
 3.0
 1.0686850492541489
 1.9313149512360672
 0.0
 1.3478552199885208
 0.0
 2.498921923599543
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.269695377704802
 0.0
 0.0
 0.0
 2.9797334957515966
 0.0
 0.0
 1.93131495098868
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.7582452790741114
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.041140234967793
 2.9271522994417505
 0.0
 5.109450608859225
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6586827015857714
 3.5228309325541534
 0.0
 0.9279369743264476
 0.1579121668261402
 0.5578654638047651
 0.0
 0.0
 2.0
 0.9999999995762889
 0.0
 1.501078078046148
 1.0
 0.49892192196162166
 2.0
 0.0
 0.0
 0.0
 0.4989219227425608
 0.0
 0.0
 2.0
 0.9999999999494661
 0.0
 0.0
 0.0
 6.0
 1.8415354818947787
 0.0
 0.1584645178484824
 1.8409035338452633
 0.8415354827985211
 0.3175609834524115
 1.9999999998271387
 6.0
 0.0
 1.979733495551408
 0.9999999999980643
 0.0
 0.0
 1.032156823981962
 3.6573864418884128
 0.0
 1.0217528528640143
 5.000000000685223
 1.9782471465700981
 2.0
 0.0
 0.0
 1.0000000002057383
 2.0
 3.2696953777329814
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7119730280817257
 0.6341059626118425
 0.9999999989230798
 0.0
 0.0
 0.003443101782439098
 0.2880269720143397
 0.0
 1.0
 0.0
 0.0
 0.3750000000222015
 0.0
 0.0
 0.0
 0.8315180975839014
 0.0
 0.19859033898729325
 0.0
 1.0
 0.35622834973381595
 0.24141436889340315
 0.0
 0.16848190249656197
 0.0
 1.0
 0.19942913787570363
 0.5692928689816539
 0.0
 0.21680200209635223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43070713105766956
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6437716502984037
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8014096610437713
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5837688600279441
 0.0
 0.0
 0.38014252935828063
 0.3658940374247306
 0.0
 1.0



=====Finished running Instance #690=====




