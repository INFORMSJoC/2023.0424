===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.34     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.37
 Total CPU time used:                 0.35

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -631.944
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.944
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            12.04     -640.229         -631.944       
         23             0            40.65     -632.007         -631.944       

                         *** Normal completion ***            

 Wall clock time:                    40.82
 Total CPU time used:                40.65

 Total no. of BaR iterations:      23
 Best solution found at node:      -1
 Max. no. of nodes in memory:       4
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -198.660
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -631.783
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.33     -643.209         -631.783       
*         3             2            19.28     -643.209         -632.367       
*         9             4            43.10     -636.530         -632.367       
        327            11            73.83     -636.498         -632.367       
        761+            7           103.73     -636.498         -632.367       
        990+            8           133.61     -636.498         -632.367       
       1312+            7           163.51     -636.498         -632.367       
       1469+            6           193.40     -636.498         -632.367       
       1547+            8           223.29     -636.378         -632.367       
       2132+           10           253.18     -636.378         -632.367       
       2490+            7           283.07     -636.378         -632.367       
       3530            10           312.96     -636.378         -632.367       
       7423            12           342.85     -636.378         -632.367       
      10970            16           372.74     -636.378         -632.367       
      14087+            8           402.66     -636.378         -632.367       
      17530             8           432.55     -636.378         -632.367       
      21860            11           462.45     -636.378         -632.367       
      21909+            5           492.34     -635.142         -632.367       
      22355             6           522.23     -635.114         -632.367       
      26485             9           552.11     -635.114         -632.367       
      30711            10           582.00     -635.114         -632.367       
      35406            11           611.89     -635.114         -632.367       
      40215             7           641.79     -635.114         -632.367       
      44620             9           671.67     -635.114         -632.367       
      49577             9           701.56     -635.114         -632.367       
      54281             8           731.45     -635.114         -632.367       
      58590             9           761.34     -634.700         -632.367       
      62951            12           791.23     -634.700         -632.367       
      67369             9           821.12     -634.700         -632.367       
      71677             7           851.00     -634.700         -632.367       
      76131             7           880.89     -634.700         -632.367       
      80065            11           910.78     -634.700         -632.367       
      83778            11           940.67     -634.700         -632.367       
      87822            11           970.55     -634.700         -632.367       
      92011            11          1000.44     -634.700         -632.367       
      96177            13          1030.33     -634.700         -632.367       
     100578            12          1060.22     -634.700         -632.367       
     103564            15          1090.11     -634.700         -632.367       
     107920             8          1120.00     -634.700         -632.367       
     111938            11          1149.89     -634.700         -632.367       
     113227             7          1179.80     -634.700         -632.367       
     113495             6          1209.70     -634.700         -632.367       
     113748             9          1239.61     -633.762         -632.367       
     113982+            4          1269.50     -633.762         -632.367       
     114007             0          1280.18     -632.430         -632.367       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1285.22
 Total CPU time used:              1280.33

 Total no. of BaR iterations:  114007
 Best solution found at node:       9
 Max. no. of nodes in memory:      16
 
 All done
===========================================================================



*****Running Instance #949*****


objective value: -631.943663641
objective bound: -632.006864328
BARON solution time: 40.82

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2210016689276597
 1.5854163839330668
 0.0
 0.7789983314179638
 1.0114947007166037
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.000000000029579
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2888528335900131
 0.7733116998029966
 0.0
 0.0
 0.0
 0.0
 3.7111471675752776
 2.2266882995600144
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.012319640455125604
 0.03057622805974091
 0.0
 0.0
 0.0
 0.0
 1.5201208721042363
 3.772801863264259
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.999999999994511
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5980904931378679
 1.7942714793219137
 0.0
 0.5341588836643456
 1.6024766509200166
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8677506234469011
 2.6032518701702436
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9581039182205604
 0.8064180534960962
 0.23547802857189146
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.382929887479286
 1.7943099614581075
 0.0
 0.0
 0.0
 0.6170701134581753
 0.2056900375948315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5755763105682067
 0.2877881552364456
 0.0
 0.0
 1.4244236897295515
 0.7122118447534529
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.8033780883266474
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1966219126526487
 0.9252322750329598
 0.8781458127105586
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3533720455608014
 0.6766860223868948
 0.0
 0.6466279549478641
 0.3233139772751728
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7157437540334167
 0.6923774994656767
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.1218541894028076
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.1772398488671356
 0.0
 0.0
 0.0
 1.284256246363763
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.33143929890282275
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8227601519807127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1966219107324481
 0.0
 0.0
 0.19358194723728775
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6685607014835315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3076225008175284
 0.46755948780763046
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.041896082650119765
 0.0
 0.07476772553966032
 3.1676108880529825
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.03005806824744
 2.0621645334724286
 1.4081212537004943
 0.0
 0.0
 0.0
 0.9699419324186311
 0.0
 3.0
 0.0
 0.0
 2.392361972556948
 0.0
 0.0
 0.0
 7.177239849374831
 0.0
 0.04289586858076933
 0.0
 3.0
 0.8633644658046522
 2.1366355346846095
 0.0
 0.822760151471206
 0.0
 2.803378089976143
 0.0
 2.8064180528675546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.790493032163057
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1366355344830046
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.292922735368496
 0.0
 0.0
 5.937835467173052
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.471002493701328
 0.0
 0.0
 5.121854189504062
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.1218541891951452
 0.0
 0.9999999999992907
 0.7157437540299338
 0.6923774994623104
 0.0
 0.0
 2.0
 0.9999999995470705
 0.0
 1.1966219125447348
 0.9252322749546612
 0.8781458126373174
 1.9999999999943656
 0.0
 0.0
 0.0
 0.8033780882471458
 0.0
 0.0
 2.0
 0.9999999999484313
 0.0
 0.0
 0.0
 6.0
 1.9999999991007187
 0.0
 0.0
 1.9581039180386515
 0.8064180534339526
 0.23547802856911065
 2.0
 5.999999999929814
 0.0
 2.0
 0.9999999999510767
 0.0
 0.0
 1.5324405124850415
 3.80337809113956
 0.0
 0.0
 5.000000000872848
 2.99999999921592
 2.0
 0.0
 0.0
 1.0000000000152938
 2.0
 2.596911084452465
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6766860227236426
 0.2577705666727925
 1.0
 0.0
 0.0
 0.0
 0.3233139774516569
 0.0
 1.0
 0.0
 0.0
 0.29904524655727127
 0.0
 0.0
 0.0
 0.8971549811608596
 0.0
 0.00803922916077529
 0.0
 1.0
 0.2877881552573016
 0.26707944182323207
 0.0
 0.1028450189123774
 0.0
 1.0
 0.07765947363602557
 0.6105008344047472
 0.0
 0.11923614368365859
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38949916567126835
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7122118447962846
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9919607708877195
 0.0
 0.0
 0.7422294333855591
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8031043826803158
 0.0
 0.0
 0.4338753117003014
 0.0
 0.0
 1.0



=====Finished running Instance #949=====




*****Running Instance #950*****


objective value: -632.36680648
objective bound: -632.430049434
BARON solution time: 1285.21

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2671847873196076
 0.0
 0.0
 0.7328152049749916
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999999118463
 0.0
 0.0
 0.9999999998447835
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.01941732331044483
 1.3535686442866086
 0.7927238584693558
 0.0
 0.0
 0.0
 0.05230908436851034
 3.646431356098968
 2.1355497162831574
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2501085828565652
 0.7020889167866018
 0.0
 0.0
 0.0
 0.0
 0.6974018935915507
 1.9577022685195624
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8386476583611757
 0.9999999996730781
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09329665666390224
 0.2798899699917028
 0.0
 0.7499999995457723
 2.2499999984438297
 0.0
 0.5630661260026583
 1.689198377842987
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5936372176872422
 1.780911652885023
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5787670936669533
 0.8562235373586375
 0.5650093669353503
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.685516081635563
 2.721313285355514
 0.0
 0.0
 0.0
 0.3752362025136037
 0.2179344271155643
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05106432602967571
 0.0
 0.49849033102972
 0.24924516516699569
 0.0
 0.0
 1.501509668837378
 0.7507548333766748
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9994153908752965
 0.0
 0.0
 0.0
 0.5996235092502911
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4003764908449206
 0.9510831480744392
 0.6485403610276063
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5668059656738926
 0.7834029746676248
 0.0
 1.0277777317739928e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43319402378092686
 0.21659700961643863
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.55260171861055
 0.587590501806231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.812361456902534
 2.423186063757027
 0.0
 0.9999999998138314
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.000584606962561674
 1.335102959669
 0.0
 0.18763854320262802
 0.0
 1.4473982777108507
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3388467946101105
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999956302341
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5931706320596476
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40096109845247024
 0.0
 0.9392477144307986
 0.14377646073613803
 1.9489356708429002
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6611532050661572
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4124094933300197
 1.052489522542283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1613523419201092
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0673542943884263e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27968925958238167
 0.0
 0.0
 0.0
 0.0
 0.14154364548089188
 0.0
 0.048916852216145494
 5.434990631646845
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3502089461236437
 2.165709826066409
 1.140192220609272
 0.0
 0.0
 0.373186626762402
 1.534524895884914e-8
 0.0
 2.9999999999497446
 0.0
 0.0
 2.999999998284816
 0.0
 0.0
 0.0
 7.4068293682907695
 0.0
 0.952197499748659
 0.0
 2.999999999529684
 0.7477354961967158
 2.252264504101949
 0.0
 0.5931706300306779
 0.0
 2.5990389020422113
 0.0
 1.2671847881007168
 0.6497910350568243
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7328152054850082
 0.0
 0.0
 0.0
 2.8386476593001326
 0.0
 0.0
 2.252264502214053
 0.0
 2.9999999979458916
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.6551041622704674
 0.0
 0.0
 5.834290156750636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05106432613723411
 0.0
 0.0
 2.37454887083819
 0.0
 0.0
 5.235547520596086
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.8123614570512405
 2.4231860639560194
 0.0
 0.9999999999319309
 0.5526017224980316
 0.5875905059397201
 0.0
 0.0
 2.0
 0.9999999896139776
 0.0
 1.4003764908323064
 0.9510831480748951
 0.6485403610361247
 1.9994153922556264
 0.0
 0.0
 0.0
 0.599623509664173
 0.0
 0.0
 2.0
 0.9999999986250555
 0.05106432929271014
 0.0
 0.0
 5.060752285409806
 2.9392477131838577
 0.0
 0.0
 1.5787670946866335
 0.8562235379226948
 0.5650093673151952
 1.9999999999934055
 5.999999999281888
 0.0
 1.8386476585808889
 0.9999999998544631
 0.0
 0.0
 0.9475104774110361
 2.6597911879997955
 0.0
 0.07172640754317106
 5.000000000558855
 2.9282735748762097
 1.9999999993901134
 0.0
 0.0
 1.0000000000023113
 1.9999999929243453
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7834029828331167
 0.27071372882688205
 0.999999992964523
 0.0
 0.0
 0.04664832833641188
 0.0
 0.0
 1.0
 0.0
 0.0
 0.374999999787383
 0.0
 0.0
 0.0
 0.9258536710299754
 0.0
 0.263963923166016
 0.0
 0.9999999998611762
 0.24924516551519801
 0.28153306300632513
 0.0
 0.07414632873273339
 0.0
 0.9999999993059115
 3.759087670921409e-8
 0.6335923959008486
 0.2165970118965683
 2.6294189495861274e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36640760378328696
 0.0
 0.0
 0.0
 0.9999999998834284
 0.0
 0.0
 0.7507548344232144
 0.0
 0.9999999993501867
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7360360758214286
 0.0
 0.0
 0.7292862711380692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999361148558
 0.0
 0.0
 0.29681860884840705
 0.0
 0.0
 0.9999999999126415



=====Finished running Instance #950=====




