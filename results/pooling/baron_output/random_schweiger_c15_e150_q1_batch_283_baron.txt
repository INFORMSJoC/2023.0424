===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -235.192
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -603.850
 Preprocessing found feasible solution with value -625.937
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            21.89     -638.790         -625.937       
         58+           10            52.24     -633.962         -625.937       
       1060            12            82.13     -633.962         -625.937       
       4322            11           112.02     -633.962         -625.937       
       8383            11           141.90     -633.962         -625.937       
      12337            12           171.78     -633.962         -625.937       
      14628+            5           201.69     -633.962         -625.937       
      14784            12           231.57     -633.962         -625.937       
      14920+            4           261.46     -633.962         -625.937       
      15146+            7           291.36     -632.355         -625.937       
      17401+            9           321.26     -632.355         -625.937       
      17639+            6           351.16     -632.355         -625.937       
      17816+            6           381.06     -632.355         -625.937       
      19238            11           410.96     -632.355         -625.937       
      20377             6           440.85     -632.355         -625.937       
      20581+            4           470.74     -632.355         -625.937       
      20733+            3           500.63     -632.355         -625.937       
      20890+            6           530.54     -629.909         -625.937       
      21147             3           560.44     -629.909         -625.937       
      21511+            4           590.34     -629.909         -625.937       
      21744+            7           620.23     -629.590         -625.937       
      23558            10           650.12     -629.590         -625.937       
      25403+            3           680.02     -629.286         -625.937       
      25588             2           709.91     -629.286         -625.937       
      29578             6           739.79     -629.286         -625.937       
      33891            11           769.68     -629.286         -625.937       
      38576             7           799.56     -628.931         -625.937       
      42943             9           829.45     -628.913         -625.937       
      47521             5           859.33     -628.479         -625.937       
      52245             6           889.22     -626.803         -625.937       
      52491             0           890.73     -626.000         -625.937       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   894.26
 Total CPU time used:               890.84

 Total no. of BaR iterations:   52491
 Best solution found at node:     784
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -219.209
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -221.371
 Preprocessing found feasible solution with value -367.144
 Preprocessing found feasible solution with value -621.625
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            22.18     -637.154         -621.625       
          9+            2            52.09     -635.610         -621.625       
        747            15            81.98     -635.482         -621.625       
       2704+            8           111.89     -635.482         -621.625       
       3511            11           142.12     -635.482         -621.625       
       7377            15           174.50     -635.482         -621.625       
       9598+            9           204.40     -634.979         -621.625       
       9776+            6           234.29     -634.979         -621.625       
       9929             8           264.19     -634.979         -621.625       
      10126+            9           294.09     -634.979         -621.625       
      10309+            8           324.00     -634.979         -621.625       
      12097             8           353.89     -634.979         -621.625       
      15734            17           383.78     -634.979         -621.625       
      19761             7           414.61     -634.979         -621.625       
      24087             6           444.50     -634.979         -621.625       
      28039            10           474.39     -634.979         -621.625       
      32046            12           504.27     -634.253         -621.625       
      36069            13           534.16     -634.253         -621.625       
      40299            19           564.05     -634.253         -621.625       
      44584            10           593.94     -634.253         -621.625       
      49072            15           623.82     -634.253         -621.625       
      53617            20           653.71     -634.253         -621.625       
      54450+            6           683.61     -634.253         -621.625       
      54922             7           713.50     -632.062         -621.625       
      58190            11           743.39     -632.062         -621.625       
      62056             9           773.28     -632.062         -621.625       
      65539            11           803.17     -632.062         -621.625       
      69232            11           833.06     -632.062         -621.625       
      73488            11           862.94     -632.062         -621.625       
      77845             9           892.83     -632.062         -621.625       
      82076            20           922.72     -632.062         -621.625       
      86397            19           952.61     -632.062         -621.625       
      88464+            4           982.50     -632.062         -621.625       
      88517             0          1004.24     -621.687         -621.625       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1008.12
 Total CPU time used:              1004.31

 Total no. of BaR iterations:   88517
 Best solution found at node:     142
 Max. no. of nodes in memory:      27
 
 All done
===========================================================================



*****Running Instance #565*****


objective value: -625.937328044
objective bound: -625.999928037
BARON solution time: 894.26

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.268712071808591
 0.0
 0.0
 0.7312879276903791
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9478169157308183
 0.0
 0.0
 1.0521830845556144
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4555687349153089
 0.18249480861773115
 0.0
 0.0
 0.0
 0.0
 4.4922481814769535
 1.799535194822961
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.280513640900983
 0.7117509956201489
 0.015858388638113775
 0.0
 0.0
 0.0
 0.6425351911401664
 1.6303130947463387
 0.036324696129782744
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7500000000429626
 2.2500000000667577
 0.0
 0.06953241289530318
 0.20859723861538274
 0.0
 0.545601120813398
 1.636803362383717
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.634866466509031
 1.9045993994684365
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4446773630685161
 0.8381810177358024
 0.717141619205896
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.9891626975263255
 2.5267565672161623
 0.0
 0.0
 0.0
 0.9085808574287928
 0.5754998786664831
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4672124987328187
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5450636782543001
 0.2725318390161378
 0.0
 0.0
 1.4549363219613316
 0.727468160679143
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.44432053554887835
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.555679465287598
 1.0
 0.44432053495420964
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5158483233640156
 0.7579241608189539
 0.0
 0.48415167697321804
 0.24207583820968867
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26562400950643844
 0.6903276161882961
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8517791134320526
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5431895685199744
 0.0
 0.0
 0.0
 1.734375989143629
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21254242290262734
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999994319944
 0.0
 2.721870349221223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.456810432059831
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5556794644403455
 0.0
 1.1022564461138304
 0.1618189825292606
 1.532787500215754
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7874575771366313
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.30967237948331683
 1.0769511681059938
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37764688261566526
 0.0
 0.0
 0.0
 0.0
 0.1776757545134082
 0.0
 0.0
 5.282858380512051
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.273772484830256
 0.6380635435114806
 0.9559516255566285
 0.0
 0.0
 3.0
 0.72622751539627
 0.0
 3.0
 0.0
 0.0
 0.2781296514942889
 0.0
 0.0
 0.0
 6.515919264649739
 0.0
 1.0081230251592457
 0.0
 3.0
 0.817595517270438
 2.1824044831869465
 0.0
 1.4840807360519985
 0.0
 2.4443205362885054
 0.46721249897625317
 1.2687120726846566
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7312879282221165
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1824044826404747
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.309172982016288
 0.0
 0.0
 6.291783376344827
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.5394658659624723
 0.0
 0.0
 3.851779113801704
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 0.8517791133987815
 0.0
 1.0
 0.26562401121455476
 0.6903276206366018
 0.0
 0.0
 2.0
 0.9999999989637276
 0.0
 1.55567946516006
 0.9999999999998332
 0.4443205349338382
 2.0
 0.0
 0.0
 0.0
 0.44432053553923123
 0.0
 0.0
 2.0
 0.9999999996755153
 0.46721250012766374
 0.0
 0.0
 4.897743554629322
 3.1022564456701973
 0.0
 0.0
 1.4446773631225935
 0.8381810177789318
 0.7171416192469139
 2.0
 6.0
 0.0
 2.0
 0.999999999980755
 0.0
 0.0
 0.9230488321141774
 2.342064090556471
 0.05218308472352848
 0.0
 4.9478169162910435
 1.9820300033996907
 1.9478169155980363
 0.0
 0.0
 1.0521830844956157
 1.9999999995771576
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7579241616201862
 0.09207469528972201
 0.9999999935535367
 0.0
 0.0
 0.3749999999982759
 0.24207583846766853
 0.0
 1.0
 0.0
 0.0
 0.03476620642927512
 0.0
 0.0
 0.0
 0.8144899080675471
 0.0
 0.3038990258596213
 0.0
 1.0
 0.27253183910245027
 0.27280056038698797
 0.0
 0.18551009199827845
 0.0
 0.9999999999939441
 0.999999997013937
 0.6343560360394738
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.36564396392355636
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7274681609226037
 0.0
 0.9999999999791608
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6961009740599119
 0.0
 0.0
 0.90792530473135
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3174332332333507
 0.0
 0.0
 1.0



=====Finished running Instance #565=====




*****Running Instance #566*****


objective value: -621.625328414
objective bound: -621.68749716
BARON solution time: 1008.11

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1549721300379971
 1.8450278702768528
 0.0
 0.7793685617612147
 1.245014213130785
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999999961405
 0.0
 0.0
 1.0000000005215297
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.89060839942052
 1.7343650394010055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1093916011882725
 1.2656349605298522
 0.3658025745730024
 1.1734820369907957
 0.0
 0.0
 0.0
 0.0
 0.7147255437297001
 2.2928148822461547
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8931198609610569
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6646105292088046
 1.993831587484038
 0.0
 0.45742483521138927
 1.372274505528935
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8779646358929261
 2.6338939075055086
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9137086480516031
 0.08629135204969114
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.285040106868048
 1.3667197174612888
 0.0
 0.061626984501906505
 0.0
 1.7149598941690243
 0.5469889297554691
 0.0
 0.02466436816980079
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7802004398832535
 0.39010021988513155
 0.0
 0.0
 1.2197995603779463
 0.609899780100507
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8251604760838696
 0.0
 0.0
 0.0
 0.5548450893081539
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4451549116651308
 0.9660262216666041
 0.5888188669662231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3716851105916552
 0.6408106070747845
 0.0450319480960253
 0.6283148897996154
 0.29353008416994075
 0.020627360672612356
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27512843858723574
 0.6831178277108279
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10667521020841798
 0.12860662716659615
 0.0
 0.053337605104064975
 0.0
 0.0
 0.0
 0.0
 1.8933247900939132
 2.2825745073197052
 0.0
 0.9466623950481277
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.17483952461592353
 1.6834086109726563
 0.0
 0.0
 0.0
 1.7248715617834083
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31300221720142285
 0.0
 1.7445254485275383
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3165913898947022
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6199944347735907
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6869977831684672
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31688217251137707
 0.9194718820224845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10688013992001576
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06565930934036783
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03397377892059592
 1.0791411171224827
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.057527665762465
 4.624973438767602
 0.958246266100609
 0.0
 0.0
 0.0
 0.9424723346421685
 0.0
 3.0
 0.0
 0.0
 2.6584421166627625
 0.0
 0.0
 0.0
 5.713386808692024
 0.0
 1.5392846115309566
 0.0
 3.0
 1.1703006597683852
 1.8296993407232887
 0.0
 2.2866131920382355
 0.0
 2.380005566013881
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.02438277485143
 0.288619442474036
 0.0
 0.0
 2.893119860890619
 0.0
 0.0
 1.8296993404784534
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0075404259120915
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.511858543351261
 3.375026561679504
 0.0
 5.122561692365345
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.411181134353049
 0.0
 1.0
 0.27512843861075315
 0.6831178277693358
 0.0
 0.0
 2.0
 0.934340691153725
 0.06565930876224381
 1.445154911524176
 0.9660262215723663
 0.5888188669087645
 1.8251604759491444
 0.0
 0.0
 0.0
 0.5548450892665192
 0.0
 0.0
 2.0
 0.999999999953369
 0.0
 0.0
 0.0
 6.0
 1.9137086470757483
 0.0
 0.0862913526660011
 2.0
 0.9137086479967438
 0.08629135204451044
 2.0
 6.0
 0.0
 1.893119860772803
 0.9999999999966886
 0.0
 0.0
 1.0805281182665007
 3.4662969191188444
 0.0
 0.0
 5.000000000431248
 2.9999999998242983
 1.9999999998255509
 0.0
 0.0
 1.0000000004534917
 1.9343406917233148
 3.0900420832852444
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6858425552284537
 0.5781216798343078
 0.9999999999142251
 0.0
 0.0
 0.0
 0.314157444868942
 0.0
 1.0
 0.0
 0.0
 0.3323052645708991
 0.0
 0.0
 0.0
 0.7141733510740974
 0.0
 0.3385405417863489
 0.0
 1.0
 0.3901002199032125
 0.22871241758080663
 0.0
 0.2858266489999293
 0.0
 1.0
 0.08611356850045426
 0.5970882662916296
 0.0
 0.13572699205332037
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40291173374805006
 0.05333760509916408
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6098997801290543
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6614594582477525
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7781594394462253
 0.0
 0.0
 0.43898231790592684
 0.4218783202011768
 0.0
 0.9466623949561676



=====Finished running Instance #566=====




