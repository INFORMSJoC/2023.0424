===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -223.012
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.037
 Preprocessing found feasible solution with value -635.591
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            17.47     -641.939         -635.591       
         41+            9            48.88     -640.920         -635.591       
        145+            7            78.77     -640.920         -635.591       
        373+            7           108.66     -640.920         -635.591       
       3069            10           138.56     -640.920         -635.591       
       7049            10           168.45     -640.920         -635.591       
       8865+            6           198.35     -640.920         -635.591       
       9041+            5           228.25     -639.632         -635.591       
       9371             5           258.15     -638.324         -635.591       
       9413             0           273.99     -635.655         -635.591       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   275.10
 Total CPU time used:               274.07

 Total no. of BaR iterations:    9413
 Best solution found at node:     394
 Max. no. of nodes in memory:      15
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -70.2737
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -618.556
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            12.52     -642.267         -623.146       
          1             1            15.48     -641.287         -623.146       
         20+            5            45.99     -635.550         -623.146       
       1332            10            77.98     -635.550         -623.146       
       5350             8           107.87     -635.550         -623.146       
       8984            11           137.76     -635.550         -623.146       
      12967             9           167.64     -635.550         -623.146       
      17055             9           197.54     -635.550         -623.146       
      21067             7           227.43     -635.550         -623.146       
      25024            14           257.32     -635.550         -623.146       
      29216            19           287.21     -635.550         -623.146       
      32900            16           317.10     -635.550         -623.146       
      34179+           11           346.99     -635.550         -623.146       
      34240+            9           376.89     -635.550         -623.146       
      37362+            8           406.79     -635.550         -623.146       
      37488+            9           436.70     -635.550         -623.146       
      37581+            8           466.60     -635.550         -623.146       
      37698+            8           496.50     -635.550         -623.146       
      37773+            7           526.41     -635.550         -623.146       
      37855+            4           556.32     -635.550         -623.146       
      37984+            6           586.22     -635.550         -623.146       
      38107+            5           616.13     -635.550         -623.146       
      38181+            5           646.04     -635.550         -623.146       
      38245+            6           675.93     -635.550         -623.146       
      38363+            4           705.83     -635.550         -623.146       
      38481+            4           735.74     -635.550         -623.146       
      40476             5           765.65     -635.550         -623.146       
      40549+            2           795.55     -632.270         -623.146       
      40658             7           825.45     -632.028         -623.146       
      40707             8           855.36     -632.028         -623.146       
      40802+           12           885.27     -630.436         -623.146       
      40855+            5           915.16     -630.436         -623.146       
      41004+            5           945.06     -630.436         -623.146       
      41073+            9           974.97     -630.436         -623.146       
      41144+            9          1004.88     -630.436         -623.146       
      41186             5          1034.77     -630.436         -623.146       
      41321+           11          1064.67     -630.399         -623.146       
      41480+           11          1094.59     -630.399         -623.146       
      41579             9          1124.49     -630.399         -623.146       
      45436+            9          1154.39     -630.399         -623.146       
      45646+            6          1184.29     -630.399         -623.146       
      45785+            9          1214.20     -630.399         -623.146       
      45986+            7          1244.12     -630.399         -623.146       
      46111+            6          1274.05     -630.399         -623.146       
      46159+            5          1303.95     -630.399         -623.146       
      46210+            5          1333.86     -630.399         -623.146       
      46330            10          1363.77     -630.399         -623.146       
      46422+            5          1393.66     -630.399         -623.146       
      46496+            8          1423.56     -630.335         -623.146       
      49988            10          1453.45     -630.335         -623.146       
      53841            11          1483.34     -630.335         -623.146       
      56054+            6          1513.23     -629.377         -623.146       
      59424             8          1543.12     -628.612         -623.146       
      63544            12          1573.01     -628.612         -623.146       
      67807            12          1602.90     -628.612         -623.146       
      71793            14          1632.79     -628.612         -623.146       
      76112            13          1662.68     -628.612         -623.146       
      79200             9          1692.58     -627.530         -623.146       
      80641             0          1714.20     -623.209         -623.146       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1720.64
 Total CPU time used:              1714.26

 Total no. of BaR iterations:   80641
 Best solution found at node:    4227
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================



*****Running Instance #473*****


objective value: -635.59145341
objective bound: -635.655018869
BARON solution time: 275.1

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2324406127451997
 0.0
 0.0
 0.7675593664485292
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999937616
 0.0
 0.0
 0.999999999025861
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5420759586434697
 1.664662230793809
 0.45672137117008305
 0.0
 0.0
 0.0
 1.086110073003398
 3.3353377661724
 0.9150925693724788
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21938482083483257
 0.5422248114354965
 0.0
 0.0
 1.6598341563589247e-8
 0.0
 0.9041886632104601
 2.23476503771055
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.884275503640747
 0.99999999531124
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23207497536952748
 0.6962249262106817
 0.0
 0.7499999972542809
 2.2499999915458933
 0.0
 0.44390549022931375
 1.3317164707910678
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5740195350927698
 1.7220586054201863
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999642628312
 0.6841177797626157
 0.3158822102847283
 2.736980684022354e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.26144921820261
 1.9981764279463428
 0.0
 0.0
 0.0
 0.5365899210687618
 0.2037844112564587
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2497163095530632
 0.0
 0.0
 0.0
 0.7502836785674217
 0.0
 0.8162520284318624
 0.40812600863333004
 0.0
 0.0
 1.1837479681222496
 0.5918739759604357
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5583170626485465
 1.5460681009012844e-8
 0.0
 0.0
 0.4206336254167666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5793663715463409
 0.9801959128993192
 0.44043770442820857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.454191516577259
 0.7270957419398087
 1.2167048521486813e-8
 0.5458084724584116
 0.2729042300989042
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1745099175961303e-8
 0.0
 0.0
 0.2759251652613557
 0.7025091174270949
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.392312487946458e-8
 3.54633002695337e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5956398965965144
 4.187748352918373
 0.0
 0.7464734591805268
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.44168292786159025
 0.18013108105918874
 0.0
 1.404360103001505
 0.0
 1.7240748096694472
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25139371237429026
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.99999996898505
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1916828778987216
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0210492864158784
 0.0
 0.20196085028435126
 0.3158822026046506
 0.0
 0.0
 0.0
 0.0
 0.0
 5.999999984024626
 0.0
 0.0
 0.0
 0.0
 0.7486062795159023
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2974908174279585
 0.8764265066064433
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11572449386762604
 2.167637533142451e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2916286315781e-8
 0.0
 0.25352653897736166
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.019804085931885235
 5.684117766793787
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 3.033119602795593e-8
 0.0
 2.1812872706849893
 2.6634595606079046
 0.9784342828557641
 0.0
 0.0
 0.9282999021654448
 0.8187127071267424
 0.0
 2.999999988878554
 0.0
 0.0
 2.999999990874535
 0.0
 0.0
 0.0
 7.259625654853474
 0.0
 0.7616096326166054
 4.943757308454949e-8
 2.9999999979377985
 1.2243780370642474
 1.7756219621438298
 0.0
 0.7403743329148743
 0.0
 1.9789507115028124
 1.249716312923827
 1.2324406209252463
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7675593715373519
 0.0
 0.0
 0.0
 2.88427550320366
 0.0
 2.33494470337502e-8
 1.775621944082237
 0.0
 2.9999999543105345
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.1389537023143843
 0.0
 0.0
 5.336540408547767
 0.0
 0.0
 0.0
 0.0
 0.0
 4.099088391886216e-8
 0.7502836805847312
 0.0
 0.0
 2.2960781419523806
 0.0
 0.0
 5.529861709054439
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.5956398967657806
 4.187748354111
 0.0
 0.7464734593917709
 0.275925189401299
 0.7025091788806117
 0.0
 0.0
 1.9999999977483907
 0.9999999763726467
 1.6727114128853224e-8
 1.5793663725332954
 0.9801959135028377
 0.4404377046845864
 1.5583170678875373
 1.5511284045507332e-8
 0.0
 0.0
 0.42063362685808836
 0.0
 0.0
 1.9999999983279426
 0.9999999854662482
 1.9999999941861313
 0.0
 0.0
 5.798039146829963
 2.2019608418734937
 0.0
 0.0
 1.9999999934704118
 0.6841177897393023
 0.315882214882034
 1.999999998558077
 5.999999995508769
 0.0
 1.8842755051014102
 0.9999999960607844
 0.0
 0.0
 1.1235734917846234
 2.7769898682619347
 0.0
 1.6281860322789907
 4.999999998849259
 1.3718139410802082
 1.999999995002182
 0.0
 0.0
 0.9999999996480923
 1.9999999823743573
 1.215432567633964e-8
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 3.0954040921147205e-8
 0.0
 0.7270957590999524
 0.33293244623556356
 0.9999999125169472
 0.0
 0.0
 0.11603748779795199
 0.2729042365285109
 0.0
 0.9999999993657015
 0.0
 0.0
 0.3749999988579823
 0.0
 0.0
 0.0
 0.9074532069324392
 0.0
 0.19525631606826055
 5.048186341916161e-8
 0.9999999993702602
 0.40812601455428543
 0.22195274530884362
 0.0
 0.09254679168434989
 0.0
 0.9999999966424251
 0.6248581565943175
 0.6162203118046954
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3837796866079372
 0.0
 0.0
 0.0
 0.9999999992177689
 0.0
 0.0
 0.5918739845549897
 0.0
 0.9999999853873995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8047436770484419
 0.0
 0.0
 0.6670675533881615
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3708269874267706e-8
 0.37514184037558884
 0.0
 0.0
 0.2870097677998549
 0.0
 0.0
 0.9999999997122072



=====Finished running Instance #473=====




*****Running Instance #474*****


objective value: -623.146190463
objective bound: -623.208511312
BARON solution time: 1720.63

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0767460464608722
 1.9232539538853317
 0.0
 0.7966019495731926
 1.422868330211659
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8874074072289482
 0.0
 0.5612931534450242
 0.5512994397253597
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14041672288249482
 3.4499796172291095
 1.2475296748727671
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.08134942117751252
 1.9987209441609057
 0.7227473684709073
 0.42615951901553495
 1.5148878734796474
 0.047059051520829835
 0.0
 0.0
 0.0
 0.593461656045045
 2.1096040942469565
 0.06553354178753938
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7500000001112671
 2.2500000001939027
 0.0
 0.4752812595576969
 1.4258437785698996
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7747187406326451
 2.3241562217548695
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9832767081625736
 0.016723291953879133
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.830133627110978
 1.5965819192561277
 0.0
 0.013462622751664077
 0.0
 1.1698663739382937
 0.3866947883357341
 0.0
 0.0032606695532496305
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7325833082915006
 0.366291654090118
 0.0
 0.0
 1.267416691969343
 0.6337083458883241
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6077686740526101
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.392231326931736
 0.9775539673216885
 0.6302147060409876
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5671118027414794
 0.6843169756826322
 0.09923892555168076
 0.43288819765153264
 0.18903101980810988
 0.027413078979909453
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3365862028506657
 0.9089027035550691
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6374508346853052
 3.399508252142932
 0.0
 0.8669559971575301
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3179844957811964
 0.0
 1.3625491656657456
 0.0
 1.6634137974570573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2194702795221693
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.46024936093933255
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3922313259311118
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7805297208523445
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09109729649584786
 0.9803788252656633
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1266520050884098
 0.0
 0.13304400340642195
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.022446033267807558
 2.075861271656523
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3506677039757924
 4.8379260149843715
 1.2454889062088332
 0.0
 0.0
 0.0
 0.6493322964395519
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.440178168952937
 0.0
 1.988106444016012
 0.0
 3.0
 1.0988749623816187
 1.9011250381101787
 0.0
 1.559821831786983
 0.0
 2.607768674857617
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2194702797413086
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.9011250378576672
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.768599292079541
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0988749623459437
 2.8028177338093254
 0.0
 4.903915083887387
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.637450834631877
 3.3995082518331365
 0.0
 0.8669559970828331
 0.3365862029360127
 0.9089027037874753
 0.0
 0.0
 2.0
 0.8733479954052576
 0.12665200451924433
 1.392231326794395
 0.9775539672252822
 0.6302147059788685
 2.0
 0.0
 0.0
 0.0
 0.6077686739977842
 0.0
 0.0
 2.0
 0.9999999999463469
 0.0
 0.0
 0.0
 6.0
 1.9832767074416824
 0.0
 0.01672329230695287
 2.0
 0.9832767081008039
 0.01672329195287337
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0196211750221598
 3.624491967586422
 0.11259259330533977
 0.2217661440524953
 5.448700561209645
 1.9702770432782293
 1.8874074070859397
 0.0
 0.5612931533999834
 0.5512994396810572
 1.8733479959624704
 3.346122283966396
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7835559012935291
 0.6331747502863755
 0.9999999997432181
 0.0
 0.0
 0.0
 0.21644409880443
 0.0
 1.0
 0.0
 0.0
 0.37500000002061973
 0.0
 0.0
 0.0
 0.805022271106715
 0.0
 0.4179586786306142
 0.0
 1.0
 0.3662916541096976
 0.23764062975284914
 0.0
 0.1949777289706509
 0.0
 1.0
 0.1911139520375827
 0.5747709708940173
 0.0
 0.23271591055335725
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42522902914509525
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6337083459223967
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5820413214080888
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5761701374090601
 0.0
 0.0
 0.3873593702805315
 0.36682524974674313
 0.0
 1.0



=====Finished running Instance #474=====




