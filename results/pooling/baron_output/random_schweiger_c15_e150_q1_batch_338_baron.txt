===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -312.149
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -618.220
 Preprocessing found feasible solution with value -627.603
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.98     -635.420         -627.603       
          9             0            33.31     -627.665         -627.603       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    33.59
 Total CPU time used:                33.45

 Total no. of BaR iterations:       9
 Best solution found at node:       1
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -156.782
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -476.195
 Preprocessing found feasible solution with value -629.473
 Preprocessing found feasible solution with value -629.971
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            26.90     -639.355         -629.971       
         62             8            56.80     -638.089         -629.971       
        170+            6            86.70     -638.089         -629.971       
        363+            6           116.59     -638.089         -629.971       
       2354            11           146.48     -638.089         -629.971       
       3834             4           176.39     -638.089         -629.971       
       5964+            4           206.28     -637.752         -629.971       
       6085+            5           236.17     -634.988         -629.971       
       9323            10           266.06     -632.849         -629.971       
      14021            12           295.95     -632.849         -629.971       
      16999             0           319.77     -630.034         -629.971       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   321.07
 Total CPU time used:               319.87

 Total no. of BaR iterations:   16999
 Best solution found at node:    2348
 Max. no. of nodes in memory:      17
 
 All done
===========================================================================



*****Running Instance #675*****


objective value: -627.602509429
objective bound: -627.665275941
BARON solution time: 33.59

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.684677578695012
 0.0
 0.0
 0.3153224199171984
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999927051633
 0.0
 0.0
 1.00000000759956
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3039692625702927
 0.07842473040834616
 0.0
 0.0
 0.0
 0.0
 4.696030730305061
 1.2115861348568755
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09689509637641423
 0.33975532636365935
 0.0
 0.0
 0.0
 0.0
 0.9666438061496156
 3.3894633900348587
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999997051359
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22978181200198528
 0.6893454359376555
 0.0
 0.7499999999418941
 2.249999999751479
 0.0
 0.5202181871452959
 1.5606545613659772
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5000000011017491
 1.5000000032355871
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995079667
 0.8338394793864193
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.296321159346667
 1.3131272267367036
 0.0
 0.1189798262171276
 0.0
 1.703678840754682
 0.5207122532195291
 0.0
 0.04718069365662484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3153224168449287
 0.0
 0.0
 0.0
 0.19806444182678284
 0.0
 0.6127515013901597
 0.3063757504222761
 0.0
 0.0
 1.387248498674253
 0.6936242487195409
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995040734
 0.0
 0.0
 0.0
 0.563058197443816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4369418031782035
 1.0
 0.5630581967351237
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4475884803317487
 0.7237942384175965
 0.0
 0.5524115197873777
 0.2762057592257458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11775163045651578
 0.7820510481949622
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0450838282993336e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35102172246316843
 4.146930939221927
 0.0
 0.7055621356016606
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.6111112981647626
 0.0
 1.6489782778229365
 0.0
 1.8822483677730897
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23997925568549397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999978804277
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3888887019022711
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4369418022947174
 0.0
 0.0
 0.0
 0.4866131409836662
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7600207442460517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2179489379164836
 0.9364610971279528
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2944378647643813
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.999999996187396
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.171382719928594
 0.3823939930012285
 0.8998026785607154
 0.0
 0.0
 0.9191272479702635
 0.8286172794861231
 0.0
 2.9999999999828417
 0.0
 0.0
 2.9999999997460223
 0.0
 0.0
 0.0
 5.728428212403956
 0.0
 0.43665042275715077
 1.1979679335597308e-8
 3.0
 0.9191272518124358
 2.080872748555885
 0.0
 2.271571787678039
 0.0
 2.5630581983290504
 1.3153224170060018
 1.6846775818519417
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3153224205209622
 0.0
 0.0
 0.0
 2.9999999999003157
 0.0
 0.0
 2.080872747393794
 0.0
 2.833839479005223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.356107196307118
 0.0
 0.0
 5.907616865340164
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19806444184962238
 0.0
 0.0
 2.0000000043811412
 0.0
 0.0
 5.2035147973937725
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.3510217224201774
 4.146930939007424
 0.0
 0.705562135541477
 0.11775163252438732
 0.7820510619779448
 0.0
 0.0
 2.0
 0.9999999976582863
 0.0
 1.4369418030809553
 1.0
 0.5630581966858934
 1.9999999999802842
 0.0
 0.0
 0.0
 0.5630581975681457
 0.0
 0.0
 2.0
 0.99999999916238
 1.513386859275894
 0.0
 0.0
 6.0
 1.8338394799657116
 0.0
 0.16616051984403976
 2.0
 0.833839479613471
 0.0
 2.0
 6.0
 0.0
 2.0
 0.9999999996881688
 0.0
 0.0
 1.0635389030202982
 3.72921871814539
 0.0
 0.0
 4.999999993039497
 1.2900108652798385
 1.9999999926315326
 0.0
 0.0
 1.0000000075712259
 1.999999998785514
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7237942401228921
 0.06079385259973383
 0.9999999823764664
 0.0
 0.0
 0.1148909059876792
 0.2762057598811313
 0.0
 1.0
 0.0
 0.0
 0.37499999995678807
 0.0
 0.0
 0.0
 0.7160535265403328
 0.0
 0.09110630189412022
 1.3363981212094605e-8
 1.0
 0.3063757506809925
 0.26010909355928385
 0.0
 0.2839464734513518
 0.0
 0.9999999997649566
 0.8691250414810817
 0.8423387898598382
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15766121005516578
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6936242493035966
 0.0
 0.999999999734235
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9088936976379333
 0.0
 0.0
 0.9392061473695261
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13087495811989985
 0.0
 0.0
 0.25000000053754856
 0.0
 0.0
 1.0



=====Finished running Instance #675=====




*****Running Instance #676*****


objective value: -629.970735867
objective bound: -630.033739239
BARON solution time: 321.06

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1180406321938323
 0.9577999085883223
 0.0
 0.8819593680996072
 0.7555544743369504
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003147018
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.178117807721927
 0.4069367469049536
 0.0
 0.0
 0.0
 0.0
 3.821882193167728
 1.3201263036286595
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1338135319162719
 1.0661390209112929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5667334462846577
 1.700200338817767
 0.0
 0.5146712786516477
 1.5440138359172628
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9185952753632062
 2.7557858260619144
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9754904958876202
 0.024509504066550593
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.43085990589377
 2.5190315563588643
 0.0
 0.0
 0.0
 0.6694901420104267
 0.3806183969329767
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.194362496872808
 0.0
 0.6275432573368992
 0.3137716286188107
 0.0
 0.0
 1.3724567429326373
 0.6862283713577814
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9188145971356148
 0.0
 0.0
 0.0
 0.6020402252872724
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3979597757011462
 0.9365172149423844
 0.6655230096475238
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3883355145790524
 0.6941677569881413
 0.0
 0.6116644858407703
 0.30583224278758886
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7259763431233863
 0.8322055680833993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0405993356957475
 3.6074139413766004
 0.0
 0.8568213245682073
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.08118540359518797
 1.3592960627130029
 0.0
 0.959400664686946
 0.0
 1.2740236572381087
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2870163036297675
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6407039380194268
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4791451777198552
 0.0
 0.8996499534926231
 0.024509504754287398
 1.8056375020702722
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7129836967275842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16779443215645948
 0.8661864684064973
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5550658492136051
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1431786759790439
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06348278563611212
 4.262136114143663
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.082503271759398
 1.5850545546223447
 1.5581819110127566
 0.0
 0.0
 0.0
 0.9174967287095346
 0.0
 3.0
 0.0
 0.0
 2.2669337850574904
 0.0
 0.0
 0.0
 6.949891461994631
 0.0
 0.0
 0.0
 3.0
 0.9413148859557099
 2.058685114528731
 0.0
 1.0501085388871931
 0.0
 2.5208548230542984
 0.0
 2.0758405407171994
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6375138423813362
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0586851142904186
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1999525527539987
 0.0
 0.0
 5.142008496802705
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19436249678265524
 0.0
 0.0
 3.674381101351091
 0.0
 0.0
 5.504834601543856
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.040599335608766
 3.6074139410528048
 0.0
 0.8568213244983278
 0.7259763431461888
 0.8322055681100797
 0.0
 0.0
 2.0
 0.999999999661665
 0.0
 1.3979597755596456
 0.9365172148513876
 0.66552300958574
 1.9188145969473438
 0.0
 0.0
 0.0
 0.6020402252228992
 0.0
 0.0
 2.0
 0.9999999999412188
 0.19436249831399474
 0.0
 0.0
 5.100350047432154
 2.8996499530266258
 0.0
 0.0
 2.0
 0.9754904958762206
 0.02450950407414297
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.1338135318778486
 1.0661390208749038
 0.0
 0.0
 5.000000000636704
 1.7270630504503215
 2.0
 0.0
 0.0
 1.0000000002407594
 2.0
 1.7133543828297824
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6941677572276649
 0.23562356151442868
 0.9999999999670464
 0.0
 0.0
 0.0
 0.3058322428932139
 0.0
 1.0
 0.0
 0.0
 0.2833667231199723
 0.0
 0.0
 0.0
 0.8687364327353719
 0.0
 0.0
 0.0
 1.0
 0.31377162863826935
 0.25733563930439135
 0.0
 0.13126356735801908
 0.0
 1.0
 0.0
 0.559020316045002
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44097968400871385
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6862283714005872
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.764376438536257
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999925806593
 0.0
 0.0
 0.45929763765263587
 0.0
 0.0
 1.0



=====Finished running Instance #676=====




