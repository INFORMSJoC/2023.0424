===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -138.141
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -621.188
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.56     -637.793         -621.188       
         39+            5            45.48     -633.590         -621.188       
        192+            6            75.37     -633.590         -621.188       
        395+            5           105.26     -633.590         -621.188       
        495             6           135.17     -633.590         -621.188       
        672            10           165.07     -630.228         -621.188       
        862+            7           194.97     -630.228         -621.188       
       1025             6           224.86     -630.228         -621.188       
       2394             9           255.26     -630.228         -621.188       
       3767            14           285.14     -630.228         -621.188       
       6978            14           315.04     -630.228         -621.188       
       7318+            6           344.92     -630.228         -621.188       
       9135            14           374.82     -630.228         -621.188       
      12606            13           404.71     -630.228         -621.188       
      15895            11           434.61     -630.228         -621.188       
      18931             8           464.50     -630.228         -621.188       
      19395+            8           494.40     -630.228         -621.188       
      19559+            5           524.31     -630.228         -621.188       
      21154             8           554.20     -629.648         -621.188       
      24242             5           584.10     -629.648         -621.188       
      26952            10           613.99     -629.131         -621.188       
      31497             9           643.88     -628.913         -621.188       
      35959             6           673.77     -628.826         -621.188       
      40129             6           703.65     -628.731         -621.188       
      44582             9           733.54     -628.628         -621.188       
      47519             0           756.15     -621.250         -621.188       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   759.33
 Total CPU time used:               756.47

 Total no. of BaR iterations:   47519
 Best solution found at node:     126
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -203.960
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -622.613
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.38     -632.799         -622.613       
         15+            1            48.28     -622.947         -622.613       
         15             0            49.03     -622.676         -622.613       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    49.32
 Total CPU time used:                49.12

 Total no. of BaR iterations:      15
 Best solution found at node:       5
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================



*****Running Instance #977*****


objective value: -621.187734257
objective bound: -621.249859241
BARON solution time: 759.33

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2121432277529698
 1.6434913813977108
 0.0
 0.7878567723761316
 1.0682201455495652
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000000042397
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.88062891877848
 1.6837284493700868
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.119371082014319
 1.2387730201156977
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0118651935224792
 1.1270787597425707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9409678845949059
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7499999990309825
 2.249999997006005
 0.0
 0.47885028677294195
 1.4365508602990478
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7711497142697668
 2.313449142717129
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8556346094722495
 0.1443653904096595
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.27445401864076
 1.4248180051829527
 0.0
 0.0
 0.0
 1.7255459810272449
 0.5751819931904472
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09999089005194252
 0.0
 0.7230659022469784
 0.3615329510394967
 0.0
 0.0
 1.276934098006488
 0.6384670488546436
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999988676938
 0.0
 0.0
 0.0
 0.6108050710568858
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3891949294390136
 1.0
 0.6108050707851174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3558469484752558
 0.6779234737070523
 0.0
 0.6441530517608465
 0.32207652561644207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6218106509625135
 0.7883313415748094
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.67917418159635
 2.4666934607706708
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5180048429438562
 0.0
 0.32082581874381144
 0.0
 1.3781893489335766
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2934776182454563
 0.0
 1.5866660418584684
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998327869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4819951577030649
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38919492934563105
 0.0
 0.0
 0.14436539077521732
 1.9000091099079937
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7065223820664367
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2116686580417449
 0.988134806626872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.059032116033995455
 0.0
 0.0
 0.0
 0.0
 2.4837263125756066
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5572570417582425
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.033770422487494
 4.564357368263556
 1.410141992736177
 0.0
 0.0
 0.0
 0.966229577572437
 0.0
 3.0
 0.0
 0.0
 2.999999996127427
 0.0
 0.0
 0.0
 5.6992720245134
 0.0
 0.0
 0.0
 3.0
 1.0845988532864752
 1.9154011471757177
 0.0
 2.3007279747303264
 0.0
 2.610805071412327
 0.0
 2.8556346091591607
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8560769179529952
 0.0
 0.0
 0.0
 2.940967884990389
 0.0
 0.0
 1.9154011468611316
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1389439533417236
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09999089005896765
 0.0
 0.0
 3.084598857076348
 3.3581441022399616
 0.0
 5.145867642602234
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.679174181549353
 2.4666934606893323
 0.0
 1.0
 0.6218106514353086
 0.7883313421729676
 0.0
 0.0
 2.0
 0.9999999993293909
 0.0
 1.3891949293105563
 1.0
 0.6108050707337187
 2.0
 0.0
 0.0
 0.0
 0.6108050714359584
 0.0
 0.0
 2.0
 0.999999999863857
 0.09999089045713337
 0.0
 0.0
 6.0
 1.9999999987763226
 0.0
 0.0
 2.0
 0.8556346094983373
 0.1443653903943379
 2.0
 5.999999999987356
 0.0
 1.9409678846396956
 1.0
 0.0
 0.0
 1.0118651936381515
 1.1270787598716148
 0.0
 0.0
 5.000000000801186
 2.9225014695220572
 2.0
 0.0
 0.0
 1.0000000000537599
 2.0
 2.711711526929259
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6779234741946258
 0.5761257836632833
 0.9999999992480002
 0.0
 0.0
 0.0
 0.3220765258652741
 0.0
 1.0
 0.0
 0.0
 0.3749999995030686
 0.0
 0.0
 0.0
 0.7124090030542212
 0.0
 0.0
 0.0
 1.0
 0.3615329510922684
 0.23942514338438192
 0.0
 0.28759099682427325
 0.0
 0.9999999993824912
 0.0
 0.6060716138419615
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39392838616627196
 0.0
 0.0
 0.0
 0.9999999999989275
 0.0
 0.0
 0.638467048948028
 0.0
 0.9999999999962316
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999998867317
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999959458942
 0.0
 0.0
 0.3855748571216572
 0.4238742163348474
 0.0
 1.0



=====Finished running Instance #977=====




*****Running Instance #978*****


objective value: -622.613398087
objective bound: -622.675665639
BARON solution time: 49.32

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.5326371943408943
 0.0
 0.0
 0.4673628023229924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9914964839880573
 0.0
 0.0
 1.0085035154850452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3058579720099686
 0.12672464094147087
 0.0
 0.0
 0.0
 0.0
 4.685638513008829
 1.941377738917418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0157587860120936
 0.8834645088683202
 0.008503515619213082
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999996932487
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2745034508077008
 0.823510352336393
 0.0
 0.7499999998757978
 2.249999999530327
 0.0
 0.47579763610703396
 1.4273929082078387
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4996989133965753
 1.499096740072977
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999924500884
 0.9743665255483532
 0.02563348084774543
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.1946939320019965
 3.1672101514830184
 0.0
 0.0
 0.0
 0.36357673727486073
 0.2745191787100839
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07995532779134502
 0.0
 0.7312063043119774
 0.36560315166620394
 0.0
 0.0
 1.2687936957085761
 0.6343968470056895
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999988388366
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.474354113648457
 0.9106942354919989
 0.6149516504164106
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3654632639086468
 0.6827316284659527
 0.0
 0.6345367360718674
 0.31726836641221035
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47956503031004116
 0.5308175553807776
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1339139249914791
 3.316945970783932
 0.0
 0.909729954570776
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3619040830248377
 0.0
 0.8660860753309829
 0.0
 1.5204349675941538
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29117448546088703
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999975675573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.062467936959899786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6380959166957804
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999986939663
 0.0
 1.4417293307971188
 0.025633473451138918
 1.920044670151279
 0.0
 0.0
 0.0
 0.5256458852689881
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7088255145389855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4691824414735983
 0.9842412131429251
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6748061606720224
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09027004576815026
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0893057649625322
 5.9118985818820615
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.048194894722444
 0.4325826129802576
 1.010382585602067
 0.0
 0.0
 1.0980138031956246
 0.9518051035930403
 0.0
 2.9999999995578985
 0.0
 0.0
 2.9999999994563744
 0.0
 0.0
 0.0
 7.361904083953719
 0.0
 0.0
 0.0
 3.0
 1.0968094559781816
 1.9031905443785047
 0.0
 0.6380959160319873
 0.0
 2.0000000019205695
 0.0
 1.532637194541377
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4673628023853078
 0.0
 0.0
 0.0
 2.9999999999253264
 0.0
 0.0
 1.9031905427142657
 0.0
 2.99999999884623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.907726810499627
 0.0
 0.0
 6.627016252227553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07995532780698335
 0.0
 0.0
 1.9987956535345228
 0.0
 0.0
 5.360589850323057
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.1339139249269676
 3.3169459706255178
 0.0
 0.9097299545149746
 0.47956503268329115
 0.5308175580077439
 0.0
 0.0
 2.0
 0.9999999949690115
 0.0
 1.4743541135443594
 0.9106942354265531
 0.6149516503698451
 1.9999999994940363
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999987083941
 0.07995533007825936
 0.0
 0.0
 4.558270669379383
 3.4417293302743532
 0.0
 0.0
 1.9999999932317656
 0.9743665259366593
 0.02563348083823458
 2.0
 5.9999999999724825
 0.0
 2.0
 0.9999999996977703
 0.0
 0.0
 1.0157587869862075
 0.8834645097155324
 0.008503515600649214
 0.0
 4.991496485098437
 2.068102379886409
 1.9914964839400766
 0.0
 0.0
 1.0085035154748918
 1.9999999969369031
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6827316319101666
 0.0612758063487304
 0.99999999505116
 0.0
 0.0
 0.13725172539042135
 0.31726836801756
 0.0
 1.0
 0.0
 0.0
 0.3749999999311693
 0.0
 0.0
 0.0
 0.9202380104820572
 0.0
 0.0
 0.0
 1.0
 0.3656031521411153
 0.23789881803738175
 0.0
 0.07976198949890073
 0.0
 0.999999999673646
 1.734614086087498e-8
 0.7663185983444847
 0.0
 1.1255982039919878e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2336814015197741
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6343968478279246
 0.0
 0.9999999996154945
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999990412666
 0.0
 0.0
 0.9387241936358321
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.99999997139789
 0.0
 0.0
 0.24984945668174793
 0.0
 0.0
 1.0



=====Finished running Instance #978=====




