===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -132.801
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -393.283
 Preprocessing found feasible solution with value -628.829
 Preprocessing found feasible solution with value -628.829
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            20.10     -635.471         -628.829       
         13+            3            50.03     -633.659         -628.829       
        287             9            81.77     -633.520         -628.829       
*       463             8            89.56     -633.520         -628.867       
       1870            11           119.46     -633.520         -628.867       
       5443             9           149.36     -633.520         -628.867       
       9576            13           179.26     -633.520         -628.867       
      13441             7           209.15     -633.520         -628.867       
      17420            11           239.05     -633.520         -628.867       
      21079+            8           268.96     -633.520         -628.867       
      21527             9           298.85     -633.520         -628.867       
      23935             9           328.74     -633.520         -628.867       
      28081            13           358.64     -633.520         -628.867       
      31419            11           388.53     -633.520         -628.867       
      36036            11           418.43     -633.520         -628.867       
      40588             7           448.32     -633.520         -628.867       
      44872             7           478.21     -633.520         -628.867       
      48824             5           508.11     -633.520         -628.867       
      53141            11           538.01     -633.520         -628.867       
      56849+            8           567.91     -633.520         -628.867       
      60854            10           597.80     -633.520         -628.867       
      65110            11           627.70     -633.520         -628.867       
      69587            12           657.59     -633.520         -628.867       
      73930            10           687.48     -633.520         -628.867       
      78410            11           717.38     -633.520         -628.867       
      82628            10           747.28     -633.520         -628.867       
      87272             9           777.17     -633.520         -628.867       
      91631            10           807.07     -633.520         -628.867       
      95893             6           836.96     -633.520         -628.867       
      99992            10           866.86     -633.520         -628.867       
     104324             9           896.75     -633.520         -628.867       
     108611            10           926.65     -633.520         -628.867       
     113048             9           956.54     -633.520         -628.867       
     117248            11           986.44     -633.520         -628.867       
     121688            11          1016.33     -633.520         -628.867       
     126129             9          1046.23     -633.520         -628.867       
     130611             9          1076.12     -633.520         -628.867       
     134823             8          1106.01     -633.520         -628.867       
     139483            12          1135.91     -633.520         -628.867       
     143943             7          1165.80     -633.520         -628.867       
     148759             8          1195.70     -633.393         -628.867       
     153671            10          1225.60     -633.393         -628.867       
     158702            10          1255.49     -633.393         -628.867       
     163366             7          1285.39     -633.393         -628.867       
     164576             9          1315.28     -633.393         -628.867       
     169423             7          1345.18     -633.206         -628.867       
     174436             9          1375.07     -633.206         -628.867       
     179130            10          1404.96     -632.968         -628.867       
     184108            15          1434.85     -632.968         -628.867       
     186565+            4          1464.75     -632.968         -628.867       
     186594+            7          1494.65     -630.508         -628.867       
     186954+            4          1524.55     -630.471         -628.867       
     188626            14          1554.45     -630.048         -628.867       
     192570+            3          1584.35     -630.048         -628.867       
     192577             0          1588.19     -628.929         -628.867       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1594.03
 Total CPU time used:              1588.29

 Total no. of BaR iterations:  192577
 Best solution found at node:     463
 Max. no. of nodes in memory:      20
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -188.412
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -617.994
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            17.38     -634.109         -617.994       
         35+            6            47.29     -628.731         -617.994       
        167             8            77.19     -628.731         -617.994       
       2016            16           107.11     -628.731         -617.994       
       2065+            7           137.52     -628.731         -617.994       
       2223+            7           167.42     -628.731         -617.994       
       2448+            6           197.31     -628.731         -617.994       
       2538+            7           227.21     -628.731         -617.994       
       2662+            6           257.10     -628.731         -617.994       
       2933+           10           287.01     -628.731         -617.994       
       5016             9           316.91     -628.731         -617.994       
       8718             9           346.81     -628.731         -617.994       
       9568+            6           376.72     -627.390         -617.994       
       9815             8           406.61     -627.390         -617.994       
      12266             9           436.51     -627.390         -617.994       
      15335             9           466.40     -627.390         -617.994       
      18989             4           496.29     -627.390         -617.994       
      19269+            8           526.20     -627.390         -617.994       
      19530             6           556.09     -627.390         -617.994       
      19636             6           586.01     -627.390         -617.994       
      19735+            4           615.94     -627.390         -617.994       
      19822             7           645.83     -624.848         -617.994       
      21899            11           675.72     -624.836         -617.994       
      25749             8           705.62     -624.836         -617.994       
      26416+            5           735.52     -624.283         -617.994       
      29876            14           765.41     -624.234         -617.994       
      32047+            3           795.32     -624.234         -617.994       
      32100+            3           825.24     -622.074         -617.994       
      32151             0           848.04     -618.056         -617.994       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   851.19
 Total CPU time used:               848.12

 Total no. of BaR iterations:   32151
 Best solution found at node:   30580
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================



*****Running Instance #431*****


objective value: -628.866524991
objective bound: -628.929417926
BARON solution time: 1594.03

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1521268644619913
 0.0
 0.0
 0.8478731357808759
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9369565765220662
 0.0
 0.0
 1.0630434239122337
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.249862602834083
 0.7683656285713081
 0.0
 0.0
 0.0
 0.0
 3.6870939744069533
 2.266678171523993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2970049448206176
 0.7413756371602958
 0.017705017450798246
 0.0
 0.0
 0.0
 0.7605601619283897
 1.898489518378484
 0.045338406562074295
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.042668640156958496
 0.12800592048192339
 0.0
 0.7500000001137408
 2.250000000210329
 0.0
 0.5846998654995809
 1.7540995963900443
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6226314945281826
 1.8678944834708215
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9332185842015943
 0.45951990793765235
 0.6072615079382568
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.791392759949354
 1.5507243365856556
 0.0
 0.0
 0.0
 1.8863453981469975
 0.7715375064856731
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14169284296981938
 0.1903546332552899
 0.0
 0.0
 0.0
 0.0
 0.4408003591146403
 0.22040017951858468
 0.0
 0.0
 1.5591996411471287
 0.7795998204364138
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4360792133616025
 0.0
 0.0
 0.0
 0.5260477840717336
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4739522169154053
 0.8832644705970343
 0.6427833127841421
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5646108512609147
 0.7823054252339575
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43538914911028026
 0.2176945744439873
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.40739297764002935
 0.7248460439536716
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.322172888569993
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.563920787347224
 1.5270304346613106
 0.0
 0.0
 0.0
 1.5926070227226845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4729695661439389
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0378730026534522
 0.0
 0.3222618433683732
 0.5404800927107433
 1.8583071574276224
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.8096453671304963
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.27515395626492845
 0.9424348935837582
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06678141647222897
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11673552998192384
 5.392738493167803
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.346916276746136
 2.0182282313962974
 1.1322390213971056
 0.0
 0.0
 0.1706745606310369
 0.0
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.342117096316041
 0.0
 1.0560855994317118
 0.0
 3.0
 0.661200538633225
 2.338799461860883
 0.0
 2.65788290454743
 0.0
 1.9621269981072882
 0.3320474762251093
 1.1521268643624847
 0.6530837236236808
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8478731357084619
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.3387994615835423
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.7043880868689483
 0.0
 0.0
 5.953772145905817
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.49052597796699
 0.0
 0.0
 5.322172888768631
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.3221728883868074
 0.0
 1.0
 0.4073929776710692
 0.7248460440104159
 0.0
 0.0
 2.0
 0.9999999995932215
 0.0
 1.4739522167706904
 0.8832644705103122
 0.6427833127210308
 1.436079213231594
 0.0
 0.0
 0.0
 0.5260477840212974
 0.0
 0.0
 2.0
 0.9999999999227595
 0.1416928429643989
 0.19035463324801533
 0.0
 5.677738157611717
 2.3222618428822677
 0.0
 0.0
 1.9332185842131246
 0.4595199079411736
 0.6072615079427062
 2.0
 6.0
 0.0
 2.0
 0.9999999999992565
 0.0
 0.0
 1.0575651067060738
 2.6398651554321497
 0.0630434240098797
 0.0
 4.936956577054908
 3.0350437999821014
 1.936956576379877
 0.0
 0.0
 1.0630434238333963
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7823054255534237
 0.2531645930698936
 0.9999999999192043
 0.0
 0.0
 0.02133432007929032
 0.0
 0.0
 1.0
 0.0
 0.0
 0.37500000002283007
 0.0
 0.0
 0.0
 0.6677646370267399
 0.0
 0.28083844950740594
 0.0
 1.0
 0.2204001795353922
 0.29234993272115073
 0.0
 0.332235363057434
 0.0
 1.0
 1.0
 0.5760634321817398
 0.21769457453333188
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42393656785405975
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7795998204970321
 0.0
 0.9999999999937578
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7191615505329079
 0.0
 0.0
 0.7468354069677092
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31131574723422856
 0.0
 0.0
 1.0



=====Finished running Instance #431=====




*****Running Instance #432*****


objective value: -617.993953005
objective bound: -618.055758574
BARON solution time: 851.18

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1334591281637931
 1.8665408717840068
 0.0
 0.8665408721019305
 1.4269892179260764
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002944371
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.9691899386674683
 1.326058907948906
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0308100621883027
 0.9069725510809323
 0.20771197356028118
 0.7125434736577646
 0.0
 0.0
 0.0
 0.0
 0.89060203294595
 3.055156885395424
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8193414837836783
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.047684737275462616
 0.14305421182186714
 0.0
 0.7500000000977473
 2.2500000002235687
 0.0
 0.5254225918682458
 1.5762677755426535
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6768926710064707
 2.030678012951968
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9710054631977941
 0.028994536704962205
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.351662619548402
 1.429525132182637
 0.0
 0.0210290739996045
 0.0
 1.6483373814819946
 0.5414803304280447
 0.0
 0.007965463272723171
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5988730887649437
 0.2994365443343354
 0.0
 0.0
 1.4011269114963245
 0.700563455635542
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7387058203985598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2612941805817524
 0.9332984877415258
 0.8054073319701877
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2977349739599253
 0.6488674865298805
 0.0
 0.7022650264253636
 0.3511325129691213
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2377894595849238
 0.7735779312054326
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7712454857569905
 2.961561210520894
 0.0
 0.9931758665600398
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5266025314231952
 0.0
 1.2287545146067649
 0.0
 1.762210540759896
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3106706152499462
 0.0
 1.6359318456170127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47339746914591757
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2612941795720424
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6893293851333627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22642206891532726
 0.9016859938215073
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.18065851704852218
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.00682413401610402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06670151284357066
 1.0415435290737576
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 1.9466024606806671
 4.295248846738093
 1.0113673905928176
 0.0
 0.0
 0.19073894909488837
 1.0533975394977688
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.80221682559144
 0.0
 0.9202554472000574
 0.0
 3.0
 0.8983096330992791
 2.101690367390138
 0.0
 2.197783175129957
 0.0
 2.7387058212172404
 0.0
 2.99999999989217
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2935300899854685
 0.0
 0.0
 0.0
 2.8193414837880866
 0.0
 0.0
 2.1016903671318663
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.945758918264572
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.70757068392542
 2.937782613352486
 0.0
 4.725982562739533
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.7712454856910631
 2.9615612102585493
 0.0
 0.9931758664742124
 0.2377894596344201
 0.7735779313664756
 0.0
 0.0
 2.0
 0.9999999994048009
 0.0
 1.2612941804570756
 0.933298487649306
 0.8054073318906232
 2.0
 0.0
 0.0
 0.0
 0.7387058203359156
 0.0
 0.0
 2.0
 0.9999999999375703
 0.0
 0.0
 0.0
 6.0
 1.9710054624667173
 0.0
 0.028994537270319486
 2.0
 0.9710054631912711
 0.02899453670476743
 2.0
 6.0
 0.0
 1.8193414836017727
 0.9999999999959077
 0.0
 0.0
 1.098314006469956
 3.767700358928136
 0.0
 0.0
 5.000000000664031
 2.2330314589442057
 2.0
 0.0
 0.0
 1.0000000002261737
 2.0
 3.2935300895885873
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6488674869160858
 0.5938379876546284
 0.9999999997918081
 0.0
 0.0
 0.02384236863600903
 0.351132513178115
 0.0
 1.0
 0.0
 0.0
 0.375000000022503
 0.0
 0.0
 0.0
 0.7252771031865268
 0.0
 0.1891189335078853
 0.0
 1.0
 0.29943654435302913
 0.26271129591232284
 0.0
 0.27472289688656837
 0.0
 1.0
 0.04247825927479499
 0.5667295640275044
 0.0
 0.09899584470165697
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43327043600938525
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.700563455679278
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8108810665253059
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.858525896023548
 0.0
 0.0
 0.33844633547829217
 0.4061620123837198
 0.0
 1.0



=====Finished running Instance #432=====




