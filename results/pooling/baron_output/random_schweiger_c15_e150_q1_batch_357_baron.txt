===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -208.450
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -568.940
 Preprocessing found feasible solution with value -611.491
 Preprocessing found feasible solution with value -624.127
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            11.01     -642.491         -624.137       
          1             1            20.22     -641.179         -624.137       
         18+            6            50.12     -640.570         -624.137       
         65+            4            80.03     -640.570         -624.137       
        156+            7           109.93     -640.570         -624.137       
        424+            8           139.82     -636.234         -624.137       
        572+            9           169.72     -636.234         -624.137       
        629+            8           199.62     -636.234         -624.137       
        685+            7           229.51     -636.234         -624.137       
        908             7           259.41     -636.234         -624.137       
       3539            11           289.28     -636.234         -624.137       
       6916            16           319.18     -636.234         -624.137       
       9327            14           349.09     -636.234         -624.137       
      11663            16           379.00     -636.234         -624.137       
      14055            17           408.90     -636.234         -624.137       
      16526            15           438.81     -636.234         -624.137       
      19017            11           468.72     -636.234         -624.137       
      21095            14           498.62     -636.234         -624.137       
      23497+           12           528.53     -636.234         -624.137       
      23520+            6           558.45     -636.234         -624.137       
      23560+            5           588.36     -636.234         -624.137       
      23648             5           618.27     -636.234         -624.137       
      23716+            4           648.17     -636.234         -624.137       
      26530            12           678.06     -636.234         -624.137       
      29282+            7           707.96     -636.234         -624.137       
      29466+            9           737.88     -636.234         -624.137       
      29576+           10           767.78     -636.234         -624.137       
      30939            13           797.67     -636.234         -624.137       
      33643            18           827.57     -636.234         -624.137       
      36278            20           857.47     -636.234         -624.137       
      38633+           10           887.39     -636.234         -624.137       
      38824+           10           917.29     -636.234         -624.137       
      38925+            7           947.19     -636.234         -624.137       
      39051+            5           977.09     -636.234         -624.137       
      40947             9          1006.98     -636.234         -624.137       
      44407            10          1036.88     -636.234         -624.137       
      46858+            7          1066.78     -636.234         -624.137       
      46965+            6          1096.68     -636.234         -624.137       
      47102+            9          1126.58     -636.234         -624.137       
      47199+            7          1156.49     -636.234         -624.137       
      47331+            8          1186.39     -636.234         -624.137       
      48698            16          1216.29     -636.234         -624.137       
      51833            10          1246.19     -636.234         -624.137       
      54563            13          1276.08     -636.234         -624.137       
      57532            14          1305.98     -636.234         -624.137       
      57629+            5          1335.88     -636.234         -624.137       
      57713+            1          1365.80     -636.234         -624.137       
      57713             0          1366.41     -624.200         -624.137       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1371.39
 Total CPU time used:              1366.48

 Total no. of BaR iterations:   57713
 Best solution found at node:     553
 Max. no. of nodes in memory:      25
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -161.867
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -617.601
 Preprocessing found feasible solution with value -617.601
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            17.44     -634.533         -617.601       
         86+            5            47.75     -634.041         -617.601       
*       202             7            57.64     -634.041         -618.365       
       2669             4            87.54     -634.041         -618.365       
       4065             9           117.43     -634.041         -618.365       
       7331+            9           147.71     -634.041         -618.365       
       9042            11           177.60     -634.041         -618.365       
      12950             9           207.50     -634.041         -618.365       
      16111+            8           237.39     -634.041         -618.365       
      20364            17           267.28     -634.041         -618.365       
      24364             9           297.18     -634.041         -618.365       
      28332            11           327.08     -634.041         -618.365       
      32314            10           356.97     -634.041         -618.365       
      35379             8           386.88     -634.041         -618.365       
      36011             8           416.77     -634.041         -618.365       
      39904            10           446.67     -634.041         -618.365       
      44036             7           476.56     -634.041         -618.365       
      47890             7           506.45     -634.041         -618.365       
*     51056+           10           528.78     -634.041         -618.427       
*     51354             5           537.37     -634.041         -618.456       
*     51368             5           539.86     -634.041         -618.529       
      54335            13           569.76     -634.041         -618.529       
      58736             9           599.65     -634.041         -618.529       
      62999            12           629.55     -634.041         -618.529       
      65992+            6           659.45     -634.041         -618.529       
*     66201            17           669.00     -634.041         -618.592       
*     66281            15           669.39     -634.041         -618.657       
*     66729            14           671.93     -634.041         -618.720       
*     66827            13           672.38     -634.041         -618.790       
*     66911            11           672.77     -634.041         -618.861       
*     67195            15           674.34     -634.041         -618.929       
*     67328            14           674.95     -634.041         -618.995       
*     67414            14           675.34     -634.041         -619.062       
*     67537            12           675.86     -634.041         -619.125       
*     70983            11           699.42     -634.041         -619.180       
      75536            12           729.32     -634.041         -619.180       
      80286            12           759.21     -634.041         -619.180       
      84576            13           789.10     -634.041         -619.180       
      88835             6           819.00     -634.041         -619.180       
      91379+            5           848.89     -634.041         -619.180       
      93692            10           878.78     -634.041         -619.180       
      94604+            7           908.68     -633.743         -619.180       
      98110             7           938.57     -633.743         -619.180       
     102404             5           968.46     -633.017         -619.180       
     106703            10           998.35     -633.017         -619.180       
     110307            11          1028.25     -633.017         -619.180       
     114255             7          1058.14     -633.017         -619.180       
     118431             5          1088.98     -633.017         -619.180       
     122570            10          1118.87     -631.547         -619.180       
     125031             7          1148.77     -631.547         -619.180       
     129133             9          1178.66     -631.099         -619.180       
     133266            10          1208.56     -631.099         -619.180       
     137612            10          1238.46     -631.099         -619.180       
     140106             6          1268.35     -629.493         -619.180       
     144181+            3          1298.26     -628.330         -619.180       
     144209             0          1302.43     -619.242         -619.180       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1307.28
 Total CPU time used:              1302.53

 Total no. of BaR iterations:  144209
 Best solution found at node:   70983
 Max. no. of nodes in memory:      27
 
 All done
===========================================================================



*****Running Instance #713*****


objective value: -624.137420956
objective bound: -624.199840937
BARON solution time: 1371.39

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0597138470118421
 1.838611571636851
 0.0
 0.8246778236094321
 1.430822286258074
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9836614961806447
 0.0
 0.0
 1.0163385042736857
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8979836371310883
 3.098136382911822
 0.9771493480735663
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5465126419479792
 1.8855251139649967
 0.5946928760300707
 0.3803796580276508
 1.2390070301105331
 0.006577410801105112
 0.0
 0.0
 0.0
 0.5644959000649846
 1.8387271082679004
 0.00976109355980692
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0018505585956209035
 0.005551675790781167
 0.0
 0.7500000001138842
 2.2500000002060068
 0.0
 0.5487183932089119
 1.646155179515909
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6994310483751317
 2.0982931449959143
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4892623865394838
 0.898325419222886
 0.6124121944961733
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.808692887546758
 1.9362309621129723
 0.0
 0.0
 0.0
 0.19130711349573273
 0.06376903781734303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5367509518902713
 0.2683754758999192
 0.0
 0.0
 1.4632490483709295
 0.7316245240621952
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.541509221524959
 0.0
 0.0
 0.0
 0.536224915738164
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.463775085250998
 0.942608773581685
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4898167141220469
 0.6587907458236392
 0.08611761110946321
 0.510183286270131
 0.22560092424973754
 0.029490718841508633
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23218303334691498
 0.4737686853528127
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6766807969071326
 4.428157777460214
 0.0
 0.8174837893474262
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.45849077918206044
 0.30042757012677407
 0.0
 1.3233192034371661
 0.0
 1.7678169669447623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.255500109604569
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2550761516178034
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9222658629048112
 0.0
 0.0
 0.10167458145439805
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7444998907704966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.526231314708096
 1.055124442235522
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11560833050680124
 0.0
 0.182516211200994
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5107376142278346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.057391227007865864
 2.1181539487919685
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2347250710551494
 4.973269368116476
 0.7059517185030698
 0.0
 0.0
 0.007402234384947558
 0.7652749293613772
 0.0
 2.4063838587588924
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.744923849409388
 0.0
 1.6259640989392892
 0.0
 3.0
 0.8051264277901905
 2.1948735727027864
 0.0
 0.2550761513018182
 0.0
 2.0777341378817646
 0.0
 2.8983254185920493
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.255500109823176
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1948735724331248
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4129841018926923
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.7977241933368364
 3.0267306319430465
 0.0
 5.922322363616042
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.6766807968606263
 4.428157777124196
 0.0
 0.8174837892902563
 0.23218303344988966
 0.4737686855629361
 0.0
 0.0
 2.0
 0.8843916699872164
 0.11560832993972556
 1.4637750851014737
 0.9426087734843306
 0.0
 1.5415092213977153
 0.0
 0.0
 0.0
 0.5362249156925505
 0.0
 0.0
 2.0
 0.9999999999298388
 0.0
 0.0
 0.0
 6.0
 1.9999999997795257
 0.0
 0.0
 1.4892623864589307
 0.8983254191742955
 0.6124121944630474
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9448755580537889
 3.0777341382521852
 0.016338504360112988
 1.4444962790264393
 4.9836614966952375
 1.571842224046369
 1.9836614960306649
 0.0
 0.0
 1.0163385041949213
 1.8843916705487092
 3.269433857767093
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7449083569875503
 0.6216586710325843
 0.9999999995564769
 0.0
 0.0
 0.0009252792983749251
 0.2550916431098989
 0.0
 1.0
 0.0
 0.0
 0.3750000000224888
 0.0
 0.0
 0.0
 0.9681154811637964
 0.0
 0.4025711690659997
 0.0
 1.0
 0.26837547591874655
 0.2743591965762415
 0.0
 0.03188451891280839
 0.0
 1.0
 0.1381993726646312
 0.5623638989573164
 0.0
 0.1544352426482141
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43763610108185097
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7316245241135301
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5974288309750113
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7073653846871547
 0.0
 0.0
 0.34971552415466234
 0.37834132900385076
 0.0
 1.0



=====Finished running Instance #713=====




*****Running Instance #714*****


objective value: -619.179911231
objective bound: -619.241835398
BARON solution time: 1307.27

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2021653302694266
 1.3203109322885385
 0.0
 0.7978346699868494
 0.876243733219635
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2143232981097405
 0.4081830642150379
 1.4880276607312224
 0.1485337519211607
 0.0
 0.0
 0.0
 0.6595658546380317
 2.4044413446259827
 0.2400094458037666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9231325191083544
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6430248488320869
 1.9290745465267687
 0.0
 0.5678080728257853
 1.7034242184979675
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7891670785742539
 2.3675012357741045
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9359007438037374
 0.8255630525201184
 0.2385362039115831
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.26245419270553
 1.420818064245095
 0.0
 0.0
 0.0
 1.7375458080587705
 0.5791819360300666
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3030867892732623
 0.0
 0.0
 0.0
 0.09447500487041027
 0.0
 0.48584513947999536
 0.2429225696949931
 0.0
 0.0
 1.5141548607683508
 0.7570774302355401
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6656374399868366
 0.0
 0.0
 0.0
 0.35480200966537107
 0.8720295549518126
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6451979912714314
 1.0
 0.3548020089321452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4073283866827797
 0.7036641929494467
 0.0
 0.5926716137089494
 0.2963358066880846
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.670268408134589
 0.8258847055181601
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 4.430874694371867
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.33436256063980047
 1.4467358927901575
 0.0
 0.0
 0.0
 1.3297315919707569
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2943904769345138
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999997943463
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5532641079612732
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10753099537556363
 0.0
 0.0
 0.17443694801446508
 1.6024382061281552
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7056095233548298
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1741152943805668
 0.9322510813922743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07686748175346751
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6114568022616127
 0.0
 0.06409925697882965
 0.0
 0.0
 3.564909131701507
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.110992579817737
 0.0
 1.496153113652749
 0.0
 0.0
 0.0
 0.8890074204725459
 0.0
 3.0
 0.0
 0.0
 2.5720993953588556
 0.0
 0.0
 0.0
 5.683272256963833
 0.0
 2.044744476867421
 0.0
 3.0
 0.7287677091749885
 2.271232291323753
 0.0
 2.3167277441022667
 0.0
 2.89246900551541
 0.3030867892732623
 2.522476262557965
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6740784032064844
 0.0
 0.0
 0.0
 2.9231325190857507
 0.0
 0.0
 2.2712322910038907
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.304016645067781
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09447500487041027
 0.0
 0.0
 3.1566683143483587
 1.2143232981097405
 0.0
 7.430874694400413
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 4.430874694103164
 0.0
 1.0
 0.6702684084022026
 0.8258847058482225
 0.0
 0.0
 2.0
 0.9999999995455812
 0.0
 1.6451979911277612
 1.0
 0.3548020089056152
 1.6656374398487903
 0.0
 0.0
 0.0
 0.3548020096327828
 0.8720295548775516
 0.0
 2.0
 0.9999999999037448
 0.3975617942407987
 0.0
 0.0
 6.0
 2.0000000001309552
 0.0
 0.0
 1.9359007436628242
 0.8255630524657291
 0.2385362039015658
 2.0
 6.0
 0.0
 1.923132518916606
 0.9999999999888909
 0.0
 0.0
 1.067748918855271
 3.892469005361572
 0.3885431977278031
 0.0
 0.0
 1.214323298056332
 0.0
 0.0
 0.0
 2.9999999999664384
 2.0
 2.1965546654145283
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7036641932760576
 0.0
 0.999999999599123
 0.0
 0.0
 0.0
 0.2963358068260731
 0.0
 1.0
 0.0
 0.0
 0.3215124243993442
 0.0
 0.0
 0.0
 0.7104090320861288
 0.0
 0.38228375323780506
 0.0
 1.0
 0.24292256971535367
 0.28390403639668865
 0.0
 0.28959096799473655
 0.0
 1.0
 0.7623639737618444
 0.6010826650829936
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39891733495901044
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7570774303184435
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.617716246761189
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23763602599406092
 0.0
 0.0
 0.39458353926986695
 1.0
 0.0
 1.0



=====Finished running Instance #714=====




