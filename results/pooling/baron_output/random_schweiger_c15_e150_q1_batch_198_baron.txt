===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -195.877
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -626.667
 Preprocessing found feasible solution with value -626.717
 Preprocessing found feasible solution with value -626.717
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            14.35     -634.723         -626.717       
         30             4            44.25     -632.487         -626.717       
       2021            11            75.07     -632.487         -626.717       
       4469+            4           104.97     -632.487         -626.717       
       6537            11           134.86     -632.487         -626.717       
      10675             8           164.75     -632.487         -626.717       
      15167            12           194.64     -632.487         -626.717       
      18047+            7           224.53     -632.487         -626.717       
      23056             9           254.42     -632.487         -626.717       
      28046             8           284.31     -632.487         -626.717       
      32066             8           314.20     -632.487         -626.717       
      37085            10           344.09     -632.487         -626.717       
      42221             9           373.98     -632.487         -626.717       
      46956             9           403.87     -632.487         -626.717       
      50714            10           433.77     -632.487         -626.717       
      55309            10           463.66     -632.487         -626.717       
      60897            10           493.55     -632.487         -626.717       
      64455            10           523.45     -632.487         -626.717       
      69623             8           553.34     -632.487         -626.717       
      74624            10           583.24     -632.487         -626.717       
      78548+            6           613.13     -632.487         -626.717       
      78921             8           643.04     -632.018         -626.717       
      81420            12           672.94     -632.018         -626.717       
      86508            15           704.39     -632.018         -626.717       
      91817             9           734.28     -632.018         -626.717       
      95254             8           764.18     -631.998         -626.717       
      96141            11           794.07     -631.998         -626.717       
     100100            12           823.97     -631.998         -626.717       
     104678            13           853.86     -631.998         -626.717       
     108929             9           883.75     -631.998         -626.717       
     113744            13           913.65     -631.998         -626.717       
     118541            14           943.54     -631.998         -626.717       
     120627             6           973.43     -631.998         -626.717       
     121052+            7          1003.34     -631.998         -626.717       
     121998             9          1033.23     -631.792         -626.717       
     126082             6          1063.12     -631.792         -626.717       
     130302            17          1093.01     -631.792         -626.717       
     134790            11          1122.90     -631.792         -626.717       
     138815            16          1152.79     -631.792         -626.717       
     141359            13          1182.67     -631.792         -626.717       
     145624            15          1212.56     -631.792         -626.717       
     150253            14          1242.45     -631.792         -626.717       
     153855            13          1272.33     -631.792         -626.717       
     158332            17          1302.23     -631.792         -626.717       
     162073+            8          1332.11     -631.792         -626.717       
     164406            15          1362.00     -631.792         -626.717       
     169166            14          1391.89     -631.792         -626.717       
     173161            14          1421.78     -631.792         -626.717       
     177146            17          1451.66     -631.792         -626.717       
     182373+            7          1481.56     -631.792         -626.717       
     185352             9          1511.46     -631.792         -626.717       
     190013            14          1541.35     -631.792         -626.717       
     193927            14          1571.25     -631.792         -626.717       
     198246            14          1601.14     -631.792         -626.717       
     202929            11          1631.04     -631.792         -626.717       
     208213            12          1660.93     -631.792         -626.717       
     212292             9          1690.82     -631.792         -626.717       
     216030            12          1720.72     -631.792         -626.717       
     217255            14          1750.61     -631.792         -626.717       
     219471+            4          1780.51     -631.792         -626.717       
     222221             7          1810.40     -631.792         -626.717       
     224916+            5          1840.29     -630.780         -626.717       
     229614             8          1870.18     -630.780         -626.717       
     231853             0          1884.05     -626.780         -626.717       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1891.22
 Total CPU time used:              1884.17

 Total no. of BaR iterations:  231853
 Best solution found at node:       3
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -612.148
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -613.712
 Preprocessing found feasible solution with value -628.083
 Preprocessing found feasible solution with value -628.717
 Preprocessing found feasible solution with value -628.717
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            21.75     -640.071         -628.717       
         57+            6            51.67     -638.750         -628.717       
         69+            2            81.56     -638.750         -628.717       
        132+            4           111.45     -635.534         -628.717       
        308+            4           141.34     -635.534         -628.717       
        656            13           171.24     -632.912         -628.717       
       2671             8           201.14     -632.912         -628.717       
       5282            20           231.03     -632.834         -628.717       
       8078+            8           260.93     -632.834         -628.717       
       8116            14           290.82     -630.680         -628.717       
       8285             0           316.15     -628.780         -628.717       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   317.60
 Total CPU time used:               316.36

 Total no. of BaR iterations:    8285
 Best solution found at node:       1
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================



*****Running Instance #395*****


objective value: -626.717377555
objective bound: -626.780055424
BARON solution time: 1891.21

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1442399843230195
 0.0
 0.0
 0.8557600159512971
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9629732033497644
 0.0
 0.0
 1.0370267971460982
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1052803174422274
 0.6763618910855032
 0.0
 0.0
 0.0
 0.0
 3.8576928866126994
 2.3606649054112063
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9968039050663553
 0.8778489473342154
 0.037026797214056925
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.016106814513172207
 0.04832044351200628
 0.0
 0.7500000000765616
 2.250000000274758
 0.0
 0.5038653245301493
 1.5115959736010842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7300278611642659
 2.1900835835351633
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0695840598318422
 0.8695857008974563
 0.9183558008094828
 0.05332879283451584
 0.043356999638309274
 0.04578864634316251
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.259354590180018
 1.7406454107951506
 0.0
 0.0
 0.0
 1.9556127540022965
 1.0443872464232966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9836700591165283
 0.0
 0.0
 0.0
 0.7267858713009723
 0.0
 0.6563591349612183
 0.32817956743994003
 0.0
 0.0
 1.343640865310497
 0.6718204325676228
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.7648669457597647
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2351330552229896
 0.9559669981471084
 0.8088999469335557
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5360121090606424
 0.768006054190232
 0.0
 0.46398789137090724
 0.23199394558386924
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2572479380093506
 0.9690106144155315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.1540732580487134
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.6868071774662734
 0.0
 0.0
 0.0
 1.7427520623450266
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21048018794793616
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31319282339266497
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23513305424566092
 0.0
 0.7850326569136807
 0.08705730019623804
 0.28954407005360094
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7895198124371057
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.030989385758723842
 1.0031960952799506
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1019853421866057
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8770871481024057
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04403300243839418
 5.0358555540643755
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.3040181634782377
 1.7816422084978978
 1.2262585522281666
 0.0
 0.0
 0.06442725803549419
 0.6959818370258122
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.000000000715552
 0.0
 0.0
 0.0
 3.0
 0.9845387024011583
 2.015461298092649
 0.0
 3.0
 0.0
 2.76486694654522
 0.9836700590590179
 1.1442399842210302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8557600158769577
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0154612978781197
 0.0
 2.857525561538781
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9116796496146276
 0.0
 0.0
 6.218357791949834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14247443881598762
 0.7267858712583569
 0.0
 0.0
 2.9201114446326684
 0.0
 0.0
 5.1540732582477435
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.1540732578660653
 0.0
 1.0
 0.25724793803679497
 0.9690106145278801
 0.0
 0.0
 2.0
 0.9999999996639581
 0.0
 1.2351330551014763
 0.9559669980540682
 0.808899946855456
 2.0
 0.0
 0.0
 0.0
 0.7648669456859615
 0.0
 0.0
 2.0
 0.9999999999746516
 1.7104559303390328
 0.0
 0.0
 5.214967343675812
 2.7850326569598796
 0.0
 0.0
 1.122912852583137
 0.912942700470199
 0.9641444470827967
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9968039050126793
 0.8778489472864461
 0.03702679720800016
 0.0
 4.962973203831867
 3.037026796368066
 1.9629732031767029
 0.0
 0.0
 1.0370267970566664
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7680060544589395
 0.2227052760607307
 0.9999999998819324
 0.0
 0.0
 0.008053407250162297
 0.23199394566065207
 0.0
 1.0
 0.0
 0.0
 0.37500000001819667
 0.0
 0.0
 0.0
 0.6250000000755463
 0.0
 0.0
 0.0
 1.0
 0.3281795674470937
 0.2519326622470485
 0.0
 0.37500000002332934
 0.0
 1.0
 0.5750923140837048
 0.5721199921089236
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42788000793595915
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6718204325923666
 0.0
 0.9525085204783788
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7772947239838007
 0.0
 0.0
 0.0
 0.0
 0.0
 0.047491479599308335
 0.42490768596257067
 0.0
 0.0
 0.3650139305622376
 0.0
 0.0
 1.0



=====Finished running Instance #395=====




*****Running Instance #396*****


objective value: -628.716705048
objective bound: -628.779582996
BARON solution time: 317.6

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.6752496370541755
 0.6058106928875714
 0.0
 1.2088602774103336
 1.084547761439645
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.10610298822047973
 0.8938970119018674
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4484491843330927
 0.555826289630418
 0.0
 0.0
 0.0
 0.0
 3.657653804807017
 1.4035840297806517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.18755300139321723
 0.5601940443132607
 0.0
 0.0
 0.0
 0.0
 0.8398470269983584
 2.5085031919711405
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.490187659486963
 1.4705629783618372
 0.0
 0.0
 0.0
 0.0
 0.5574164109365585
 1.672249232701291
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.95239592961694
 2.857187788690219
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998286935
 0.9868777245619464
 0.013122275446796942
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.189878354839646
 1.3966261179392945
 0.0
 0.0
 0.0
 1.8101216459343579
 0.6033738818334006
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0836050292162178
 0.0
 0.0
 0.0
 0.8101605572508889
 0.0
 0.5135562379412874
 0.2567781188952037
 0.0
 0.0
 1.4864437622778934
 0.7432218809205845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.685122955335645
 0.0
 0.0
 0.0
 0.38357427992354753
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6164257209385058
 1.0
 0.3835742792645582
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5851917568763816
 0.7007418737953502
 0.09185400445409035
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4148082433645422
 0.18336804015041677
 0.024036081482469107
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.17257763504299625
 0.6125382230843088
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.6570154025899034
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.31487704518687987
 1.559203666278102
 0.0
 0.0
 0.0
 1.827422362655824
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29340803835532486
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995782913
 0.0
 2.99999999981808
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.44079633327437173
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9313027645926689
 0.0
 0.0
 0.013122275658409102
 0.10623441386423887
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7065919617350023
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38746176752726097
 0.9725999717810059
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11589008654036645
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.190416282795206
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.377787635125822
 2.0042754742713136
 0.7851158579472735
 0.0
 0.0
 1.960750637838992
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.586504472815704
 0.0
 0.7477470456976277
 0.0
 3.0
 0.7703343568364911
 2.229665643624481
 0.0
 2.41349552779583
 0.0
 2.068697236117163
 1.0836050292521042
 1.2810603299104446
 0.6222123649974276
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.293408038793465
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2296656431984783
 0.0
 2.999999999837441
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.348350218929949
 0.0
 0.0
 5.061237835365225
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8101605572773491
 0.0
 0.0
 3.8095837182715453
 0.0
 0.0
 3.6570154029388893
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 0.6570154025645566
 0.0
 1.0
 0.1725776377099912
 0.6125382325504899
 0.0
 0.0
 2.0
 0.884109913918108
 0.11589008593311784
 1.6164257208106907
 1.0
 0.3835742792344879
 1.685122955316144
 0.0
 0.0
 0.0
 0.38357427991896853
 0.0
 0.0
 2.0
 0.99999999979321
 1.893765586487545
 0.0
 0.0
 6.0
 1.9999999996589584
 0.0
 0.0
 1.999999999981047
 0.98687772463726
 0.013122275447979137
 2.0
 6.0
 0.0
 2.0
 0.9999999999512046
 0.0
 0.0
 1.0274000284625626
 3.068697236496351
 0.0
 0.0
 5.106102988968051
 1.9594103193453387
 2.0
 0.0
 0.10610298821491242
 0.893897011842044
 1.884109914448474
 1.6903584543126353
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7925958783676813
 0.283670185944856
 0.9999999845459281
 0.0
 0.0
 0.24509382972019378
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6983130590899377
 0.0
 0.1825510961625067
 1.1911226746182747e-8
 1.0
 0.2567781189482957
 0.278708205442907
 0.0
 0.30168694096671056
 0.0
 1.0
 0.5721959660480535
 0.35839184957908166
 0.20740412166376593
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6416081504244383
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7432218810743514
 0.0
 0.9999999999238292
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8174489037684272
 0.0
 0.0
 0.7163298140892346
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4278040339624732
 0.0
 0.0
 0.4761979647715043
 0.0
 0.0
 1.0



=====Finished running Instance #396=====




