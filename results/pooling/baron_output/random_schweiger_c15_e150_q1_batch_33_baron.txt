===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.34
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -206.479
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -632.569
 Preprocessing found feasible solution with value -632.569
 Preprocessing found feasible solution with value -632.569
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.34     -647.301         -632.569       
         62            10            48.50     -643.082         -632.569       
       1534             9            78.40     -643.082         -632.569       
       4597            12           108.30     -643.082         -632.569       
       8294             9           138.20     -643.082         -632.569       
      11852            11           168.09     -643.082         -632.569       
      15080             8           197.99     -643.082         -632.569       
      18715             9           227.88     -643.082         -632.569       
      20095             9           257.77     -643.082         -632.569       
      24037            11           288.05     -643.082         -632.569       
      28254            13           317.95     -643.082         -632.569       
      32572            13           347.84     -643.082         -632.569       
      35539+            7           377.74     -643.082         -632.569       
      38976            13           407.64     -643.082         -632.569       
      42339             9           437.53     -643.082         -632.569       
      45945            10           467.42     -643.082         -632.569       
      48622            10           497.32     -643.082         -632.569       
      52430            12           527.22     -643.082         -632.569       
      53430            12           557.11     -643.082         -632.569       
      55135+           13           587.01     -643.082         -632.569       
      55449+            8           616.92     -643.082         -632.569       
      57916            13           646.82     -643.082         -632.569       
      61865            11           676.71     -643.082         -632.569       
      65395            10           706.61     -643.082         -632.569       
      69592            12           736.50     -643.082         -632.569       
      73568            10           766.39     -643.082         -632.569       
      76180+            4           796.30     -643.082         -632.569       
      76314+            8           826.20     -643.082         -632.569       
      78723             6           856.10     -643.082         -632.569       
      82176            10           886.00     -643.082         -632.569       
      84012+            4           915.90     -643.082         -632.569       
      87160            13           945.79     -643.082         -632.569       
      88525            10           975.68     -643.082         -632.569       
      92445+            5          1005.61     -643.082         -632.569       
      92549             6          1035.52     -642.532         -632.569       
      93710            12          1065.41     -642.532         -632.569       
      97790            12          1095.31     -642.532         -632.569       
     100514             8          1125.20     -642.532         -632.569       
     102415+            8          1155.11     -642.532         -632.569       
     102633+            6          1185.02     -642.532         -632.569       
     104948            10          1214.91     -642.532         -632.569       
     108686            10          1244.81     -642.532         -632.569       
     109934+            7          1274.70     -642.532         -632.569       
     112752             9          1304.60     -642.532         -632.569       
     116718            11          1334.49     -642.532         -632.569       
     116938             8          1364.41     -642.532         -632.569       
     119996            17          1394.31     -642.532         -632.569       
     121546+            4          1424.21     -642.532         -632.569       
     123029+            5          1454.12     -642.532         -632.569       
     126310            15          1484.02     -642.057         -632.569       
     129207+            7          1513.91     -642.057         -632.569       
     129415             6          1543.81     -642.057         -632.569       
     129493+            6          1573.72     -642.057         -632.569       
     129558+            5          1603.64     -642.057         -632.569       
     129620+            4          1633.55     -642.057         -632.569       
     129731             6          1663.47     -642.057         -632.569       
     129810+            7          1693.38     -642.057         -632.569       
     129917             5          1723.27     -642.057         -632.569       
     133114            10          1753.17     -642.057         -632.569       
     133536+            5          1783.07     -642.057         -632.569       
     133601+            5          1813.00     -642.057         -632.569       
     133656+            4          1842.91     -642.057         -632.569       
     137014            15          1872.80     -641.875         -632.569       
     141492            12          1902.69     -641.875         -632.569       
     145593            11          1932.59     -641.875         -632.569       
     147226             6          1962.49     -641.875         -632.569       
     147351+            5          1992.41     -641.875         -632.569       
     147398+            5          2022.32     -641.875         -632.569       
     147474+            4          2052.22     -641.875         -632.569       
     147583+            7          2082.13     -641.074         -632.569       
     147683+            6          2112.03     -641.039         -632.569       
     147757+            4          2141.93     -641.039         -632.569       
     147834+            4          2171.85     -640.184         -632.569       
     149570             9          2201.75     -640.184         -632.569       
     149953+            7          2231.66     -640.184         -632.569       
     150003+            3          2261.56     -639.730         -632.569       
     150189             0          2281.54     -632.632         -632.569       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2289.78
 Total CPU time used:              2281.60

 Total no. of BaR iterations:  150189
 Best solution found at node:   62243
 Max. no. of nodes in memory:      23
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -621.029
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -621.029
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.76     -639.633         -621.029       
         35             5            46.68     -637.535         -621.029       
       2023             8            78.27     -637.390         -621.029       
       5543            11           108.16     -637.390         -621.029       
       8315             9           138.07     -637.390         -621.029       
      11522            10           167.96     -637.390         -621.029       
      12188             7           197.86     -637.390         -621.029       
      13159             9           227.76     -637.390         -621.029       
      17277             7           257.65     -637.390         -621.029       
      21786            10           287.54     -637.390         -621.029       
      26003+            7           317.44     -637.390         -621.029       
      27735            13           347.34     -637.390         -621.029       
      31836            10           377.23     -637.390         -621.029       
      33936             9           407.14     -637.390         -621.029       
      34216             7           437.07     -637.390         -621.029       
      36202            12           466.97     -637.390         -621.029       
      38649             9           496.87     -637.390         -621.029       
      42795            10           526.77     -637.390         -621.029       
      47495            11           556.66     -637.390         -621.029       
      51269             6           586.56     -637.390         -621.029       
      54300             7           616.45     -637.390         -621.029       
      58584             9           646.35     -637.390         -621.029       
*     59791            13           653.15     -637.390         -621.102       
*     60117            32           654.79     -637.390         -621.168       
*     60160            40           655.01     -637.390         -621.184       
*     60161            39           655.01     -637.390         -621.196       
*     60162            32           655.02     -637.390         -621.259       
*     60182            28           655.13     -637.390         -621.322       
*     60234            10           655.38     -637.390         -621.385       
      65188             9           685.27     -636.112         -621.385       
      66476             9           715.17     -635.311         -621.385       
      69140+            7           745.07     -635.311         -621.385       
      72347+            6           774.99     -635.311         -621.385       
      75458             6           804.91     -635.311         -621.385       
      76015             6           834.80     -635.311         -621.385       
      80538             8           864.70     -635.311         -621.385       
      83039             8           894.59     -635.134         -621.385       
      87271             9           924.49     -635.134         -621.385       
      90551            12           954.38     -634.874         -621.385       
      95163            11           985.12     -634.750         -621.385       
      99783+           11          1015.02     -634.750         -621.385       
     101557            11          1044.92     -634.750         -621.385       
     106093            11          1074.82     -634.750         -621.385       
     109099+            7          1104.73     -634.429         -621.385       
     113035             9          1134.62     -633.815         -621.385       
     116669             5          1164.52     -633.815         -621.385       
     121265             8          1194.42     -633.182         -621.385       
     126132+            7          1224.33     -633.010         -621.385       
     127414             0          1240.29     -621.447         -621.385       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1245.10
 Total CPU time used:              1240.65

 Total no. of BaR iterations:  127414
 Best solution found at node:   60234
 Max. no. of nodes in memory:      44
 
 All done
===========================================================================



*****Running Instance #65*****


objective value: -632.568615899
objective bound: -632.631879084
BARON solution time: 2289.77

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0532257186829728
 1.9467742816459923
 0.0
 0.7847566288984423
 1.4505380901649163
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002609815
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4017827616553926
 2.903896110127239
 1.3405549038531928
 0.0
 0.0
 0.0
 0.04271106273162115
 0.3086953965240562
 0.14250617512246647
 0.0
 0.0
 0.0
 0.24730565204830168
 1.7874084941733956
 0.8251394441064093
 0.06113848863681523
 0.22600709147280207
 0.0
 0.0
 0.0
 0.0
 0.8939413193711039
 3.304580830213781
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7200939761850941
 2.160281928418142
 0.0
 0.5073158248072424
 1.5219474743127326
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7725901993206852
 2.317770597818192
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.508517106407686
 0.9385808782029207
 0.5529020156471659
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.611849731615062
 1.8131707624100455
 0.0
 0.05744581434070817
 0.0
 0.3881502694356983
 0.12541011495574103
 0.0
 0.003973308155907598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6471578009605773
 0.3235789004293045
 0.0
 0.0
 1.3528421993005253
 0.6764210995436557
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.4691687977790047
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5308312032008486
 1.0
 0.46916879699865216
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5240986263847598
 0.6385838719032482
 0.12346544116137761
 0.47590137400586874
 0.19939847513517267
 0.03855221182785705
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47129690057285173
 0.526628573387785
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.355059626306208
 3.222630681351346
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 0.7906668314930726
 0.0
 0.6449403740907628
 0.0
 1.528703099841131
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23529471879010921
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5175336928538267
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5308312021983163
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7647052815741079
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4733714269106341
 1.0449201923185283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1620176535365922
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.49148289435990705
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0497856137364705
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2861479394493855
 4.6462337756358245
 0.9979254737641279
 0.0
 0.0
 0.0
 0.7138520609688984
 0.0
 3.0
 0.0
 0.0
 2.8803759045679245
 0.0
 0.0
 0.0
 7.482466308179759
 0.0
 0.2871455801033667
 0.0
 3.0
 0.9707367013898818
 2.0292632991014625
 0.0
 0.5175336925335012
 0.0
 2.4691687985902906
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2352947190201564
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.029263298844181
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.198522149498528
 0.0
 0.0
 0.4939126343781438
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.090360797099305
 2.8598535903281066
 0.0
 5.577690307691455
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.3550596262075358
 3.222630681113509
 0.0
 1.0
 0.47129690055277995
 0.5266285733654302
 0.0
 0.0
 2.0
 0.8379823469565318
 0.16201765297340706
 1.5308312030534388
 1.0
 0.4691687969532852
 2.0
 0.0
 0.0
 0.0
 0.4691687977375113
 0.0
 0.0
 2.0
 0.9999999999407363
 0.0
 0.0
 0.0
 6.0
 1.9385808772200157
 0.0
 0.06141912249409235
 1.5085171063264782
 0.9385808781523924
 0.5529020156173992
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9550798079737731
 3.5305879215580522
 0.0
 0.6917994764182217
 5.000000000701307
 2.308200523025091
 2.0
 0.0
 0.0
 1.0000000001877045
 1.837982347512409
 3.397312371681309
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7620493131180186
 0.5807792219439962
 1.0
 0.0
 0.0
 0.0
 0.23795068697971453
 0.0
 1.0
 0.0
 0.0
 0.36004698805849994
 0.0
 0.0
 0.0
 0.9353082885100965
 0.0
 0.06401401027087637
 0.0
 1.0
 0.32357890044846355
 0.253657912376452
 0.0
 0.06469171156618823
 0.0
 1.0
 0.18329388817347259
 0.5730336420853204
 0.0
 0.1907686044157327
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4269663579528661
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6764210995837614
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9359859897655551
 0.0
 0.0
 0.06173907929615162
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6259375074107949
 0.0
 0.0
 0.38629509962465386
 0.357481698784524
 0.0
 1.0



=====Finished running Instance #65=====




*****Running Instance #66*****


objective value: -621.384991731
objective bound: -621.447136445
BARON solution time: 1245.1

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0453689797360153
 0.8887121757824196
 0.0
 0.9546310202639847
 0.8115720167078609
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.215329052547217
 0.013013316552430432
 0.020884951176202537
 0.0025997261113755166
 0.0
 0.0
 0.0
 1.0832301712948518
 1.7384657872011646
 0.21640150664415517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0754826736544203
 0.2264480209632609
 0.0
 0.75
 2.25
 0.0
 0.5477001156542083
 1.6431003469626244
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6268172106913714
 1.8804516320741147
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8936087455918723
 0.10639125440812869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.52000172048216
 2.6539317569920513
 0.0
 0.0
 0.0
 0.5204706894444024
 0.3055958330813864
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5394663582554451
 0.2697331791277225
 0.0
 0.0
 1.460533641744555
 0.7302668208722776
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7382460818397334
 0.0
 0.0
 0.0
 0.5833471520768188
 0.6784067660834479
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4166528444925781
 0.9159224466556104
 0.667424701784047
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5131170062687087
 0.7565585031343545
 0.0
 0.4868829937312913
 0.24344149686564553
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.864696482056413
 0.9206946743372796
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 4.117246244249596
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.2617539181602666
 1.1739334774742114
 0.0
 0.0
 0.0
 1.1353035179435869
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23989974407841314
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8260665225257886
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9595275900734374
 0.10639125440812769
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7601002559215868
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07930532566272042
 0.903756512152718
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37283695451602616
 0.0
 0.0
 1.2811216715491947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7809987672444694
 0.0
 0.0
 0.0
 0.08407755158570629
 4.193324553101591
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.269675509403063
 0.0
 1.7853911563936926
 0.0
 0.0
 0.3019306946176812
 0.7303244905969368
 0.0
 2.9999999929322354
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.173933477474211
 0.0
 0.036497993840008486
 0.0
 3.0
 0.8091995373831675
 2.1908004626168327
 0.0
 0.8260665225257888
 0.0
 3.0
 0.0
 1.934081155518435
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7662030369718456
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1908004626168323
 0.0
 3.000000000000001
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0380974651401718
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.507268842765486
 1.215329052547217
 0.0
 7.117246244249596
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 4.117246244249596
 0.0
 1.0
 0.8646964820564131
 0.9206946743372796
 0.0
 0.0
 2.0
 1.0
 0.0
 1.4166528479231812
 0.9159224488736321
 0.6674247032031867
 1.7382460818397334
 0.0
 0.0
 0.0
 0.5833471520768188
 0.6784067660834479
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 5.040472409926562
 2.9595275900734377
 0.0
 0.0
 2.0
 0.8936087455918723
 0.10639125440812869
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.096243487847282
 1.7593507383773672
 0.21900123275553068
 0.0
 0.0
 1.215329052547217
 0.0
 0.0
 0.0
 3.0
 2.0
 1.7002841924902805
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7565585031343544
 0.0
 1.0
 0.0
 0.0
 0.03774133682721015
 0.24344149686564565
 0.0
 0.9999999975783741
 0.0
 0.0
 0.375
 0.0
 0.0
 0.0
 0.8967416846842765
 0.0
 0.01187082866459277
 0.0
 1.0
 0.26973317912772254
 0.2738500578271041
 0.0
 0.10325831531572349
 0.0
 1.0
 0.0
 0.5226844898680076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47731551013199236
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7302668208722775
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9881291713354072
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.3134086053456857
 1.0
 0.0
 1.0



=====Finished running Instance #66=====




