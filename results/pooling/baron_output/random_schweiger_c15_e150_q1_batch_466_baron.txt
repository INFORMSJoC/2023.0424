===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.32     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -186.942
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -415.643
 Preprocessing found feasible solution with value -629.692
 Preprocessing found feasible solution with value -629.692
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.49     -643.502         -629.692       
         16+            2            48.42     -642.519         -629.692       
*        19             3            59.59     -637.675         -629.735       
       1334            10            89.50     -636.311         -629.735       
       3949            12           119.95     -636.311         -629.735       
       7652             9           149.84     -636.311         -629.735       
       9080+            5           179.75     -636.311         -629.735       
      10404            12           209.64     -636.311         -629.735       
      14630             9           239.53     -636.311         -629.735       
      18590             9           269.42     -636.311         -629.735       
      21872+            5           299.35     -636.311         -629.735       
      21896+            4           329.25     -636.311         -629.735       
      21960+            4           359.18     -631.348         -629.735       
      21991             0           385.41     -629.798         -629.735       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   386.93
 Total CPU time used:               385.53

 Total no. of BaR iterations:   21991
 Best solution found at node:    3949
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -194.247
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -307.815
 Preprocessing found feasible solution with value -633.370
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.58     -642.561         -633.370       
         63+            9            46.50     -642.228         -633.370       
        336+            7            76.40     -642.228         -633.370       
       3612            14           106.29     -642.228         -633.370       
       5659+           12           136.18     -642.228         -633.370       
       6120+           12           166.07     -642.228         -633.370       
       6441             6           195.96     -642.228         -633.370       
       6550+            6           225.87     -642.228         -633.370       
       6668+            6           255.78     -642.228         -633.370       
       6947            10           285.67     -642.228         -633.370       
       7053             9           315.58     -642.228         -633.370       
       7222            12           345.47     -642.228         -633.370       
      11526             9           375.36     -642.228         -633.370       
      15680            12           405.25     -642.228         -633.370       
      17352+            6           435.15     -642.228         -633.370       
      17647+            8           465.04     -642.228         -633.370       
      17951+            7           494.93     -642.228         -633.370       
      21690             8           524.82     -642.228         -633.370       
      22160+            7           554.71     -642.228         -633.370       
      22457+            6           584.62     -642.228         -633.370       
      22733+            4           614.54     -642.228         -633.370       
      25956            11           644.43     -642.228         -633.370       
      30239+           10           674.33     -642.228         -633.370       
      31051             8           704.23     -642.228         -633.370       
      35193            13           734.12     -642.228         -633.370       
      39801            15           764.01     -642.228         -633.370       
      42857+            6           793.90     -642.228         -633.370       
      44673            10           823.79     -642.228         -633.370       
      47577+            4           853.68     -642.228         -633.370       
      49656+            5           883.59     -641.886         -633.370       
      51995+            4           913.48     -641.886         -633.370       
      52298+            7           943.38     -641.886         -633.370       
      52455             5           973.28     -641.886         -633.370       
      52757+            7          1003.18     -641.886         -633.370       
      52899+            4          1033.08     -641.886         -633.370       
      53135+            4          1062.99     -641.886         -633.370       
      53320             4          1092.89     -641.182         -633.370       
      53462+            4          1122.81     -641.160         -633.370       
      53648+            5          1152.72     -641.160         -633.370       
      53884             8          1182.62     -641.160         -633.370       
      56142             4          1212.51     -641.160         -633.370       
      60330             8          1242.40     -641.160         -633.370       
      60490+            3          1272.31     -636.701         -633.370       
      60975            11          1302.20     -636.510         -633.370       
      65764             9          1332.09     -636.242         -633.370       
      69954            11          1361.98     -634.786         -633.370       
      73215             0          1382.91     -633.434         -633.370       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1388.17
 Total CPU time used:              1383.01

 Total no. of BaR iterations:   73215
 Best solution found at node:       1
 Max. no. of nodes in memory:      25
 
 All done
===========================================================================



*****Running Instance #931*****


objective value: -629.734673166
objective bound: -629.797652863
BARON solution time: 386.92

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.258505744126922
 1.5197538409554685
 0.0
 0.7414942560189224
 0.8954180375338996
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9524919311620783
 0.0
 0.0
 1.0475080692526149
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3473282420305295
 0.8290763003787766
 0.0
 0.0
 0.0
 0.0
 3.6051636896777217
 2.2184317680190455
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5075353278127694
 3.4560505951204656
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6525033771981891
 1.9575101316172436
 0.0
 0.5489913120408462
 1.6469739361302773
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7985053108704155
 2.395515932654283
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.800163195427765
 0.7782595877761942
 0.4215772168451386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.377411255900864
 1.7924704196032937
 0.0
 0.0
 0.0
 0.6225887437200525
 0.20752958137516006
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05105754814627967
 0.0
 0.5360231681941906
 0.2680115840360011
 0.0
 0.0
 1.4639768320379782
 0.7319884158476722
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.6692084591793386
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3307915416657616
 0.9574014532725477
 0.7118070053736024
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4735501452872823
 0.7367750721902993
 0.0
 0.5264498550690854
 0.263224927372754
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03574459531074926
 0.15860869459982718
 0.0
 0.0
 0.1363923750793855
 0.6052108403714614
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23959435626367825
 0.26842773135442066
 0.0
 0.11979717813111183
 0.0
 0.0
 0.0
 0.0
 1.7604056440073603
 1.9722571960919026
 0.0
 0.8802028219910044
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.1698816750109249
 0.0
 0.0
 0.0
 1.8278630283810797
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2647315591187315
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999995338664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8301183254272207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3307915406577418
 0.0
 0.0
 0.22174041240140643
 1.9489424506039559
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7352684411413858
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2361804581149871
 0.49246466960085733
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21315785765956952
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04879755105471334
 0.0
 0.0
 0.04750806928752765
 0.0
 0.15103925399916737
 0.0
 0.04259854724954144
 3.1632509056136047
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.19435328989750703
 0.0
 2.2103252177001513
 2.176404542439734
 0.7416032153571495
 0.0
 0.0
 0.0
 0.7896747825206116
 0.0
 3.0
 0.0
 0.0
 2.6100135088300735
 0.0
 0.0
 0.0
 7.169881675529533
 0.0
 0.0
 0.0
 3.0
 0.8040347522301917
 2.1959652481860545
 0.0
 0.8301183250821385
 0.0
 2.6692084600743353
 0.0
 2.7782595850723313
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.636912293553018
 0.6278192657347507
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1959652478856504
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.963585922954736
 0.0
 0.0
 5.823595457721798
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05105754812887691
 0.0
 0.0
 3.194021243538477
 0.0
 0.0
 4.612865662034333
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.2406849273459315
 0.0
 1.0
 0.17213697197547212
 0.7638195420465079
 0.0
 0.0
 2.0
 0.9999999994847115
 0.0
 1.3307915415567673
 0.9574014531992557
 0.7118070053232007
 2.0
 0.0
 0.0
 0.0
 0.6692084591707226
 0.0
 0.0
 2.0
 0.9999999998585891
 0.0510575497422333
 0.0
 0.0
 5.9999999992596535
 2.0000000008398606
 0.0
 0.0
 1.8001631954694324
 0.7782595878080601
 0.4215772168707023
 2.0
 6.0
 0.0
 2.0
 0.9999999999929744
 0.0
 0.0
 1.5075353306453865
 3.456050601616222
 0.0
 0.0
 4.952491931620833
 3.047508068349101
 1.9524919309991229
 0.0
 0.0
 1.0475080691689704
 2.0
 2.4151718784611163
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.20765205113041332
 0.0
 0.7367750725834907
 0.27205056779941666
 0.792347939605654
 0.0
 0.0
 0.0
 0.2632249275132199
 0.0
 1.0
 0.0
 0.0
 0.3262516885910393
 0.0
 0.0
 0.0
 0.8962352094290241
 0.0
 0.0
 0.0
 1.0
 0.2680115840735913
 0.2744956560112323
 0.0
 0.10376479062778768
 0.0
 0.9999999999994971
 2.6551235748827824e-8
 0.6292528720255284
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.370747127987395
 0.11979717812166034
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7319884159591334
 0.0
 0.9999999999898965
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999981206861
 0.0
 0.0
 0.7279494322210691
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999687268883
 0.0
 0.0
 0.39925265542857685
 0.0
 0.0
 0.8802028219243573



=====Finished running Instance #931=====




*****Running Instance #932*****


objective value: -633.370167315
objective bound: -633.433510665
BARON solution time: 1388.16

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2014317158485979
 0.0
 0.0
 0.7985682818914727
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999999337255
 0.0
 0.0
 0.9999999997321871
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21881826540159385
 1.5844897643358378
 0.7318755915208879
 0.0
 0.0
 0.0
 0.4716824571748995
 3.41551023676814
 1.5776236812298627
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2006330063822876
 0.7417155298030231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7885891730636716
 0.9999999999354573
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0816878092864272
 0.24506342780715445
 0.0
 0.7499999999771715
 2.2499999998305396
 0.0
 0.48801501075327147
 1.4640450321869816
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.680297180150225
 2.040891540357473
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4821472650793805
 0.38248402119684377
 0.5901107571173804
 0.32922098336209854
 0.08495901086961956
 0.13107796259036636
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.0568592738463005
 2.608541266477775
 0.0
 0.0
 0.0
 0.2207350250230767
 0.11386443453209329
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5436056099090072
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6986266384606976
 0.34931331893151013
 0.0
 0.0
 1.3013733616401544
 0.650686680264022
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3638624454360817
 0.0
 0.0
 0.0
 0.3604579701143786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6395420304000752
 1.0
 0.3604579697369872
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5424843789372793
 0.7712421872552091
 0.0
 0.4575156211211971
 0.22875780989745093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4307990827712519
 0.5757430411975206
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1817772809313785
 3.3300427586870462
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.6361375534271927
 0.9748998185762001
 0.0
 0.8182227193760913
 0.0
 1.5692009157975548
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20581470914340305
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999983891894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3345994593060025
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2756795833727732
 0.0
 0.722405701468792
 0.5325569680286734
 1.4563943844800868
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7941852865620368
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4242569563866
 0.7993669931666617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21141082755664956
 0.0
 0.0
 0.0
 0.0
 1.2601991857572519
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1886317520991518
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.278811280340469
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.313726568115858
 2.5351836212583194
 1.0065421240813335
 0.0
 0.0
 0.32675123714729354
 0.6862734316515338
 0.0
 3.0
 0.0
 0.0
 2.9999999998713593
 0.0
 0.0
 0.0
 7.665400540474636
 0.0
 0.0
 0.0
 3.0
 1.0479399573922077
 1.9520600430076753
 0.0
 0.33459945962332743
 0.0
 1.7243204172352422
 0.5436056144454743
 1.2014317161946333
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.798568282150908
 0.0
 0.0
 0.0
 2.78858917364126
 0.0
 0.0
 1.9520600419041765
 0.0
 2.4547420433936047
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9423485363253954
 0.0
 0.0
 5.464816375172902
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5452579568220844
 0.0
 0.0
 0.0
 2.7211887205723913
 0.0
 0.0
 5.51182003987129
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.1817772808975642
 3.330042758603733
 0.0
 1.0
 0.4307990845123099
 0.5757430435251011
 0.0
 0.0
 2.0
 0.9999999972176877
 0.0
 1.6395420302931052
 1.0
 0.360457969683733
 1.3638624464739106
 0.0
 0.0
 0.0
 0.3604579703903385
 0.0
 0.0
 2.0
 0.9999999992020282
 0.5436056158068426
 0.0
 0.0
 5.2775942989093405
 2.7224057010408864
 0.0
 0.0
 1.8113682483665916
 0.46744303203088666
 0.721188719675098
 2.0
 6.0
 0.0
 1.7885891730466368
 0.9999999999507424
 0.0
 0.0
 1.2006330070147195
 0.7417155301921865
 0.0
 0.6905007224957278
 5.000000000999004
 2.309499272704622
 1.9999999999158429
 0.0
 0.0
 0.9999999997556415
 1.9999999979886383
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7712421894263572
 0.31689795280531374
 0.9999999959604933
 0.0
 0.0
 0.040843904633267814
 0.22875781055317526
 0.0
 1.0
 0.0
 0.0
 0.3749999999723035
 0.0
 0.0
 0.0
 0.9581750675486815
 0.0
 0.0
 0.0
 1.0
 0.34931331921340986
 0.2440075053650858
 0.0
 0.041824932442887555
 0.0
 0.9999999992441647
 0.9999999891505356
 0.6007158585300817
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3992841413489432
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.650686680787614
 0.0
 0.8182473477922589
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999994737002
 0.0
 0.0
 0.6831020472185985
 0.0
 0.0
 0.0
 0.0
 0.0
 0.18175265225974852
 1.0003357150396022e-8
 0.0
 0.0
 0.34014859006016074
 0.0
 0.0
 1.0



=====Finished running Instance #932=====




