===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -116.055
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -426.303
 Preprocessing found feasible solution with value -630.508
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             8.92     -646.017         -631.876       
*         1             1            15.69     -642.923         -631.915       
          1             1            16.55     -642.923         -631.915       
         14+            5            46.44     -637.887         -631.915       
        160+            4            76.34     -637.635         -631.915       
        353+            3           106.22     -637.031         -631.915       
        442+            2           136.13     -636.283         -631.915       
        445             0           141.03     -631.979         -631.915       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   141.68
 Total CPU time used:               141.10

 Total no. of BaR iterations:     445
 Best solution found at node:     230
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -189.137
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -408.373
 Preprocessing found feasible solution with value -620.051
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.97     -633.502         -620.051       
         30+            6            45.86     -630.493         -620.051       
         76+            6            75.75     -630.493         -620.051       
        161+            5           105.62     -630.493         -620.051       
        832            12           135.50     -628.607         -620.051       
       3801+            7           168.31     -628.607         -620.051       
       7866             7           198.19     -628.607         -620.051       
      11164             9           228.07     -628.607         -620.051       
      15351             5           257.95     -627.843         -620.051       
      18601             0           284.13     -620.113         -620.051       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   286.74
 Total CPU time used:               285.55

 Total no. of BaR iterations:   18601
 Best solution found at node:      31
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================



*****Running Instance #627*****


objective value: -631.915471609
objective bound: -631.978669472
BARON solution time: 141.67

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0316737948092676
 1.176868195154153
 0.0
 0.9683262054730676
 1.104605272993532
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002960014
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4365750478121866
 0.5285952165842739
 0.0
 0.0
 0.0
 0.0
 3.563424953066004
 1.31118063599695
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9878416694631139
 0.8172868975179237
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6821375745503003
 2.0464127235286
 0.0
 0.5554512371794786
 1.6663537114305988
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7624111885760239
 2.2872335655966807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9082523122198821
 0.09174768767556138
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.956110338281727
 2.0150506029242288
 0.0
 0.0
 0.0
 1.3441793410173213
 0.6846597187508598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5187967012963511
 0.259398350604722
 0.0
 0.0
 1.481203298964966
 0.7406016493584168
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.33161982065996515
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6683801803159133
 1.0
 0.3316198198842546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4451777765661267
 0.7225888879473348
 0.0
 0.5548222238239782
 0.27741111178310285
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8055022553932955
 0.8690901359694758
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2227756717320728
 3.828604328993521
 0.0
 0.9221444787597852
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.57560595371055
 0.0
 0.7772243286473446
 0.0
 1.1944977450557546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23974081181299955
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4243940469469757
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6683801793418805
 0.0
 0.6997103220325213
 0.09174768843364889
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7602591885744662
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1309098643726711
 1.0121583308656172
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.814622602517303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07785552179121348
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.626778845363426
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1677666647271185
 1.9651702644301006
 1.6745923911656855
 0.0
 0.0
 0.0
 0.8322333356891151
 0.0
 3.0
 0.0
 0.0
 2.7285502980454908
 0.0
 0.0
 0.0
 5.97116094101424
 0.0
 0.0
 0.0
 3.0
 0.7781950519010732
 2.2218049485870446
 0.0
 2.028839059703027
 0.0
 2.3316198214493404
 0.0
 2.2085419899121588
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.072931478418446
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.2218049483233826
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8051285668926274
 0.0
 0.0
 4.874605589146414
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0496447541326774
 0.0
 0.0
 5.973524479422727
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.2227756716509561
 3.828604328739492
 0.0
 0.9221444786986184
 0.8055022553376263
 0.8690901359093436
 0.0
 0.0
 2.0
 0.9999999996329586
 0.0
 1.6683801801550553
 1.0
 0.3316198198520279
 2.0
 0.0
 0.0
 0.0
 0.33161982063547946
 0.0
 0.0
 2.0
 0.9999999999308082
 0.0
 0.0
 0.0
 5.300289678912023
 2.6997103214779683
 0.0
 0.0
 2.0
 0.9082523122159636
 0.09174768767516744
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.987841669426999
 0.8172868974880437
 0.0
 0.0
 5.000000000665321
 1.8397758525028993
 2.0
 0.0
 0.0
 1.0000000002253329
 2.0
 2.2814734680428916
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7225888882125584
 0.28731500952420636
 1.0
 0.0
 0.0
 0.0
 0.27741111188491746
 0.0
 1.0
 0.0
 0.0
 0.3410687872433508
 0.0
 0.0
 0.0
 0.7463951176143652
 0.0
 0.0
 0.0
 1.0
 0.25939835062266847
 0.27772561856176137
 0.0
 0.25360488245864615
 0.0
 1.0
 0.14196282484315237
 0.5158368973555957
 0.0
 0.19919838883042934
 0.0
 0.0
 0.0
 0.0
 0.0
 0.48416310269051466
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7406016494096637
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7126849905183682
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6588387863264183
 0.0
 0.0
 0.38120559425380995
 0.0
 0.0
 1.0



=====Finished running Instance #627=====




*****Running Instance #628*****


objective value: -620.050572804
objective bound: -620.112584053
BARON solution time: 286.73

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1242437452980638
 1.7312233684837064
 0.0
 0.8757562549437832
 1.3485773881294005
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5940895953256409
 0.0
 0.0
 1.4059104051665885
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.5405725396035685
 1.8834988446185603
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0535170563956866
 1.522411559927284
 0.4550501481639783
 1.6103380044608018
 0.0
 0.0
 0.0
 0.0
 0.620160803090207
 2.194633963140052
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2931242790010441
 0.8793728369527577
 0.0
 0.750000000104288
 2.250000000227352
 0.0
 0.5384035257556771
 1.6152105771957395
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4184721954371116
 1.2554165862485245
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8363209060440118
 0.855467113971044
 0.308211980283364
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.342602895986892
 1.7808676316107557
 0.0
 0.0
 0.0
 0.6573971050893982
 0.21913236831297847
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2289719322247313
 0.0
 0.5642572650780239
 0.2821286324944692
 0.0
 0.0
 1.4357427351853032
 0.7178713674772503
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.8049719662604743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.195028034722316
 0.912690775524988
 0.8922811900508141
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5561593312217081
 0.7780796652274914
 0.0
 0.4438406691794588
 0.2219203344803522
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6483222622561525
 0.7581509422573974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.701808406839781
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.3339429702186272
 0.0
 0.0
 0.0
 1.3516777381489513
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22433364280692125
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6660570306467379
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19502803372670052
 0.0
 0.0
 0.1445328866636494
 1.7710280680933015
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.775666357564934
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24184905803908568
 0.924789049070072
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11279298101594956
 0.0
 0.0
 0.40591040519034993
 0.0
 0.05088611365568288
 0.0
 0.08730922505663667
 2.6119872643257827
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.334238996699431
 4.424071384222129
 1.40647320451355
 0.0
 0.0
 1.1724971159538018
 0.6657610037315228
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.1234705275976475
 0.0
 2.06538815262478
 0.0
 3.0
 0.846385897572493
 2.1536141029514164
 0.0
 0.8765294734023766
 0.0
 2.804971967153394
 0.0
 2.85546711378177
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.2243336430731837
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1536141026625533
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8147947662302593
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2289719322247313
 0.0
 0.0
 1.673888781685636
 3.5759286163229707
 0.0
 4.701808406839781
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 1.7018084066905357
 0.0
 1.0
 0.6483222622442564
 0.7581509422435811
 0.0
 0.0
 2.0
 0.9999999996076037
 0.0
 1.1950280346053126
 0.9126907754357528
 0.892281189963585
 2.0
 0.0
 0.0
 0.0
 0.8049719661836121
 0.0
 0.0
 2.0
 0.9999999999396122
 0.22897193229927673
 0.0
 0.0
 6.0
 1.9999999997661189
 0.0
 0.0
 1.8363209059181222
 0.8554671139129197
 0.30821198026278
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0752109512177617
 3.8049719674657454
 0.0
 0.0
 4.594089595830368
 3.4059104044216832
 1.5940895951993104
 0.0
 0.0
 1.4059104050546565
 2.0
 3.079800756484799
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7780796655350124
 0.553008923010528
 1.0
 0.0
 0.0
 0.14656213948352742
 0.22192033456732665
 0.0
 1.0
 0.0
 0.0
 0.37500000002178496
 0.0
 0.0
 0.0
 0.8904338159111331
 0.0
 0.4232194135015799
 0.0
 1.0
 0.2821286325105051
 0.2692017628531557
 0.0
 0.10956618417070382
 0.0
 1.0
 0.0
 0.562121872604439
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4378781274372849
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7178713675230001
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5767805865339303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9999999996729354
 0.0
 0.0
 0.20923609769719562
 0.44699107702615265
 0.0
 1.0



=====Finished running Instance #628=====




