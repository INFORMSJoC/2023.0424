===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.36
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -204.886
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -493.957
 Preprocessing found feasible solution with value -626.735
 Preprocessing found feasible solution with value -631.763
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            20.00     -638.199         -631.763       
         25+            3            49.91     -634.474         -631.763       
         45             0            70.85     -631.827         -631.763       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    72.69
 Total CPU time used:                72.41

 Total no. of BaR iterations:      45
 Best solution found at node:      44
 Max. no. of nodes in memory:       6
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -224.733
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -638.999
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1             5.51     -654.715         -639.019       
*         1             1             7.07     -653.495         -639.066       
          1             1            18.68     -649.558         -639.066       
         28+            4            48.60     -646.918         -639.066       
        104+            4            78.49     -646.918         -639.066       
        209+            4           108.40     -646.918         -639.066       
        311+            3           138.30     -643.713         -639.066       
        401+            5           168.18     -643.713         -639.066       
*       459+            6           177.45     -642.365         -639.130       
*       462+            6           179.10     -642.365         -639.194       
        576+            9           209.01     -642.365         -639.194       
        892+            6           238.90     -642.365         -639.194       
       1018+            7           268.79     -642.365         -639.194       
       1258+            7           298.69     -642.365         -639.194       
       1345+            4           328.59     -641.567         -639.194       
       1503+            7           358.50     -641.567         -639.194       
       2045             9           388.40     -641.567         -639.194       
       2311             7           418.29     -641.567         -639.194       
       4147             9           448.18     -641.567         -639.194       
       8629             8           478.08     -641.567         -639.194       
      13651            13           507.97     -641.567         -639.194       
      18587            10           537.86     -641.567         -639.194       
      23281            10           567.75     -641.567         -639.194       
      28424            10           597.63     -641.567         -639.194       
*     32553             8           621.75     -641.567         -639.239       
      37437             7           651.64     -641.567         -639.239       
      38187+            5           681.53     -641.473         -639.239       
      39733             7           711.41     -641.189         -639.239       
      43405             0           738.64     -639.303         -639.239       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   741.56
 Total CPU time used:               738.75

 Total no. of BaR iterations:   43405
 Best solution found at node:   32553
 Max. no. of nodes in memory:      17
 
 All done
===========================================================================



*****Running Instance #291*****


objective value: -631.76332429
objective bound: -631.826506922
BARON solution time: 72.68

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3076840965386163
 0.0
 0.0
 0.6923159019262406
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000003820528
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3734249960615683
 0.5871659401272608
 0.0
 0.0
 0.0
 0.0
 3.6265750045198915
 1.5504314600900815
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20536114694422034
 0.4436730208075721
 0.0
 0.0
 0.0
 0.0
 0.8349219627047126
 1.8038093127341137
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998538097
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23966637443359845
 0.7189991232667585
 0.0
 0.7499999999918185
 2.2499999999254405
 0.0
 0.5369193585099594
 1.610758075481323
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4734142672904358
 1.420242801826957
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998536067
 0.8847501910265289
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.1471773244998897
 1.8528226758516375
 0.0
 0.0
 0.0
 1.8883063944032428
 1.1116936053358786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6125498119333402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5682150443869713
 0.2841075220357899
 0.0
 0.0
 1.4317849557744262
 0.7158924774888237
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.645045158814561
 0.0
 0.0
 0.0
 0.5669534563779598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4330465444388443
 0.8936570681990916
 0.6732963874955686
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4811524763823556
 0.7405762365502073
 0.0
 0.5188475237878575
 0.25942376131959555
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.33965671237526046
 0.5858037186935174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.043701798956079
 3.18910621358759
 0.0
 0.9721503349088049
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.3549548415748792
 1.5694265476432345
 0.0
 0.9562982013887013
 0.0
 1.660343286700918
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23043941438814822
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.99999999876935
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4305734506991734
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7880013843221823
 0.0
 0.96451628183012
 0.11524980933252994
 1.3874501868872957
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7695605853327567
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4141962791329912
 0.9597168898105743
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.02784966555001366
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10634293229282579
 5.999999999404409
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2217287143117743
 1.9605909367613057
 0.925460431068778
 0.0
 0.0
 0.958665497700357
 0.7782712855908602
 0.0
 3.0
 0.0
 0.0
 2.999999999917259
 0.0
 0.0
 0.0
 5.000000000387146
 0.0
 0.6490341677517925
 0.0
 3.0
 0.8523225664227612
 2.1476774339912827
 0.0
 2.999999999745115
 0.0
 2.2119986164310377
 0.6125498123737034
 1.3076840967349481
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6923159020302859
 0.0
 0.0
 0.0
 2.99999999997787
 0.0
 0.0
 2.14767743326325
 0.0
 2.884750190907341
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.6387312754402035
 0.0
 0.0
 5.177006466119492
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8936570691173928
 0.0
 0.0
 5.204958347452474
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.0437017988873458
 3.189106213383777
 0.0
 0.972150334844561
 0.33965671362778826
 0.5858037208551193
 0.0
 0.0
 2.0
 0.9999999978418725
 0.0
 1.4330465443274594
 0.8936570681300514
 0.6732963874439717
 1.6450451588469583
 0.0
 0.0
 0.0
 0.5669534563860307
 0.0
 0.0
 2.0
 0.9999999995141836
 0.6125498134229507
 0.0
 0.0
 5.035483718902546
 2.9645162811843755
 0.0
 0.0
 2.0
 0.8847501911532699
 0.0
 2.0
 6.0
 0.0
 2.0
 0.9999999998141017
 0.0
 0.0
 1.0402831103748325
 2.247482335109819
 0.0
 0.0
 5.000000000429093
 2.1375974001495277
 1.9999999999132927
 0.0
 0.0
 1.000000000329972
 1.9999999985437573
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7405762381505746
 0.27468499918881684
 0.9999999963088843
 0.0
 0.0
 0.1198331872067748
 0.2594237618798848
 0.0
 1.0
 0.0
 0.0
 0.3749999999756257
 0.0
 0.0
 0.0
 0.6250000000372652
 0.0
 0.19740890234235423
 0.0
 1.0
 0.28410752217354485
 0.2684596792376768
 0.0
 0.3749999999641862
 0.0
 0.99999999997954
 0.9999999975690738
 0.653842048745511
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3461579512152918
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7158924778372935
 0.0
 0.9999999998573198
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8025910969601736
 0.0
 0.0
 0.7253150008418093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.23670713362974574
 0.0
 0.0
 1.0



=====Finished running Instance #291=====




*****Running Instance #292*****


objective value: -639.238878736
objective bound: -639.302808877
BARON solution time: 741.55

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1598950015649405
 0.0
 0.0
 0.840104998661207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002986746
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0684619487969104
 1.5273194018136833
 0.8479296918598405
 0.0
 0.0
 0.0
 0.15566258183568193
 3.4726805990715297
 1.9279457766384953
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0988207587172232
 0.7314436328228348
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20761605380785755
 0.6228481613882344
 0.0
 0.7500000000885692
 2.2500000002362635
 0.0
 0.5423839462063174
 1.6271518385855772
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.500000000192172
 1.5000000005424314
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9948112924466367
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.510536089499631
 3.267248729204052
 0.0
 0.0
 0.0
 0.6330431877073933
 0.589171994772217
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19499163408593484
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5536428105163326
 0.2768214052176006
 0.0
 0.0
 1.4463571897496508
 0.7231785947638181
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4138256437345216
 0.0
 0.0
 0.0
 0.17403871307980937
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8259612878842728
 1.0
 0.17403871233392154
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4913078601624952
 0.7456539297141022
 0.0
 0.5086921402513939
 0.254346070001828
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.33070387410596536
 0.6748731454854618
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4809519676481975
 3.050085820596446
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.586174356928607
 1.1995808979055165
 0.0
 0.5190480327676158
 0.0
 1.6692961261285448
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.255912437015966
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5762945722047876
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.412135643332704
 0.0
 1.6399246560588703
 0.0051887082232561525
 1.8050083661610616
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.21649606792016282
 0.0
 0.0
 0.7440875627225875
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32512685444332573
 0.9011792415938995
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2369617901221615
 2.4437110424704342
 1.0055770193980405
 0.0
 0.0
 0.8304642151918907
 0.7630382103380031
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.77778481842461
 0.0
 0.0
 0.0
 3.0
 0.8304642157339333
 2.169535784752343
 0.0
 1.2222151824474565
 0.0
 1.5878643574365383
 0.19499163462807056
 1.1598950014650424
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8401049985906283
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.169535784513469
 0.0
 2.9948112925467196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8302643914644414
 0.0
 0.0
 5.556288957545707
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0000000006998504
 0.0
 0.0
 5.531037788302227
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.4809519675295908
 3.0500858203449166
 0.0
 1.0
 0.3307038742602955
 0.6748731458041242
 0.0
 0.0
 2.0
 0.999999999609774
 0.0
 1.8259612877187936
 1.0
 0.1740387123208734
 1.413825643626093
 0.0
 0.0
 0.0
 0.1740387130599642
 0.0
 0.0
 2.0
 0.9999999999482784
 0.19499163422499885
 0.0
 0.0
 4.143579276832225
 3.8564207236283194
 0.0
 0.0
 2.0
 0.9948112924452579
 0.0
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.098820758691561
 0.7314436328041355
 0.0
 0.22412453063606275
 5.000000000664129
 2.7758754683824294
 2.0
 0.0
 0.0
 1.00000000021638
 2.0
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7456539300119595
 0.30546388032189237
 0.9999999995240018
 0.0
 0.0
 0.10380802688964842
 0.2543460700998362
 0.0
 1.0
 0.0
 0.0
 0.375000000018223
 0.0
 0.0
 0.0
 0.8472231022903763
 0.0
 0.0
 0.0
 1.0
 0.2768214052301031
 0.2711919730811881
 0.0
 0.15277689779658513
 0.0
 1.0
 0.9999999992845138
 0.5799475007406438
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4200524992999254
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7231785948077323
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6945361197218354
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.25000000007497386
 0.0
 0.0
 1.0



=====Finished running Instance #292=====




