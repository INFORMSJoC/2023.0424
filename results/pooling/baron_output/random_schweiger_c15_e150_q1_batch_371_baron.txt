===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.34

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -102.700
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -626.621
 Preprocessing found feasible solution with value -626.621
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.84     -639.133         -626.621       
         16+            2            48.73     -636.118         -626.621       
        155+            5            78.65     -635.321         -626.621       
       1153             9           111.34     -635.321         -626.621       
       4393            12           141.23     -635.321         -626.621       
       7192+            6           171.12     -635.321         -626.621       
       7290+            7           201.03     -635.321         -626.621       
       7498+            5           230.94     -635.321         -626.621       
       7593+            3           260.84     -635.321         -626.621       
       8359             9           290.73     -634.988         -626.621       
      10817             4           320.62     -634.988         -626.621       
      11091+            6           350.54     -634.988         -626.621       
      11242+            4           380.44     -634.988         -626.621       
      11487             8           410.34     -634.469         -626.621       
      15507            16           440.22     -634.469         -626.621       
      19880            17           470.12     -634.469         -626.621       
      24567            13           500.00     -634.469         -626.621       
      28843            15           529.89     -634.469         -626.621       
      32043+            5           559.79     -634.469         -626.621       
      32065             6           589.71     -634.469         -626.621       
      32174+            5           619.61     -634.404         -626.621       
      32230             5           649.51     -633.513         -626.621       
      34485+            2           679.44     -633.080         -626.621       
      34491             0           687.58     -626.683         -626.621       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   690.24
 Total CPU time used:               687.66

 Total no. of BaR iterations:   34491
 Best solution found at node:      -1
 Max. no. of nodes in memory:      22
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -169.239
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -442.905
 Preprocessing found feasible solution with value -626.566
 Preprocessing found feasible solution with value -626.566
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            12.00     -643.174         -627.397       
          1             1            19.82     -639.863         -627.397       
         46+            9            49.74     -638.871         -627.397       
         92+            5            79.64     -638.871         -627.397       
        784            14           109.53     -638.871         -627.397       
       3651            10           139.42     -638.871         -627.397       
       7333            16           169.32     -638.871         -627.397       
      11373+           15           199.21     -638.871         -627.397       
      11869+            9           229.11     -638.871         -627.397       
      11937+            7           259.01     -638.871         -627.397       
      12033+            5           288.92     -638.871         -627.397       
      12326+            8           318.82     -638.871         -627.397       
      12629+            4           348.71     -638.871         -627.397       
      12756+            7           378.62     -638.871         -627.397       
      12944+            5           408.54     -638.871         -627.397       
      14480            13           438.44     -638.871         -627.397       
      16026             8           468.33     -638.871         -627.397       
      17363             6           498.22     -638.871         -627.397       
      20727+            5           528.15     -638.871         -627.397       
      20838+            5           558.05     -638.871         -627.397       
      21081+            5           587.95     -638.871         -627.397       
      21831            12           617.83     -636.235         -627.397       
      25999            11           647.73     -636.235         -627.397       
      29922            13           677.62     -636.235         -627.397       
      34314            18           707.51     -636.235         -627.397       
      38023            15           737.41     -636.235         -627.397       
      42170            11           767.30     -636.235         -627.397       
      46509            10           797.19     -636.235         -627.397       
      50821            11           827.07     -636.235         -627.397       
      54917            12           856.97     -636.235         -627.397       
      56489+            9           886.88     -636.235         -627.397       
      56584+            7           916.78     -636.235         -627.397       
      59104            10           946.68     -636.235         -627.397       
      63118            11           976.57     -636.235         -627.397       
      67483            15          1006.46     -636.235         -627.397       
      71400            14          1036.35     -636.235         -627.397       
      74004            11          1066.24     -636.235         -627.397       
      78764            15          1098.32     -636.235         -627.397       
      83765            13          1128.21     -636.235         -627.397       
      88624            12          1158.10     -636.235         -627.397       
      93033            12          1187.99     -636.235         -627.397       
      97963            15          1217.88     -636.235         -627.397       
     102621            14          1247.78     -636.235         -627.397       
     107256            11          1277.67     -636.235         -627.397       
     112151            15          1307.56     -636.235         -627.397       
     116928            15          1337.45     -636.235         -627.397       
     121340            15          1367.35     -636.235         -627.397       
     123771            13          1397.24     -636.235         -627.397       
     127512            12          1427.13     -636.235         -627.397       
     132050            16          1457.02     -636.235         -627.397       
     137006            10          1486.92     -636.235         -627.397       
     140362             7          1516.82     -636.235         -627.397       
     141939            11          1546.71     -636.235         -627.397       
     146151            12          1576.60     -636.235         -627.397       
     150272            12          1606.50     -636.235         -627.397       
     154109             9          1636.38     -636.235         -627.397       
     158211             9          1666.28     -636.235         -627.397       
     161519+            5          1696.17     -636.235         -627.397       
     161858+            4          1726.07     -636.235         -627.397       
     164333             6          1755.96     -636.235         -627.397       
     167015+            3          1785.85     -636.235         -627.397       
     169568            14          1815.74     -635.204         -627.397       
     174755            12          1845.63     -635.204         -627.397       
     179250            11          1875.52     -635.204         -627.397       
     183192            11          1905.42     -635.204         -627.397       
     187044             8          1935.34     -635.204         -627.397       
     187459             9          1965.24     -630.778         -627.397       
     189289+            9          1995.15     -630.723         -627.397       
     193063            13          2025.05     -630.723         -627.397       
     197631            11          2054.94     -630.723         -627.397       
     200230             7          2084.84     -630.723         -627.397       
     203690            13          2114.73     -630.723         -627.397       
     207965            13          2144.62     -630.723         -627.397       
     210733+            2          2174.52     -630.723         -627.397       
     210797             0          2194.28     -627.460         -627.397       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  2202.62
 Total CPU time used:              2194.55

 Total no. of BaR iterations:  210797
 Best solution found at node:   26481
 Max. no. of nodes in memory:      26
 
 All done
===========================================================================



*****Running Instance #741*****


objective value: -626.620781024
objective bound: -626.683449368
BARON solution time: 690.23

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2333403942438916
 1.7666596060742195
 0.0
 0.7666596060283019
 1.0981774082000173
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8475590032963383
 0.0
 0.0
 1.1524409971831093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.880425315715794
 1.6601173805502314
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9671336882439427
 1.133746744934479
 0.2869070335255813
 0.9427260869175761
 0.04187554849427573
 0.0
 0.0
 0.0
 0.757530493257995
 2.4891120613323356
 0.11056544873298779
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6455653903928052
 1.9366961710296484
 0.0
 0.45565434236257385
 1.366963026987993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8987802675573116
 2.6963408024827746
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.8571521398247278
 0.14284786008163736
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.562479321068652
 1.4122030381538762
 0.0
 0.1086234018494218
 0.0
 1.4375206799603737
 0.4449491008703174
 0.0
 0.034224459005208714
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7849217541464497
 0.3924608770163318
 0.0
 0.0
 1.2150782461146263
 0.6075391229692378
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.28899028602800403
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7110097149417938
 1.0
 0.28899028525918974
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3438120170965562
 0.6719060082369329
 0.0
 0.656187983272902
 0.3280939914844201
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5095730300497683
 0.7048823407301159
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6489172949622504
 2.9171455906816544
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5020075691264143
 0.0
 0.3510827054530896
 0.0
 1.4904269703715562
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32740139678135344
 0.0
 1.6883166287256925
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4979924316965266
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7110097139638416
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6725986035967539
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.29511765958943686
 0.9555624735462569
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3039984980201111
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.015718025532174
 4.540542696236812
 1.2144553705835592
 0.0
 0.0
 0.0
 0.9842819748543407
 0.0
 3.0
 0.0
 0.0
 2.582261561395472
 0.0
 0.0
 0.0
 6.083305760925197
 0.0
 1.271508668937433
 0.0
 3.0
 1.1773826311627815
 1.8226173693289456
 0.0
 1.9166942397896076
 0.0
 2.2889902868255305
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8648370141899082
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 1.8226173690838643
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.3572080033233185
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.59512106999352
 3.1008804331584705
 0.0
 5.5660628856789875
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.648917294845492
 2.9171455904750907
 0.0
 1.0
 0.5095730300219844
 0.7048823406919138
 0.0
 0.0
 2.0
 0.999999999624281
 0.0
 1.7110097147797987
 1.0
 0.2889902852315511
 2.0
 0.0
 0.0
 0.0
 0.28899028600875365
 0.0
 0.0
 2.0
 0.999999999953363
 0.0
 0.0
 0.0
 6.0
 1.8571521388885928
 0.0
 0.14284786084427228
 2.0
 0.8571521398211881
 0.1428478600810475
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.0444375267438701
 3.4318381481184
 0.1524409972218442
 0.0
 4.847559003786567
 2.7938641253849053
 1.847559003167898
 0.0
 0.0
 1.1524409971029281
 2.0
 2.864837014156567
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.6719060084893809
 0.5942011873328021
 1.0
 0.0
 0.0
 0.0
 0.32809399160769126
 0.0
 1.0
 0.0
 0.0
 0.3227826951627992
 0.0
 0.0
 0.0
 0.7604132201032464
 0.0
 0.2747000430176083
 0.0
 1.0
 0.39246087703463217
 0.22782717115888165
 0.0
 0.2395867799698092
 0.0
 1.0
 0.04788387890972203
 0.6166701970633678
 0.0
 0.07582588525125025
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38332980297780433
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6075391229975743
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.725299957020723
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8762902358390277
 0.0
 0.0
 0.4493901337363697
 0.4057988127029209
 0.0
 1.0



=====Finished running Instance #741=====




*****Running Instance #742*****


objective value: -627.397044451
objective bound: -627.459790331
BARON solution time: 2202.62

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 0.6992309039417588
 0.6748027046039043
 0.0
 1.1552319186375892
 1.114872953621994
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9239774635747418
 0.0
 0.0
 1.0760225363179834
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.252737011609584
 0.6053643431749767
 0.0
 0.0
 0.0
 0.0
 3.671240453112527
 1.7740659411554631
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2572229390481415
 0.9109446839442298
 0.019687590968104112
 0.0
 0.0
 0.0
 0.7360291257259998
 2.606617519389002
 0.05633494593463519
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9290412441963831
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4340705003116475
 1.3022115008552095
 0.0
 0.4882790462390835
 1.4648371386366084
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0776504536271563
 3.2329513607945866
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9837569223936387
 0.4790738439965124
 0.5371692335529376
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.562166804299498
 1.8540556007216218
 0.0
 0.0
 0.0
 0.4378331964674355
 0.14594439878379759
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.105040235233131
 0.0
 0.0
 0.0
 0.780238578314942
 0.0
 0.6979225438025879
 0.3489612717606404
 0.0
 0.0
 1.3020774563978839
 0.6510387279347123
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.5175622021304617
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4824377987150215
 1.0
 0.517562201481839
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.421868745627793
 0.6074669904707787
 0.10346738217779336
 0.5781312543757524
 0.24699583156059482
 0.04206979556516574
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6778400140824922
 0.7099567331009954
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4879454707587327
 3.1030075155811554
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.0
 1.5249221466197673
 0.0
 0.5120545296608957
 0.0
 1.3221599853506056
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2701048717317664
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999992757411
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47507785309570183
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4824377978286726
 0.0
 0.0
 0.520926155884439
 0.11472118657708796
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7298951283125223
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.290043266034829
 1.0067479353809925
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.07095875660894907
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14553717835005364
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.016243077812594202
 0.0
 0.0
 3.6731551085891514
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.132803118276365
 1.8581013549810395
 1.3877967470107613
 0.0
 0.0
 0.0
 0.867196881501513
 0.0
 3.0
 0.0
 0.0
 1.736282001157244
 0.0
 0.0
 0.0
 7.416222405290971
 0.0
 1.1878552139604752
 0.0
 3.0
 1.0468838155632283
 1.9531161848642498
 0.0
 0.5837775952684982
 0.0
 2.5175622028828943
 1.1050402352779574
 1.3740336085127962
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.270104872210518
 0.0
 0.0
 0.0
 2.9290412444330753
 0.0
 0.0
 1.9531161843325962
 0.0
 2.9999999999412585
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.3989815910496373
 0.0
 0.0
 5.44530639484956
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7802385783462514
 0.0
 0.0
 4.3106018143937
 0.0
 0.0
 5.590952986496919
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.4879454706257929
 3.1030075153355323
 0.0
 1.0
 0.677840014992135
 0.7099567340540053
 0.0
 0.0
 2.0
 0.8544628220921383
 0.1455371777596163
 1.482437798589923
 1.0
 0.5175622014455495
 2.0
 0.0
 0.0
 0.0
 0.5175622021172167
 0.0
 0.0
 2.0
 0.9999999996751197
 1.885278813754865
 0.0
 0.0
 6.0
 1.9999999993770083
 0.0
 0.0
 1.9837569224899951
 0.47907384402703673
 0.5371692335853715
 2.0
 6.0
 0.0
 1.9290412440178437
 0.9999999999659058
 0.0
 0.0
 0.9932520648305834
 3.5175622035473055
 0.07602253689252424
 0.0
 4.9239774645780265
 2.37943028424888
 1.92397746341402
 0.0
 0.0
 1.0760225362257074
 1.8544628225794653
 1.7896756582256723
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7109343727675839
 0.25441566713598873
 0.9999999986556829
 0.0
 0.0
 0.0
 0.28906562716853823
 0.0
 1.0
 0.0
 0.0
 0.21703525013428765
 0.0
 0.0
 0.0
 0.9270278006497098
 0.0
 0.2589704548867686
 0.0
 1.0
 0.34896127187443854
 0.24413952309722045
 0.0
 0.07297219940290661
 0.0
 1.0
 0.5861415442484933
 0.3770530718802767
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6229469281192256
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6510387281486545
 0.0
 0.9999999999580842
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.741029545052896
 0.0
 0.0
 0.745584332894739
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.41385845564193907
 0.0
 0.0
 0.5388252267836309
 0.0
 0.0
 1.0



=====Finished running Instance #742=====




