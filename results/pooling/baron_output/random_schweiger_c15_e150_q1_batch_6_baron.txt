===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.31     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.32

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -182.686
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -522.194
 Preprocessing found feasible solution with value -638.138
 Preprocessing found feasible solution with value -638.433
 Preprocessing found feasible solution with value -638.433
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            14.80     -648.811         -638.620       
          1             1            21.62     -645.454         -638.620       
          9+            1            51.51     -644.482         -638.620       
         15             0            65.19     -638.684         -638.620       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    65.52
 Total CPU time used:                65.25

 Total no. of BaR iterations:      15
 Best solution found at node:       3
 Max. no. of nodes in memory:       3
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -174.707
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -626.907
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            15.61     -641.996         -626.907       
         28+            2            45.54     -637.928         -626.907       
         31             0            56.01     -626.970         -626.907       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    56.31
 Total CPU time used:                56.08

 Total no. of BaR iterations:      31
 Best solution found at node:      29
 Max. no. of nodes in memory:       4
 
 All done
===========================================================================



*****Running Instance #11*****


objective value: -638.619743817
objective bound: -638.683612178
BARON solution time: 65.51

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.132720707243429
 0.946012611955417
 0.0
 0.867279293047313
 0.724324314073178
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9541019695001831
 0.0
 0.0
 1.0458980309846377
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5357659723298321
 1.7399299991857196
 0.5339837803385841
 0.0
 0.0
 0.0
 0.9897202600520346
 3.2141719709783545
 0.9864280175205231
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.032587183820215
 0.8225069570267496
 0.04589803103347978
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999016747654142
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5083767484998407
 1.5251302453881472
 0.0
 0.5619218417311763
 1.6857655250737411
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9297014100797847
 2.7891042300695807
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9440955068726935
 0.05590449303278933
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.380054518750321
 2.444270277762364
 0.0
 0.0
 0.0
 0.7545832951242556
 0.4210919093523871
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5015417558337198
 0.2507708778743863
 0.0
 0.0
 1.4984582444275791
 0.7492291220868867
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8484021702950688
 0.0
 0.0
 0.0
 0.48648556125358444
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5135144397295954
 0.992564221662947
 0.49392133889973777
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5211699612280596
 0.7605849802575664
 0.0
 0.47883003916504846
 0.2394150194703184
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8713904076755288
 0.9486326699948232
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0229347059858938
 3.9856668647187425
 0.0
 0.763613546455871
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.15159783042323743
 0.27843442311555744
 0.0
 0.9770652943830356
 0.0
 1.1286095927745765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24604830375587755
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1960793453326894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.665112268624101
 0.0
 0.8653621874361295
 0.05590449379427067
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7539516966310474
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05136733035383648
 0.9674128165126967
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.000983253237534904
 0.0
 0.0
 0.0
 0.0
 1.6470185883379929
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2363864540860629
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.007435778928911834
 4.273758582101895
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.281754941708945
 2.809679751854136
 1.8200230774722814
 0.0
 0.0
 0.0
 0.7182450587056645
 0.0
 3.0
 0.0
 0.0
 2.0335069938689245
 0.0
 0.0
 0.0
 6.824324796273334
 0.0
 0.0
 0.0
 3.0
 0.7523126337081062
 2.247687366782157
 0.0
 1.1756752044384864
 0.0
 2.33488773216569
 0.0
 2.078733319144391
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5916036070790445
 0.0
 0.0
 0.0
 2.9990167475782634
 0.0
 0.0
 2.247687366514466
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9009921718804446
 0.0
 0.0
 5.190320248550912
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.7188056400972647
 0.0
 0.0
 5.77221511706213
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.0229347059150273
 3.985666864441319
 0.0
 0.7636135464030658
 0.8713904076179619
 0.9486326699320219
 0.0
 0.0
 2.0
 0.9999999996301929
 0.0
 1.5135144395797495
 0.9925642215646973
 0.49392133885087347
 1.848402170146739
 0.0
 0.0
 0.0
 0.48648556121335856
 0.0
 0.0
 2.0
 0.999999999928954
 0.0
 0.0
 0.0
 5.134637813494306
 2.8653621869025887
 0.0
 0.0
 2.0
 0.9440955068663176
 0.05590449303242272
 2.0
 6.0
 0.0
 1.9990167474565002
 0.9999999999978646
 0.0
 0.0
 1.0325871837799152
 0.8225069569946476
 0.04589803103168276
 1.5254862323258263
 4.954101969982093
 1.5204117978032532
 1.9541019693588015
 0.0
 0.0
 1.0458980309084382
 2.0
 1.6703369259462966
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.760584980538843
 0.35120996897687534
 1.0
 0.0
 0.0
 0.0
 0.23941501955885441
 0.0
 1.0
 0.0
 0.0
 0.2541883742227991
 0.0
 0.0
 0.0
 0.8530405995217668
 0.0
 0.0
 0.0
 1.0
 0.2507708778922006
 0.2809609208364591
 0.0
 0.14695940055229084
 0.0
 1.0
 0.17538777128394856
 0.5663603535669711
 0.0
 0.22593382444482077
 0.0
 0.0
 0.0
 0.0
 0.0
 0.43363964648169506
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.749229122140124
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.648790031059855
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5986784042712306
 0.0
 0.0
 0.46485070499892284
 0.0
 0.0
 1.0



=====Finished running Instance #11=====




*****Running Instance #12*****


objective value: -626.907333854
objective bound: -626.970030857
BARON solution time: 56.31

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0665221726142724
 1.8672647000713916
 0.0
 0.8066835703546605
 1.4123398403980993
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.000000000288587
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.984908009130872
 1.7909448049776515
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0150919917207446
 1.2090551946944914
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0669883246027108
 1.0477273674496235
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09318824235179234
 0.27956472708056207
 0.0
 0.7500000000344557
 2.25000000028839
 0.0
 0.5384927311139365
 1.6154781934621791
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6183190265850789
 1.8549570798998902
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3777402141852217
 0.9337868725685954
 0.6884729134714298
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.286942410421017
 1.4289808029813877
 0.0
 0.0
 0.0
 1.7130575906214778
 0.5710191966775962
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5640193839879543
 0.2820096919478129
 0.0
 0.0
 1.4359806162733648
 0.717990308019141
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7076396165363334
 0.0
 0.0
 0.0
 0.2116150810236146
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7883849199442732
 1.0
 0.21161508025702214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5445757792273116
 0.6743662198834427
 0.09792166959719073
 0.45542422116418474
 0.19883952254093157
 0.028872588001930977
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7947905107328063
 0.9636407388309414
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 2.7883849214799357
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.2923603841445094
 1.4504560714685857
 0.0
 0.0
 0.0
 1.2052094897032657
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.21902341048577756
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.549543929386076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0807453026200287
 0.0
 0.0
 0.06621312778403887
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7809765898846652
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.03635926150731379
 0.9330116757332485
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.871527331320221
 0.0
 0.0
 0.0
 0.0
 0.12679425815480322
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.622259786559672
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0319225472851845
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.316863668707945
 4.775852814059755
 1.7584312493666652
 0.0
 0.0
 0.3727529694266857
 0.6831363317070474
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 5.715923213436759
 0.0
 0.0
 0.0
 3.0
 0.8460290759357671
 2.1539709245530867
 0.0
 2.284076787317269
 0.0
 1.9192546981694234
 0.0
 2.933786872628288
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.219023410709082
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1539709242925063
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1147156919640184
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4732761064552027
 3.2241471863827953
 0.0
 5.788384921713885
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 2.7883849212898832
 0.0
 1.0
 0.7947905106891896
 0.963640738777778
 0.0
 0.0
 2.0
 0.8732057423390791
 0.12679425758674068
 1.788384919777561
 1.0
 0.21161508023684475
 1.707639616430565
 0.0
 0.0
 0.0
 0.21161508101028334
 0.0
 0.0
 2.0
 0.9999999999346217
 0.0
 0.0
 0.0
 6.0
 1.9999999995089748
 0.0
 0.0
 1.3777402141260549
 0.9337868725284929
 0.6884729134418618
 1.9999999999857678
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.06698832455937
 1.047727367407065
 0.0
 0.0
 5.000000000669692
 2.9999999995629594
 2.0
 0.0
 0.0
 1.0000000002185045
 1.873205742897269
 3.279604540342014
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7722878895379248
 0.5969816017462581
 1.0
 0.0
 0.0
 0.0465941211767842
 0.22771211055976256
 0.0
 1.0
 0.0
 0.0
 0.3750000000223368
 0.0
 0.0
 0.0
 0.7144904016670933
 0.0
 0.0
 0.0
 1.0
 0.28200969196624565
 0.26924636555742243
 0.0
 0.2855095984086745
 0.0
 1.0
 0.27596367776352754
 0.5693566639216744
 0.0
 0.22281405022278006
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4306433361172646
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7179903080660879
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5012222720136925
 0.0
 0.0
 0.309159513294721
 0.40301839829010705
 0.0
 1.0



=====Finished running Instance #12=====




