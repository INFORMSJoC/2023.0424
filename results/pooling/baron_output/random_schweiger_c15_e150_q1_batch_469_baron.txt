===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.33     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.35
 Total CPU time used:                 0.33

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -626.484
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -626.484
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            13.82     -639.640         -626.484       
         22+            3            43.73     -631.420         -626.484       
         27             0            58.41     -626.547         -626.484       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                    58.74
 Total CPU time used:                58.48

 Total no. of BaR iterations:      27
 Best solution found at node:      23
 Max. no. of nodes in memory:       6
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -204.381
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -397.921
 Preprocessing found feasible solution with value -630.404
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            22.87     -640.058         -630.404       
*        16             4            53.76     -639.409         -630.583       
       1186            10            83.72     -639.171         -630.583       
       4240             9           113.60     -639.171         -630.583       
       5482+            5           143.48     -639.171         -630.583       
       5647+            9           173.35     -639.171         -630.583       
       5803+            8           203.25     -639.171         -630.583       
       6063            10           233.13     -639.171         -630.583       
       6707            11           263.01     -639.171         -630.583       
      10474            13           292.89     -639.171         -630.583       
      14350            12           322.77     -639.171         -630.583       
      18108            11           352.66     -639.171         -630.583       
      19462+            7           382.54     -639.171         -630.583       
      19558+            3           412.45     -639.171         -630.583       
      19681+            8           442.34     -639.171         -630.583       
      19767+            6           472.24     -639.171         -630.583       
      19950+            8           502.13     -639.171         -630.583       
      22124            15           532.01     -639.171         -630.583       
      25823            15           561.90     -639.171         -630.583       
      29739             7           591.79     -639.171         -630.583       
      32380+            5           621.67     -639.171         -630.583       
      32430+            2           651.57     -638.327         -630.583       
      32883             7           681.45     -635.667         -630.583       
      35122+            8           711.34     -635.667         -630.583       
      37302            12           741.22     -635.662         -630.583       
      42176            14           771.11     -635.662         -630.583       
      47134            16           800.99     -635.662         -630.583       
      48015             9           830.88     -635.662         -630.583       
      50316+            7           860.77     -635.662         -630.583       
      53965            12           890.66     -635.600         -630.583       
      57921            11           920.55     -635.600         -630.583       
      60180             9           950.44     -635.600         -630.583       
      63694            13           980.33     -635.600         -630.583       
      65149+            7          1010.22     -635.600         -630.583       
      65569+            8          1040.11     -635.600         -630.583       
      66691            14          1069.99     -635.600         -630.583       
      70969            11          1099.88     -635.600         -630.583       
      72770            10          1129.77     -635.600         -630.583       
      76539+            4          1159.66     -635.600         -630.583       
      76982             9          1189.56     -634.403         -630.583       
      79734            11          1219.44     -634.403         -630.583       
      83805            14          1249.33     -634.403         -630.583       
      88048            12          1279.21     -634.403         -630.583       
      88435             7          1309.11     -634.403         -630.583       
      88722            11          1339.02     -634.403         -630.583       
      88958+            6          1368.91     -634.403         -630.583       
      89230+            6          1398.81     -634.403         -630.583       
      89426+            5          1428.70     -634.403         -630.583       
      89505             0          1456.89     -630.646         -630.583       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1463.59
 Total CPU time used:              1457.76

 Total no. of BaR iterations:   89505
 Best solution found at node:    2369
 Max. no. of nodes in memory:      19
 
 All done
===========================================================================



*****Running Instance #937*****


objective value: -626.48403483
objective bound: -626.546689497
BARON solution time: 58.74

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1320564671296938
 1.867943533198672
 0.0
 0.867943533126807
 1.432145442352946
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 1.0000000002745721
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.19653134930621435
 3.0556383873125155
 1.63685168232697
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.1250566863662686
 1.944361613553478
 1.0415602812858262
 0.17686595374405112
 0.6282289144982738
 0.0
 0.0
 0.0
 0.0
 0.8636220654296134
 3.0675906878364363
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06484331707202444
 0.19452995125253755
 0.0
 0.7499999999750414
 2.250000000340125
 0.0
 0.5342740031797873
 1.602822009822042
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6508826797003209
 1.9526480394550085
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9300971348684295
 0.7900302890804771
 0.27987257634094176
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.3232254670125005
 1.5881224692728106
 0.0
 0.18628601930630384
 0.0
 0.6767745340302261
 0.20190781900597807
 0.0
 0.023683692282106598
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.575269325037606
 0.28763466247191205
 0.0
 0.0
 1.4247306752236504
 0.7123653374956882
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8631088905875597
 0.0
 0.0
 0.0
 0.6227409989566404
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.377259002027209
 0.9465901432684518
 0.676150855000747
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.405707635514857
 0.702853817422302
 0.0
 0.5942923648750427
 0.297146182295845
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7491415615398599
 0.7579817621924344
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5759019758849055
 2.645437182847783
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.1368911101581998
 1.3185083701759899
 0.0
 0.42409802453743123
 0.0
 1.25085843890402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3000889752256938
 0.0
 1.74274281634942
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.35990359493665935
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5141501106204631
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.6999110251537493
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24201823813380782
 0.9595119811543146
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.06990286592558925
 0.0
 0.0534098573168153
 0.6772956328731742
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1085614531507826
 4.8890214189457
 1.5071233235352561
 0.0
 0.0
 0.25937326832099344
 0.8914385472612117
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.097633955415963
 0.0
 0.8050948682257495
 0.0
 3.0
 0.862903987509518
 2.137096012980189
 0.0
 0.902366045296216
 0.0
 2.4858498901675055
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.3000889754364926
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.1370960127193386
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.931212753187153
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.603530719124081
 3.110978581205573
 0.0
 5.221339158732171
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.5759019757611776
 2.645437182638077
 0.0
 1.0
 0.7491415614902627
 0.7579817621422521
 0.0
 0.0
 2.0
 0.9999999996218422
 0.0
 1.3772590018919297
 0.9465901431754906
 0.6761508549343596
 1.8631088904236763
 0.0
 0.0
 0.0
 0.6227409989004908
 0.0
 0.0
 2.0
 0.9999999999352995
 0.0
 0.0
 0.0
 6.0
 1.7900302881455492
 0.0
 0.20996971157398187
 1.930097134742042
 0.7900302890287425
 0.27987257632261264
 1.9999999998278915
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 1.040488019137308
 3.695819602202537
 0.0
 0.32158803566084354
 5.0000000006849925
 2.6784119635158397
 2.0
 0.0
 0.0
 1.000000000205346
 2.0
 3.3000889754279332
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7028538176880962
 0.6111276773787794
 1.0
 0.0
 0.0
 0.03242165853900589
 0.29714618240820484
 0.0
 1.0
 0.0
 0.0
 0.3750000000216309
 0.0
 0.0
 0.0
 0.8872042444146104
 0.0
 0.16998365237413723
 0.0
 1.0
 0.28763466249051906
 0.2671370016109227
 0.0
 0.11279575566056366
 0.0
 1.0
 0.12865002529105388
 0.5660282335134585
 0.0
 0.12399876597556451
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4339717665240452
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.712365337541783
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8300163476616498
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7473512087333816
 0.0
 0.0
 0.32544133987822077
 0.38887232265742055
 0.0
 1.0



=====Finished running Instance #937=====




*****Running Instance #938*****


objective value: -630.582712568
objective bound: -630.64577711
BARON solution time: 1463.58

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1967116062276317
 1.2974700578979435
 0.0
 0.8032883939655565
 0.8709221451216186
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8949874396258835
 0.0
 0.0
 1.1050125602606413
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3756898121268877
 0.5730591260741071
 0.0
 0.0
 0.0
 0.0
 3.5192976284332875
 1.4660031684438302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32474169405387643
 0.8799615787275957
 0.032014352226977835
 0.0
 0.0
 0.0
 0.7404667038093466
 2.0064631724577717
 0.07299820842718611
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9999999998156303
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39952091994238403
 1.1985627597879054
 0.0
 0.5077365203690073
 1.5232095610338623
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0927425598019644
 3.278227679148897
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8421937797994175
 0.7974219635460315
 0.3603842569414899
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.223718079323299
 1.7412393586242423
 0.0
 0.0
 0.0
 0.7762819204912863
 0.25876063989162207
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3032402989418174
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6460359460172937
 0.3230179729570781
 0.0
 0.0
 1.3539640542519134
 0.6769820270182764
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4945683495386948
 0.0
 0.0
 0.0
 0.39185639862021815
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6081436019859072
 1.0
 0.3918563982221358
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4652272568479217
 0.7326136280117447
 0.0
 0.5347727434120917
 0.2673863715429458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6056382486542135
 0.8537918014106894
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1037063037428554
 3.5690813083907953
 0.0
 0.9769972447910023
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.5054316497655139
 1.5721490142531078
 0.0
 0.8962936965575247
 0.0
 1.394361751418187
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24176609095801485
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4278509861424402
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.1135752508591616
 0.0
 0.0
 0.20257803699325055
 1.6967597013176643
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7582339093616545
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.14620819840801544
 0.9347916024341458
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.023002755690621688
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.15780622099466562
 0.0
 0.0
 3.4712235411072916
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1978408851599527
 1.9487489383945582
 1.4594300502663593
 0.0
 0.0
 0.0
 0.8021591151301386
 0.0
 3.0
 0.0
 0.0
 1.598083679837275
 0.0
 0.0
 0.0
 6.964957438525745
 0.0
 1.23671762500845
 0.0
 3.0
 0.9690539189743642
 2.0309460815046103
 0.0
 1.0350425608193485
 0.0
 1.8864247498900228
 0.3032402988945131
 2.4941816641356085
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6742105391159803
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0309460812701894
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.8199280846943044
 0.0
 0.0
 4.9853007972175245
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.370970239024498
 0.0
 0.0
 5.6497848570841525
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.1037063037376749
 3.569081308355283
 0.0
 0.9769972447873544
 0.6056382489636403
 0.8537918018462842
 0.0
 0.0
 2.0
 0.9999999995661333
 0.0
 1.60814360182652
 1.0
 0.39185639819840296
 1.4945683508096932
 0.0
 0.0
 0.0
 0.39185639895365876
 0.0
 0.0
 2.0
 0.9999999999458438
 0.3032402990627356
 0.0
 0.0
 6.0
 1.9999999989310193
 0.0
 0.0
 1.8421937796622145
 0.7974219635007282
 0.36038425693389514
 2.0
 5.999999999921893
 0.0
 2.0
 0.9999999999018154
 0.0
 0.0
 1.0652083978376712
 2.886424751122673
 0.10501256064895408
 0.0
 4.894987440522828
 2.039062294529647
 1.894987439724815
 0.0
 0.0
 1.1050125603517982
 2.0
 2.168392203006922
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7326136283638489
 0.28104051927445445
 0.9999999994917725
 0.0
 0.0
 0.0
 0.267386371688834
 0.0
 1.0
 0.0
 0.0
 0.1997604599674156
 0.0
 0.0
 0.0
 0.8706196798053517
 0.0
 0.3048621234229634
 0.0
 0.9999999999670559
 0.32301797297832974
 0.2538682601758388
 0.0
 0.12938032008152836
 0.0
 0.9999999991503759
 0.9999999996505946
 0.5983558030566013
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4016441969435595
 0.0
 0.0
 0.0
 0.9999999999779069
 0.0
 0.0
 0.6769820270649611
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6951378765989379
 0.0
 0.0
 0.7189594807330039
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5463712798657716
 0.0
 0.0
 1.0



=====Finished running Instance #938=====




