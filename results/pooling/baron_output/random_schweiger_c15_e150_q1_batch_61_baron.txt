===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.29     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.31
 Total CPU time used:                 0.30

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -194.247
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -644.371
 Preprocessing found feasible solution with value -644.371
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            16.51     -651.911         -644.371       
         51             7            46.41     -647.342         -644.371       
       1067            12            76.31     -647.342         -644.371       
       4764            12           106.20     -647.342         -644.371       
       9206             9           136.10     -647.342         -644.371       
      12180            11           166.00     -647.342         -644.371       
      16775            12           195.89     -647.342         -644.371       
      21344            13           225.78     -647.342         -644.371       
      25226+            5           255.68     -647.342         -644.371       
      25385+            4           285.57     -647.163         -644.371       
      25713             6           315.48     -646.793         -644.371       
      28622             6           345.37     -646.432         -644.371       
      29097             0           354.96     -644.436         -644.371       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   356.40
 Total CPU time used:               355.08

 Total no. of BaR iterations:   29097
 Best solution found at node:       1
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -137.351
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -461.510
 Preprocessing found feasible solution with value -621.390
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
*         1             1            14.76     -635.826         -622.857       
          1             1            17.30     -635.084         -622.857       
         98             7            47.39     -634.899         -622.857       
       2029            10            77.28     -634.899         -622.857       
       6144+            7           107.18     -634.899         -622.857       
       9124            11           137.07     -634.899         -622.857       
      13993             9           166.96     -634.899         -622.857       
      18152             5           196.85     -634.899         -622.857       
      22321             8           226.74     -634.899         -622.857       
      23334            11           256.63     -634.899         -622.857       
      25780             9           286.51     -634.899         -622.857       
      29124             8           316.40     -634.899         -622.857       
      33066             8           346.29     -634.899         -622.857       
      37523             9           376.18     -634.899         -622.857       
      41764            11           406.07     -634.899         -622.857       
      46095             8           435.95     -634.899         -622.857       
      48782             9           465.85     -634.899         -622.857       
      53429             8           495.74     -634.899         -622.857       
      57651             7           525.63     -634.899         -622.857       
      61643             8           555.52     -634.899         -622.857       
      66593            10           585.41     -634.899         -622.857       
      71028             9           615.30     -634.899         -622.857       
      75708             9           645.19     -634.881         -622.857       
      80276             9           675.08     -634.881         -622.857       
      83750+            6           704.97     -631.172         -622.857       
      86862             6           734.86     -628.906         -622.857       
      90576+           10           764.75     -628.854         -622.857       
      93682+            4           794.64     -628.854         -622.857       
      95490             9           824.53     -628.793         -622.857       
      99674             7           854.42     -628.793         -622.857       
     102421             7           884.31     -628.767         -622.857       
     106718            13           914.20     -628.767         -622.857       
     107584+            4           944.09     -628.767         -622.857       
     108085+            3           974.00     -628.596         -622.857       
     111015             7          1003.89     -627.510         -622.857       
     115713             7          1033.78     -627.510         -622.857       
     119271+            3          1063.67     -626.063         -622.857       
     119631             0          1078.99     -622.919         -622.857       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1083.19
 Total CPU time used:              1079.10

 Total no. of BaR iterations:  119631
 Best solution found at node:    4076
 Max. no. of nodes in memory:      17
 
 All done
===========================================================================



*****Running Instance #121*****


objective value: -644.37135516
objective bound: -644.435798729
BARON solution time: 356.39

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.2351039200393827
 0.0
 0.0
 0.7648960797927804
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.1478048092506564
 0.8521951909820448
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6569073398775294
 1.8867463010007424
 0.38846421464743564
 0.0
 0.0
 0.0
 1.1354008057677814
 3.261058509157588
 0.6714228256385505
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.32761454368999265
 0.7674777440879711
 0.0
 0.0
 0.0
 0.0
 0.6300325914580275
 1.475929568171977
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.05854787298815671
 0.1756436189140679
 0.0
 0.7500000000751926
 2.250000000166267
 0.0
 0.5701510054019547
 1.7104530161514604
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6213011218338489
 1.863903365443252
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.7457234564923225
 0.916876865505901
 0.33739967773252605
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.450691456255918
 2.7168334537093206
 0.0
 0.0
 0.0
 0.5169273664224945
 0.31554772468056
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6493917666866297
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4795973193422017
 0.23979865961217767
 0.0
 0.0
 1.5204026809065057
 0.7602013402607685
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9059328922253864
 0.0
 0.0
 0.0
 0.3698555975728802
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6301444033920738
 1.0
 0.3698555968003891
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5177927145912675
 0.7588963566220167
 0.0
 0.4822072857996235
 0.24110364268929618
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4674041643383445
 0.5263188721380418
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9042285858807092
 4.570257364428614
 0.0
 0.7719034957616492
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.09406710843722094
 0.0
 0.0
 1.0957714144826658
 0.0
 1.5325958357184208
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2074102517333631
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9999999998030302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20769185512990385
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7242115103110294
 0.0
 1.0323811785740034
 0.08312313486846251
 1.3506082329022175
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7925897482995818
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4736811276515288
 1.0423528650711549
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.22809650475208
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2542765439158258
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.514795513909595
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.276689071737859
 2.9321178555257075
 0.9937230362912868
 0.0
 0.0
 0.23419149190160748
 0.7233109286575348
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 7.167524909768089
 0.0
 1.0950922877465181
 0.0
 3.0
 0.719395978954379
 2.2806040215196877
 0.0
 0.8324750910619628
 0.0
 2.275788490441961
 0.6493917669190026
 1.2351039199846694
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7648960797510792
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.280604021167274
 0.0
 2.999999999730704
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.1059621595841564
 0.0
 0.0
 5.06788214056392
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.4852044872410355
 0.0
 0.0
 6.246389446098814
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 0.9042285858077508
 4.570257364062682
 0.0
 0.7719034956999774
 0.46740416465724244
 0.5263188724981167
 0.0
 0.0
 2.0
 0.9999999992079477
 0.0
 1.6301444032305923
 1.0
 0.3698555967691133
 1.9059328920967509
 0.0
 0.0
 0.0
 0.36985559753768343
 0.0
 0.0
 2.0
 0.9999999998384689
 0.6493917674655469
 0.0
 0.0
 4.967618822263826
 3.0323811781319994
 0.0
 0.0
 1.7457234567192914
 0.9168768656310433
 0.33739967778816476
 2.0
 6.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.9576471351799702
 2.2434073123422364
 0.0
 1.7923081455673011
 5.147804809934722
 1.0598870402423792
 2.0
 0.0
 0.1478048092522596
 0.8521951909234521
 1.999999999766599
 0.0
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7588963572286873
 0.3665147321360266
 0.9999999993087947
 0.0
 0.0
 0.029273936482010765
 0.24110364287762082
 0.0
 1.0
 0.0
 0.0
 0.3750000000105564
 0.0
 0.0
 0.0
 0.8959406137064924
 0.0
 0.3421036117098889
 0.0
 1.0
 0.2397986596482697
 0.2850755026784792
 0.0
 0.10405938637941954
 0.0
 1.0
 0.9999999987992655
 0.6175519600909363
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.38244803994019827
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7602013403844466
 0.0
 0.9999999998792007
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6578963882540398
 0.0
 0.0
 0.6334852679078088
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.31065056089251075
 0.0
 0.0
 1.0



=====Finished running Instance #121=====




*****Running Instance #122*****


objective value: -622.857050273
objective bound: -622.919342203
BARON solution time: 1083.18

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  â€¦  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.3185408110978207
 1.3661172974323625
 0.0
 0.6814591891446716
 0.706048063092917
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.2978044203043007
 0.23212493449727456
 0.8396678536112808
 0.10109369527235341
 0.0
 0.0
 0.0
 0.8735702038665973
 3.1599742597724516
 0.38045219131240376
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7500000000155363
 2.25000000005941
 0.0
 0.5107191560225243
 1.5321574680509034
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7392808441498411
 2.21784253246104
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.8418126253116183
 0.795450228727944
 0.3627371461768366
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.902968917459466
 1.6343229129251255
 0.0
 5.9371731598495945e-8
 0.0
 1.0970310835192532
 0.3656770145378364
 0.0
 1.3315034926453504e-8
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11079219247921374
 0.0
 0.0
 0.0
 0.09914929784011837
 0.0
 0.6380822509976578
 0.3190411254103916
 0.0
 0.0
 1.3619177492433259
 0.6809588744287354
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.769257028258988
 0.0
 0.0
 0.0
 0.48446026148197024
 0.7459247502683076
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5155397394482741
 0.9782126661918635
 0.5062475946628293
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.4578964124471963
 0.7289482058412508
 0.0
 0.5421035879442754
 0.27105179383351496
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.39139316665717505
 0.9985688384729214
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 4.195947986381445
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  â€¦  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.23074297239328756
 1.408050700998731
 0.0
 0.0
 0.0
 1.6086068333285515
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.2592411127980611
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.999999999594263
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5919492997081947
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.00035795987300111994
 0.0
 0.0
 0.20454969907264484
 1.7900585098790487
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7407588874932443
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.001431160747654286
 0.8943048618052416
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5184541133257532
 0.0
 0.15818737537278704
 0.0
 0.021787334350533323
 3.56509749438852
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.1868446184589163
 0.0
 1.3899620049490777
 0.0
 0.0
 0.0
 0.8131553818299465
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.537291889621063
 0.0
 1.1728864833809085
 0.0
 3.0
 0.9571233764080491
 2.042876624051411
 0.0
 1.4627081113080358
 0.0
 2.9996420408541455
 0.11079219244113898
 2.684658108489274
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3875072522025418
 0.0
 0.0
 0.0
 3.0
 0.0
 0.0
 2.0428766236720612
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.413996654951452
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.09914929780312212
 0.0
 0.0
 2.9571233765712246
 1.297804420182553
 0.0
 7.195947986570143
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  â€¦  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 4.195947986138563
 0.0
 1.0
 0.3913931670346024
 0.9985688394450936
 0.0
 0.0
 2.0
 0.9999999995665699
 0.0
 1.5155397393119527
 0.978212666107894
 0.5062475946254371
 1.769257028122254
 0.0
 0.0
 0.0
 0.4844602614353511
 0.7459247502028746
 0.0
 2.0
 0.9999999998076583
 0.20994149047729418
 0.0
 0.0
 6.0
 1.9999999273159614
 0.0
 7.271485411740406e-8
 1.8418126252226406
 0.7954502286942988
 0.36273714616694264
 2.0
 6.0
 0.0
 2.0
 0.9999999999892752
 0.0
 0.0
 1.105695138440331
 3.9996421136706592
 0.4815458866150585
 0.0
 0.0
 1.2978044202792471
 0.0
 0.0
 0.0
 2.9999999999333697
 2.0
 2.072165360436587
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  â€¦  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7289482061607275
 0.0
 0.9999999990263209
 0.0
 0.0
 0.0
 0.2710517939477191
 0.0
 1.0
 0.0
 0.0
 0.3749999999880755
 0.0
 0.0
 0.0
 0.8171614861834274
 0.0
 0.20993574668655157
 0.0
 1.0
 0.3190411254697567
 0.25535957799256404
 0.0
 0.18283851390318204
 0.0
 1.0
 0.5277289030705213
 0.6592704054969865
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3407295945453088
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.680958874561912
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7900642532422837
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.47227109617082963
 0.0
 0.0
 0.36964042205528136
 1.0
 0.0
 1.0



=====Finished running Instance #122=====




