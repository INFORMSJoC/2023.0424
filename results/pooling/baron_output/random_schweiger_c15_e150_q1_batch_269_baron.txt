===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -1.64505
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -1.64505
 Preprocessing found feasible solution with value -1.64505
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             0             0.30     -1.64521         -1.64505       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.33
 Total CPU time used:                 0.31

 Total no. of BaR iterations:       1
 Best solution found at node:      -1
 Max. no. of nodes in memory:       1
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -213.524
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -624.090
 Preprocessing found feasible solution with value -625.684
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            22.15     -640.576         -625.684       
         36+            5            52.06     -639.789         -625.684       
        173+            5            81.95     -639.789         -625.684       
       2725            13           111.83     -639.789         -625.684       
       6247            13           143.47     -639.789         -625.684       
       9107+            8           173.36     -639.789         -625.684       
       9380             4           203.26     -639.789         -625.684       
      12195             8           233.14     -639.789         -625.684       
      13245+            4           263.04     -639.789         -625.684       
      13375+            4           292.93     -639.789         -625.684       
      17427             8           322.81     -639.789         -625.684       
      21443+            7           352.71     -639.789         -625.684       
      21657+            6           382.59     -639.710         -625.684       
      21810             6           412.48     -639.710         -625.684       
      22014+            5           442.37     -639.710         -625.684       
      25500             8           472.25     -639.710         -625.684       
      29957             8           502.13     -639.656         -625.684       
      34092             8           532.01     -639.656         -625.684       
      38316             9           561.90     -639.156         -625.684       
      39643+            4           591.78     -639.156         -625.684       
      39764+            6           621.68     -636.253         -625.684       
      41680+            4           651.59     -632.592         -625.684       
      41699             0           664.38     -625.746         -625.684       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                   667.17
 Total CPU time used:               664.53

 Total no. of BaR iterations:   41699
 Best solution found at node:    9420
 Max. no. of nodes in memory:      18
 
 All done
===========================================================================
===========================================================================
 BARON version 23.6.23. Built: LNX-64 Fri Jun 23 12:56:02 EDT 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Russell Bent at LANL, rbent@lanl.gov.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Doing local search
 Preprocessing found feasible solution with value -204.907
 Solving bounding LP
 Starting multi-start local search
 Preprocessing found feasible solution with value -623.930
 Preprocessing found feasible solution with value -623.930
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1            18.04     -637.014         -623.930       
         37+            5            49.42     -635.843         -623.930       
       1733             9            80.94     -635.843         -623.930       
       5520             8           110.82     -635.843         -623.930       
       9057             9           140.69     -635.843         -623.930       
      12532            10           170.57     -635.843         -623.930       
      15905             7           200.45     -635.843         -623.930       
      18979             7           230.33     -635.843         -623.930       
      22228             4           260.21     -635.843         -623.930       
      26054            12           290.10     -635.843         -623.930       
      29979             6           319.98     -635.843         -623.930       
      32328            13           349.86     -635.843         -623.930       
      36331            11           379.74     -635.843         -623.930       
      40027             9           409.62     -635.843         -623.930       
      44664             7           439.50     -635.843         -623.930       
      49380             8           469.38     -635.843         -623.930       
      53980            10           499.26     -635.596         -623.930       
      58071+            6           529.15     -635.596         -623.930       
      61670             7           559.03     -635.596         -623.930       
      65669             9           588.91     -635.596         -623.930       
      69970             8           618.79     -635.596         -623.930       
      74038             7           648.67     -635.596         -623.930       
      77896             9           678.55     -634.868         -623.930       
      81009            10           708.43     -634.456         -623.930       
      84809             5           738.31     -634.456         -623.930       
      89176             9           768.19     -634.456         -623.930       
      93141+            6           798.09     -634.456         -623.930       
      95180             8           827.98     -634.456         -623.930       
      99282             5           857.86     -634.456         -623.930       
     103236             9           887.74     -634.456         -623.930       
     106765             5           917.63     -634.456         -623.930       
     110891             8           947.51     -634.348         -623.930       
     113890+            7           977.40     -634.348         -623.930       
     117744            10          1007.28     -634.348         -623.930       
     120675            10          1037.16     -634.348         -623.930       
     123293             6          1067.04     -634.348         -623.930       
     126977             7          1096.92     -634.348         -623.930       
     131107             8          1126.81     -634.348         -623.930       
     133038             6          1156.69     -634.348         -623.930       
     136273             6          1186.57     -634.348         -623.930       
     140293             8          1216.45     -634.348         -623.930       
     143026+            5          1246.33     -634.348         -623.930       
     146297             9          1276.22     -634.348         -623.930       
     150131             9          1306.10     -634.348         -623.930       
     154122            11          1335.98     -634.348         -623.930       
     158043             6          1365.87     -634.348         -623.930       
     161739+            3          1395.75     -634.348         -623.930       
     164890            10          1425.63     -633.954         -623.930       
     168909            12          1455.51     -633.954         -623.930       
     172677            10          1485.40     -633.954         -623.930       
     173548+            6          1515.30     -633.954         -623.930       
     173656+            5          1545.19     -633.954         -623.930       
     173805             7          1575.08     -633.889         -623.930       
     177201+            6          1604.98     -633.889         -623.930       
     177261             5          1634.86     -633.889         -623.930       
     177302+            2          1664.75     -630.852         -623.930       
     177305             0          1676.05     -623.992         -623.930       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                  1682.94
 Total CPU time used:              1676.11

 Total no. of BaR iterations:  177305
 Best solution found at node:    2700
 Max. no. of nodes in memory:      21
 
 All done
===========================================================================



*****Running Instance #537*****


objective value: -625.683596066
objective bound: -625.746170651
BARON solution time: 667.17

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.1076291521587767
 1.6297524990610008
 0.0
 0.8923708480929882
 1.3130239638046417
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.4980266857300174
 0.5019733144561119
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11260297110909054
 1.7636582809630807
 0.6899806110883554
 0.0
 0.0
 0.0
 0.23842542641997538
 3.7343684056956326
 1.4609643049359091
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.10929993148325921
 0.3283422366021864
 0.0
 0.0
 0.0
 0.0
 1.0025839218969028
 3.0118101889816593
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9556284982496446
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5900982188562106
 1.7702946568889708
 0.0
 0.0
 0.0
 0.0
 0.477887301296077
 1.4336619041406495
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9320144796278995
 2.7960434394136393
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.120776084856034
 1.3735920275735827
 0.0
 0.0
 0.0
 1.8792239162272812
 0.6264079717544546
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.26261834901077064
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7256338634142745
 0.3628169316577113
 0.0
 0.0
 1.2743661368483954
 0.6371830683353306
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.783373789286526
 0.0
 0.0
 0.0
 0.5567786345679093
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.443221366417423
 0.9523890302534169
 0.6043896036279852
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5194615228997843
 0.7597307610865746
 0.0
 0.4805384774978289
 0.24026923863426786
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.7042782756096057
 0.8322141983323353
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.2446654812295385
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.21662621145444833
 1.2190763219340552
 0.0
 0.0
 0.0
 1.295721724833408
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.20539481162750478
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4298952813245381
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6598475762886052
 0.0
 0.0
 0.0
 1.7373816513450584
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7946051887333739
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.16778580201102258
 0.8881161469348791
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.04437150262676291
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.047610970332473926
 2.5591968525433426
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2791922842201524
 2.5662418631605264
 1.5364924737441596
 0.0
 0.0
 2.360392875717183
 0.7208077162062934
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 5.4943681127050805
 0.0
 0.43764216807566975
 0.0
 3.0
 1.0884507950719857
 1.9115492054176795
 0.0
 2.5056318881269113
 0.0
 2.3401524244974055
 0.2626183489307641
 2.7373816511636098
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.205394811852265
 0.0
 0.0
 0.0
 2.9556284981644727
 0.0
 0.0
 1.9115492051837262
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.014394110793669
 0.0
 0.0
 5.433758137051517
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 3.7280579189868024
 0.0
 0.0
 3.2446654814298896
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 2.0
 0.24466548121190232
 0.0
 1.0
 0.7042782755595152
 0.8322141982731392
 0.0
 0.0
 2.0
 0.9999999996211532
 0.0
 1.4432213662764413
 0.9523890301605289
 0.6043896035691617
 1.78337378912381
 0.0
 0.0
 0.0
 0.5567786345145253
 0.0
 0.0
 2.0
 0.9999999999606903
 0.26261834904793263
 0.0
 0.0
 6.0
 1.9999999991694644
 0.0
 0.0
 2.0
 1.0
 0.0
 1.9999999998275104
 6.0
 0.0
 1.9556284980544005
 0.9999999999963245
 0.0
 0.0
 1.1118838533572248
 3.340152425513277
 0.0
 0.35102839751798764
 5.498026686467013
 2.1509449159502085
 2.0
 0.0
 0.4980266856958025
 0.5019733144216266
 2.0
 2.942776462752497
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7597307613756225
 0.3207802328975942
 1.0
 0.0
 0.0
 0.2950491094530221
 0.24026923872499448
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6867960140753402
 0.0
 0.09830157273489155
 0.0
 1.0
 0.3628169316708362
 0.23894365066627077
 0.0
 0.31320398600573374
 0.0
 1.0
 0.999999999869996
 0.5538145760287316
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4461854240052881
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.6371830683625933
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9016984272862547
 0.0
 0.0
 0.6792197671368868
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.4660072398598956
 0.0
 0.0
 1.0



=====Finished running Instance #537=====




*****Running Instance #538*****


objective value: -623.929808691
objective bound: -623.992207907
BARON solution time: 1682.94

w_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(25, 1, 2), (25, 1, 1), (25, 1, 14), (20, 1, 2), (20, 1, 1), (20, 1, 14), (1, 1, 2), (1, 1, 1), (1, 1, 14), (2, 1, 2)  …  (20, 15, 23), (20, 15, 3), (8, 15, 30), (8, 15, 29), (8, 15, 23), (8, 15, 3), (2, 15, 30), (2, 15, 29), (2, 15, 23), (2, 15, 3)]
And data, a 261-element Vector{Float64}:
 1.0638877635518205
 1.9361122367926977
 0.0
 0.7966033600136848
 1.4496956972639026
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.9870878311854445
 0.0
 0.0
 1.0129121692934733
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.9402666396598196
 1.4956972318667086
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0468211921691903
 1.0412065184699602
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.9837507450033292
 1.0175652623842473
 0.01291216933974302
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.863255700174997
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.11968455442541429
 0.359053663255015
 0.0
 0.7500000001134028
 2.2500000002088596
 0.0
 0.5685850399481451
 1.7057551197336844
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.5617304058078074
 1.6851912173134693
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.9934066983533459
 0.006593301717379137
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 4.641537918430014
 1.5420787953751833
 0.0
 0.0051005104238570085
 0.0
 1.3584620826006184
 0.4513279022410098
 0.0
 0.001492791857394765
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.48377322725259164
 0.24188661358442123
 0.0
 0.0
 1.5162267730087007
 0.7581133863730972
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.6074637585533225
 0.0
 0.0
 0.0
 0.5471421749239848
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.452857826049685
 0.9425480986237386
 0.6045940756221327
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.5292211145226224
 0.657940596965486
 0.10666996016760956
 0.47077888586627453
 0.20255052605802987
 0.03283891683564053
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.563047871309885
 0.6274883677590749
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.3391411904044148
 2.8585021754979154
 0.0
 1.0
x_ij_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 30), (43, 22), (43, 6), (44, 22), (45, 30), (45, 29), (45, 28), (45, 24), (45, 23), (40, 29)  …  (5, 7), (5, 14), (6, 4), (6, 3), (1, 14), (1, 10), (1, 23), (1, 1), (3, 2), (3, 1)]
And data, a 116-element Vector{Float64}:
 0.0
 0.3925362421113979
 1.628250157321129
 0.0
 0.6608588099979824
 0.0
 1.4369521291112803
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.24629905702761462
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.37174984353294543
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.8453940666935695
 0.0
 0.0
 0.0
 2.0
 0.0
 0.0
 0.0
 0.0
 6.0
 0.0
 0.0
 0.0
 0.0
 0.7537009433552858
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.3725116325474606
 1.0162492553265887
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.13674430070454363
 0.0
 0.0
 0.0
 0.0
 2.143633974339622
 0.0
 0.0
 0.0
 0.0
 0.13950887755495497
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.057451901961994525
 2.607598765418611
 0.0
 0.0
x_il_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 2.2938316716557177
 4.435963871479542
 1.1905362388713892
 0.0
 0.0
 0.47873821767421254
 0.7061683287599448
 0.0
 3.0
 0.0
 0.0
 3.0
 0.0
 0.0
 0.0
 6.188717224074782
 0.0
 0.0
 0.0
 3.0
 0.7256598408370128
 2.274340159656663
 0.0
 1.8112827766536528
 0.0
 2.154605934094195
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.246299057234973
 0.0
 0.0
 0.0
 2.8632557001138634
 0.0
 0.0
 2.274340159381798
 0.0
 3.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.0142281767273196
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 2.246921623096684
 3.088027710606442
 0.0
 5.197643365901789
x_lj_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(15, 30), (15, 29), (15, 23), (15, 3), (14, 28), (14, 27), (14, 10), (14, 24), (13, 26), (13, 25)  …  (3, 6), (3, 5), (3, 29), (2, 4), (2, 3), (2, 1), (2, 5), (1, 2), (1, 1), (1, 14)]
And data, a 53-element Vector{Float64}:
 1.339141190300481
 2.858502175274274
 0.0
 1.0
 0.5630478712824879
 0.6274883677286712
 0.0
 0.0
 2.0
 0.8604911229391388
 0.13950887698958278
 1.4528578259063776
 0.9425480985308088
 0.6045940755625655
 1.6074637584445302
 0.0
 0.0
 0.0
 0.5471421748866455
 0.0
 0.0
 2.0
 0.9999999999252056
 0.0
 0.0
 0.0
 6.0
 1.9934066974678317
 0.0
 0.00659330228222643
 2.0
 0.9934066982962437
 0.006593301717003615
 2.0
 6.0
 0.0
 1.8632556999894367
 0.9999999999966785
 0.0
 0.0
 0.9837507449660211
 1.0175652623456577
 0.012912169339235276
 0.0
 4.987087831665707
 2.536903750253608
 1.9870878310476159
 0.0
 0.0
 1.0129121692230412
 1.860491123496003
 3.3858079339292484
 0.0
q_opt: 1-dimensional DenseAxisArray{Float64,1,...} with index sets:
    Dimension 1, [(43, 15), (43, 14), (44, 15), (44, 13), (44, 3), (40, 14), (40, 2), (41, 14), (42, 6), (37, 13)  …  (4, 13), (5, 2), (5, 7), (5, 9), (6, 11), (1, 1), (1, 6), (1, 3), (2, 1), (2, 15)]
And data, a 71-element Vector{Float64}:
 0.0
 0.0
 0.0
 0.7646105571876249
 0.5895758685039556
 1.0
 0.0
 0.0
 0.05984227720705543
 0.23538944291044606
 0.0
 1.0
 0.0
 0.0
 0.3750000000222828
 0.0
 0.0
 0.0
 0.7735896529969374
 0.0
 0.0
 0.0
 1.0
 0.24188661360250643
 0.28429251994515936
 0.0
 0.22641034707819918
 0.0
 1.0
 0.13137865625037407
 0.5718316793433231
 0.0
 0.24909186245587958
 0.0
 0.0
 0.0
 0.0
 0.0
 0.42816832069429717
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.7581133864298149
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 1.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.0
 0.6195294812937463
 0.0
 0.0
 0.2808652028752035
 0.4104241315287888
 0.0
 1.0



=====Finished running Instance #538=====




